function detectIE(){var t=window.navigator.userAgent,e=t.indexOf("MSIE ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);var i=t.indexOf("Trident/");if(i>0){var n=t.indexOf("rv:");return parseInt(t.substring(n+3,t.indexOf(".",n)),10)}var o=t.indexOf("Edge/");return o>0?parseInt(t.substring(o+5,t.indexOf(".",o)),10):!1}function google_analitycs_click(t,e,i){e&&t&&i&&ga("send","event",t,e,i)}function TrackEventGA(t,e,i,n){"use strict";"undefined"!=typeof _gaq?_gaq.push(["_trackEvent",t,e,i,n]):"undefined"!=typeof ga&&ga("send","event",t,e,i,n)}function cookie_init(){getCookie("_screen")||(console.log("Save Cookie!"),$.cookie("_screen",$(window).width()+"x"+$(window).height(),{expires:7,path:"/",domain:".pumpic.com"}))}function copy_to_clipboard_init(){var t=new ZeroClipboard($(".copy-to-clipboard"));t.on("copy",function(t){var e=t.clipboardData;e.setData("text/plain",$(".copy-this").val())}),t.on("aftercopy",function(t){$(".copy-done").show().fadeOut(1500)})}function cookie_clear(){$.cookie("popUp")&&$.removeCookie("popUp",{path:"/"})}function setCookie(t,e){$.cookie(t,e,{expires:7,path:"/"})}function getCookie(t){return $.cookie(t)?$.cookie(t):!1}function hashchange_onLoadInit(){}function hashchange_AfterInit(){var t=_parceHash($data_hash),e=$(".box-popUp"),i=e.find("#box-status-auth"),n=e.find("#box-status-registration"),o=e.find("#box-status-free-trial-registration");if(isset(t.popUp)&&"true"==_hasUser){if("auth"==t.popUp&&(ga("send","event","form","submit","login-success"),i.length||(i=e.append(_htmlPopUp.boxStatusAuth).find("#box-status-auth")),isset(i))){i.find(".title"),i.find(".info");i.bPopup({modalClose:!0,opacity:.6,follow:[!1,!1],positionStyle:"fixed",onOpen:function(){},closeClass:"close",onClose:function(){}})}if("registration"==t.popUp&&(ga("send","event","form","submit","registration-success"),n.length||(n=e.append(_htmlPopUp.boxStatusRegistration).find("#box-status-registration")),isset(n))){n.find(".title"),n.find(".info");n.bPopup({modalClose:!0,opacity:.6,follow:[!1,!1],positionStyle:"fixed",onOpen:function(){},closeClass:"close",onClose:function(){}})}if("free-trial-registration"==t.popUp&&(o.length||(o=e.append(_htmlPopUp.boxStatusFreeTrialRegistration).find("#box-status-free-trial-registration")),isset(o))){o.find(".title"),o.find(".info");o.bPopup({modalClose:!0,opacity:.6,follow:[!1,!1],positionStyle:"fixed",onOpen:function(){ga("send","event","trial","popup","free-trial-registration-success")},closeClass:"close",onClose:function(){}})}}}function _parceHash(t){var e={};if(t.length)for(var i=t.split("&"),n=0;n<i.length;n++){var o=i[n].split("=");e[o[0]]=o[1]}return e}function isset(t){return"undefined"!=typeof t?t.length>0:!1}function parseUrlQuery(){var t={};if(location.search)for(var e=location.search.substr(1).split("&"),i=0;i<e.length;i++){var n=e[i].split("=");t[n[0]]=n[1]}return t}function clickActive(t,e){$(t).length>0&&($.each($(t),function(t,e){$(e).hasClass("active")&&$(e).removeClass("active")}),e.addClass("active"))}function parseQuery(t){var e={};if("string"==typeof t)for(var i=t.split("&"),n=0;n<i.length;n++){var o=i[n].split("=");e[o[0]]=o[1]}else"object"==typeof t&&$.each(t,function(t,i){i.name&&(e[i.name]=i.value?i.value:null)});return e}function getAjaxForm(path,params,options){options||(options={});var settings=$.extend({dataType:"json",async:!1,crossDomain:!1,type:"POST",cache:!0},options||{});if(console.log(settings),!path)return console.log("enter url AJAX!"),null;var res=$.ajax({url:path,dataType:settings.dataType,async:settings.async,crossDomain:settings.crossDomain,type:settings.type,cache:settings.cache,success:function(){},complete:function(){},data:{params:params}}).responseText;console.log(res),res=eval("["+res+"]");var obj=res[0];return obj}function _getAJAX(t,e,i){i||(i={});var n=$.extend({dataType:"jsonp",jsonp:"callback",async:!1,crossDomain:!1,type:"POST",cache:!0},i||{});return console.log(n),t?$.ajax({type:n.type,async:n.async,url:t,data:{params:e},dataType:n.dataType,jsonp:n.jsonp,crossDomain:n.crossDomain,cache:n.cache}):(console.log("enter url AJAX!"),null)}function getJsonp(t){if("object"!=typeof t)return void die("Data not object!");var e="http://a.pumpic.dev/index.php";return $.ajax({type:"GET",async:!1,url:e,data:t,dataType:"jsonp",jsonp:"callback",crossDomain:!0})}function reloadCaptcha(t,e){if(!t.length)return!1;var i=t.parents("form"),n="/captcha.html?"+Math.random();$(t).attr("attr-width")&&$(t).attr("attr-height")&&(n="/captcha.html?width="+$(t).attr("attr-width")+"&height="+$(t).attr("attr-height")+"&"+Math.random()),$(".box-captcha").find("#img-captcha").attr("src",n),e&&i.find('input[name="captcha"]').focus()}function die(t){console.log(t)}function popUpValidate(){$("form.block-popup-form").validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,email:{required:!0,email:!0},messages:{email:{required:"The Email field is empty",email:"Please enter correct email"}},errorClass:"error",validClass:"success",invalidHandler:function(t,e){$("form.block-popup-form div.error").length&&$("form.block-popup-form div.error").html(" ").hide()},showErrors:function(t,e){var i=null;$.each(e,function(){i=this.message+"<br />"}),null!==i&&$("form.block-popup-form div.error").html(i).show()},submitHandler:function(t){var e=$(t),i=parseQuery(e.serializeArray());$("form.block-popup-form div.error").length&&$("form.block-popup-form div.error").html(" ").hide(),e.find("button").prop("disabled",!0);var n=_getAJAX("http://pumpic.com/popup_email_send.html",i,{dataType:"jsonp",crossDomain:!0});return"object"!=typeof n?($("form.block-popup-form div.error").html("Your email was not sent").show(),console.log("System error (CREATE:OBJECT)!"),e.find("button").prop("disabled",!1),!1):(n.done(function(t,i,n){if("success"!=i)return $("form.block-popup-form div.error").html("Your email was not sent").show(),console.log("System error "+i+"!"),e.find("button").prop("disabled",!1),!1;if(console.log(t),t.error)return"object"==typeof t.error?$.each(t.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$("form.block-popup-form div.error").html(i).show())}):$("form.block-popup-form div.error").html(t.error).show(),e.find("button").prop("disabled",!1),!1;if(t.success){var o=$(".box-popUp"),s=o.find("#box-email-success");s.length||(s=o.append(_htmlPopUp.email_success).find("#box-email-success")),$(".box-popUp > .popUp").is(":visible")&&$(".box-popUp > .popUp").bPopup({transition:"fadeOut"}).close(),s.bPopup({modalClose:!0,appending:!1,opacity:.6,follow:[!1,!1],positionStyle:"fixed",onOpen:function(){},closeClass:"close",onClose:function(){}})}}).fail(function(t,i,n){return $("form.block-popup-form div.error").html("Your email was not sent").show(),console.log("System error (JSOP:REQUEST)!"),e.find("button").prop("disabled",!1),!1}),void e.trigger("reset"))}})}function sliderMobileInit(t,e){var i="",n=new Array;isset(t)&&isset(e)&&e.find(".slide").each(function(t,e){var i=$(e).find(".bxItem");isset(i)&&i.each(function(t,e){n.push({src:$(e).find(".testimonial-photo").attr("src"),text:$(e).find(".testimonial-text").html()})})}),n.length>0&&($.each(n,function(t,e){if(e.src&&e.text){var n="";n+=mobile_slider.replace("{img_src}",e.src),i+=n.replace("{text}",e.text)}}),t.html(i))}function clearSliderMobile(t){isset(t)&&t.empty()}function runSliders(t){return t.bxSlider({slideWidth:1170,minSlides:1,controls:!1,infiniteLoop:!1,responsive:!0,wrapperClass:"bx-wrapper-testimonials",onSliderLoad:function(){$(".bx-controls > .bx-pager > .bx-pager-item").length<2&&$(".bx-controls > .bx-pager > .bx-pager-item").hide()},onSlideBefore:function(){},onSlideAfter:function(){}})}function isset(t){return"undefined"!=typeof t?t.length>0:!1}function parseUrlQuery(){var t={};if(location.search)for(var e=location.search.substr(1).split("&"),i=0;i<e.length;i++){var n=e[i].split("=");t[n[0]]=n[1]}return t}function parseQuery(t){var e={};if("string"==typeof t)for(var i=t.split("&"),n=0;n<i.length;n++){var o=i[n].split("=");e[o[0]]=o[1]}else"object"==typeof t&&$.each(t,function(t,i){i.name&&(e[i.name]=i.value?i.value:null)});return e}function getAjaxForm(path,params,options){options||(options={});var settings=$.extend({dataType:"json",async:!1,crossDomain:!1,type:"POST",cache:!0},options||{});if(console.log(settings),!path)return console.log("enter url AJAX!"),null;var res=$.ajax({url:path,dataType:settings.dataType,async:settings.async,crossDomain:settings.crossDomain,type:settings.type,cache:settings.cache,success:function(){},complete:function(){},data:{params:params}}).responseText;console.log(res),res=eval("["+res+"]");var obj=res[0];return obj}function _getAJAX(t,e,i){i||(i={});var n=$.extend({dataType:"jsonp",jsonp:"callback",async:!1,crossDomain:!1,type:"POST",cache:!0},i||{});return console.log(n),t?$.ajax({type:n.type,async:n.async,url:t,data:{params:e},dataType:n.dataType,jsonp:n.jsonp,crossDomain:n.crossDomain,cache:n.cache}):(console.log("enter url AJAX!"),null)}!function(t,e){"use strict";var i,n,o,s=t,a=s.document,r=s.navigator,l=s.setTimeout,d=s.clearTimeout,c=s.setInterval,u=s.clearInterval,h=s.getComputedStyle,f=s.encodeURIComponent,p=s.ActiveXObject,m=s.Error,g=s.Number.parseInt||s.parseInt,v=s.Number.parseFloat||s.parseFloat,b=s.Number.isNaN||s.isNaN,y=s.Date.now,w=s.Object.keys,x=s.Object.defineProperty,$=s.Object.prototype.hasOwnProperty,C=s.Array.prototype.slice,_=function(){var t=function(t){return t};if("function"==typeof s.wrap&&"function"==typeof s.unwrap)try{var e=a.createElement("div"),i=s.unwrap(e);1===e.nodeType&&i&&1===i.nodeType&&(t=s.unwrap)}catch(n){}return t}(),k=function(t){return C.call(t,0)},T=function(){var t,i,n,o,s,a,r=k(arguments),l=r[0]||{};for(t=1,i=r.length;i>t;t++)if(null!=(n=r[t]))for(o in n)$.call(n,o)&&(s=l[o],a=n[o],l!==a&&a!==e&&(l[o]=a));return l},S=function(t){var e,i,n,o;if("object"!=typeof t||null==t||"number"==typeof t.nodeType)e=t;else if("number"==typeof t.length)for(e=[],i=0,n=t.length;n>i;i++)$.call(t,i)&&(e[i]=S(t[i]));else{e={};for(o in t)$.call(t,o)&&(e[o]=S(t[o]))}return e},E=function(t,e){for(var i={},n=0,o=e.length;o>n;n++)e[n]in t&&(i[e[n]]=t[e[n]]);return i},I=function(t,e){var i={};for(var n in t)-1===e.indexOf(n)&&(i[n]=t[n]);return i},D=function(t){if(t)for(var e in t)$.call(t,e)&&delete t[e];return t},F=function(t,e){if(t&&1===t.nodeType&&t.ownerDocument&&e&&(1===e.nodeType&&e.ownerDocument&&e.ownerDocument===t.ownerDocument||9===e.nodeType&&!e.ownerDocument&&e===t.ownerDocument))do{if(t===e)return!0;t=t.parentNode}while(t);return!1},P=function(t){var e;return"string"==typeof t&&t&&(e=t.split("#")[0].split("?")[0],e=t.slice(0,t.lastIndexOf("/")+1)),e},A=function(t){var e,i;return"string"==typeof t&&t&&(i=t.match(/^(?:|[^:@]*@|.+\)@(?=http[s]?|file)|.+?\s+(?: at |@)(?:[^:\(]+ )*[\(]?)((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/),i&&i[1]?e=i[1]:(i=t.match(/\)@((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/),i&&i[1]&&(e=i[1]))),e},j=function(){var t,e;try{throw new m}catch(i){e=i}return e&&(t=e.sourceURL||e.fileName||A(e.stack)),t},q=function(){var t,i,n;if(a.currentScript&&(t=a.currentScript.src))return t;if(i=a.getElementsByTagName("script"),1===i.length)return i[0].src||e;if("readyState"in i[0])for(n=i.length;n--;)if("interactive"===i[n].readyState&&(t=i[n].src))return t;return"loading"===a.readyState&&(t=i[i.length-1].src)?t:(t=j())?t:e},O=function(){var t,i,n,o=a.getElementsByTagName("script");for(t=o.length;t--;){if(!(n=o[t].src)){i=null;break}if(n=P(n),null==i)i=n;else if(i!==n){i=null;break}}return i||e},M=function(){var t=P(q())||O()||"";return t+"ZeroClipboard.swf"},L=function(){var t=/win(dows|[\s]?(nt|me|ce|xp|vista|[\d]+))/i;return!!r&&(t.test(r.appVersion||"")||t.test(r.platform||"")||-1!==(r.userAgent||"").indexOf("Windows"))},z=function(){return null==t.opener&&(!!t.top&&t!=t.top||!!t.parent&&t!=t.parent)}(),N={bridge:null,version:"0.0.0",pluginType:"unknown",disabled:null,outdated:null,sandboxed:null,unavailable:null,degraded:null,deactivated:null,overdue:null,ready:null},H="11.0.0",R={},U={},Y=null,B=0,W=0,Q={ready:"Flash communication is established",error:{"flash-disabled":"Flash is disabled or not installed. May also be attempting to run Flash in a sandboxed iframe, which is impossible.","flash-outdated":"Flash is too outdated to support ZeroClipboard","flash-sandboxed":"Attempting to run Flash in a sandboxed iframe, which is impossible","flash-unavailable":"Flash is unable to communicate bidirectionally with JavaScript","flash-degraded":"Flash is unable to preserve data fidelity when communicating with JavaScript","flash-deactivated":"Flash is too outdated for your browser and/or is configured as click-to-activate.\nThis may also mean that the ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity.\nMay also be attempting to run Flash in a sandboxed iframe, which is impossible.","flash-overdue":"Flash communication was established but NOT within the acceptable time limit","version-mismatch":"ZeroClipboard JS version number does not match ZeroClipboard SWF version number","clipboard-error":"At least one error was thrown while ZeroClipboard was attempting to inject your data into the clipboard","config-mismatch":"ZeroClipboard configuration does not match Flash's reality","swf-not-found":"The ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity"}},V=["flash-unavailable","flash-degraded","flash-overdue","version-mismatch","config-mismatch","clipboard-error"],Z=["flash-disabled","flash-outdated","flash-sandboxed","flash-unavailable","flash-degraded","flash-deactivated","flash-overdue"],X=new RegExp("^flash-("+Z.map(function(t){return t.replace(/^flash-/,"")}).join("|")+")$"),J=new RegExp("^flash-("+Z.slice(1).map(function(t){return t.replace(/^flash-/,"")}).join("|")+")$"),G={swfPath:M(),trustedDomains:t.location.host?[t.location.host]:[],cacheBust:!0,forceEnhancedClipboard:!1,flashLoadTimeout:3e4,autoActivate:!0,bubbleEvents:!0,fixLineEndings:!0,containerId:"global-zeroclipboard-html-bridge",containerClass:"global-zeroclipboard-container",swfObjectId:"global-zeroclipboard-flash-bridge",hoverClass:"zeroclipboard-is-hover",activeClass:"zeroclipboard-is-active",forceHandCursor:!1,title:null,zIndex:999999999},K=function(t){if("object"==typeof t&&null!==t)for(var e in t)if($.call(t,e))if(/^(?:forceHandCursor|title|zIndex|bubbleEvents|fixLineEndings)$/.test(e))G[e]=t[e];else if(null==N.bridge)if("containerId"===e||"swfObjectId"===e){if(!pt(t[e]))throw new Error("The specified `"+e+"` value is not valid as an HTML4 Element ID");G[e]=t[e]}else G[e]=t[e];return"string"==typeof t&&t?$.call(G,t)?G[t]:void 0:S(G)},tt=function(){return Qt(),{browser:E(r,["userAgent","platform","appName","appVersion"]),flash:I(N,["bridge"]),zeroclipboard:{version:Zt.version,config:Zt.config()}}},et=function(){return!!(N.disabled||N.outdated||N.sandboxed||N.unavailable||N.degraded||N.deactivated)},it=function(t,n){var o,s,a,r={};if("string"==typeof t&&t)a=t.toLowerCase().split(/\s+/);else if("object"==typeof t&&t&&"undefined"==typeof n)for(o in t)$.call(t,o)&&"string"==typeof o&&o&&"function"==typeof t[o]&&Zt.on(o,t[o]);if(a&&a.length){for(o=0,s=a.length;s>o;o++)t=a[o].replace(/^on/,""),r[t]=!0,R[t]||(R[t]=[]),R[t].push(n);if(r.ready&&N.ready&&Zt.emit({type:"ready"}),r.error){for(o=0,s=Z.length;s>o;o++)if(N[Z[o].replace(/^flash-/,"")]===!0){Zt.emit({type:"error",name:Z[o]});break}i!==e&&Zt.version!==i&&Zt.emit({type:"error",name:"version-mismatch",jsVersion:Zt.version,swfVersion:i})}}return Zt},nt=function(t,e){var i,n,o,s,a;if(0===arguments.length)s=w(R);else if("string"==typeof t&&t)s=t.split(/\s+/);else if("object"==typeof t&&t&&"undefined"==typeof e)for(i in t)$.call(t,i)&&"string"==typeof i&&i&&"function"==typeof t[i]&&Zt.off(i,t[i]);if(s&&s.length)for(i=0,n=s.length;n>i;i++)if(t=s[i].toLowerCase().replace(/^on/,""),a=R[t],a&&a.length)if(e)for(o=a.indexOf(e);-1!==o;)a.splice(o,1),o=a.indexOf(e,o);else a.length=0;return Zt},ot=function(t){var e;return e="string"==typeof t&&t?S(R[t])||null:S(R)},st=function(t){var e,i,n;return t=mt(t),t&&!$t(t)?"ready"===t.type&&N.overdue===!0?Zt.emit({type:"error",name:"flash-overdue"}):(e=T({},t),wt.call(this,e),"copy"===t.type&&(n=Dt(U),i=n.data,Y=n.formatMap),i):void 0},at=function(){var t=N.sandboxed;if(Qt(),"boolean"!=typeof N.ready&&(N.ready=!1),N.sandboxed!==t&&N.sandboxed===!0)N.ready=!1,Zt.emit({type:"error",name:"flash-sandboxed"});else if(!Zt.isFlashUnusable()&&null===N.bridge){var e=G.flashLoadTimeout;"number"==typeof e&&e>=0&&(B=l(function(){"boolean"!=typeof N.deactivated&&(N.deactivated=!0),N.deactivated===!0&&Zt.emit({type:"error",name:"flash-deactivated"})},e)),N.overdue=!1,Et()}},rt=function(){Zt.clearData(),Zt.blur(),Zt.emit("destroy"),It(),Zt.off()},lt=function(t,e){var i;if("object"==typeof t&&t&&"undefined"==typeof e)i=t,Zt.clearData();else{if("string"!=typeof t||!t)return;i={},i[t]=e}for(var n in i)"string"==typeof n&&n&&$.call(i,n)&&"string"==typeof i[n]&&i[n]&&(U[n]=Wt(i[n]))},dt=function(t){"undefined"==typeof t?(D(U),Y=null):"string"==typeof t&&$.call(U,t)&&delete U[t]},ct=function(t){return"undefined"==typeof t?S(U):"string"==typeof t&&$.call(U,t)?U[t]:void 0},ut=function(t){if(t&&1===t.nodeType){n&&(Lt(n,G.activeClass),n!==t&&Lt(n,G.hoverClass)),n=t,Mt(t,G.hoverClass);var e=t.getAttribute("title")||G.title;if("string"==typeof e&&e){var i=St(N.bridge);i&&i.setAttribute("title",e)}var o=G.forceHandCursor===!0||"pointer"===zt(t,"cursor");Yt(o),Ut()}},ht=function(){var t=St(N.bridge);t&&(t.removeAttribute("title"),t.style.left="0px",t.style.top="-9999px",t.style.width="1px",t.style.height="1px"),n&&(Lt(n,G.hoverClass),Lt(n,G.activeClass),n=null)},ft=function(){return n||null},pt=function(t){return"string"==typeof t&&t&&/^[A-Za-z][A-Za-z0-9_:\-\.]*$/.test(t)},mt=function(t){var e;if("string"==typeof t&&t?(e=t,t={}):"object"==typeof t&&t&&"string"==typeof t.type&&t.type&&(e=t.type),e){e=e.toLowerCase(),!t.target&&(/^(copy|aftercopy|_click)$/.test(e)||"error"===e&&"clipboard-error"===t.name)&&(t.target=o),T(t,{type:e,target:t.target||n||null,relatedTarget:t.relatedTarget||null,currentTarget:N&&N.bridge||null,timeStamp:t.timeStamp||y()||null});var i=Q[t.type];return"error"===t.type&&t.name&&i&&(i=i[t.name]),i&&(t.message=i),"ready"===t.type&&T(t,{target:null,version:N.version}),"error"===t.type&&(X.test(t.name)&&T(t,{target:null,minimumVersion:H}),J.test(t.name)&&T(t,{version:N.version})),"copy"===t.type&&(t.clipboardData={setData:Zt.setData,clearData:Zt.clearData}),"aftercopy"===t.type&&(t=Ft(t,Y)),t.target&&!t.relatedTarget&&(t.relatedTarget=gt(t.target)),vt(t)}},gt=function(t){var e=t&&t.getAttribute&&t.getAttribute("data-clipboard-target");return e?a.getElementById(e):null},vt=function(t){if(t&&/^_(?:click|mouse(?:over|out|down|up|move))$/.test(t.type)){var i=t.target,n="_mouseover"===t.type&&t.relatedTarget?t.relatedTarget:e,o="_mouseout"===t.type&&t.relatedTarget?t.relatedTarget:e,r=Nt(i),l=s.screenLeft||s.screenX||0,d=s.screenTop||s.screenY||0,c=a.body.scrollLeft+a.documentElement.scrollLeft,u=a.body.scrollTop+a.documentElement.scrollTop,h=r.left+("number"==typeof t._stageX?t._stageX:0),f=r.top+("number"==typeof t._stageY?t._stageY:0),p=h-c,m=f-u,g=l+p,v=d+m,b="number"==typeof t.movementX?t.movementX:0,y="number"==typeof t.movementY?t.movementY:0;delete t._stageX,delete t._stageY,T(t,{srcElement:i,fromElement:n,toElement:o,screenX:g,screenY:v,pageX:h,pageY:f,clientX:p,clientY:m,x:p,y:m,movementX:b,movementY:y,offsetX:0,offsetY:0,layerX:0,layerY:0})}return t},bt=function(t){var e=t&&"string"==typeof t.type&&t.type||"";return!/^(?:(?:before)?copy|destroy)$/.test(e)},yt=function(t,e,i,n){n?l(function(){t.apply(e,i)},0):t.apply(e,i)},wt=function(t){if("object"==typeof t&&t&&t.type){var e=bt(t),i=R["*"]||[],n=R[t.type]||[],o=i.concat(n);if(o&&o.length){var a,r,l,d,c,u=this;for(a=0,r=o.length;r>a;a++)l=o[a],d=u,"string"==typeof l&&"function"==typeof s[l]&&(l=s[l]),"object"==typeof l&&l&&"function"==typeof l.handleEvent&&(d=l,l=l.handleEvent),"function"==typeof l&&(c=T({},t),yt(l,d,[c],e))}return this}},xt=function(t){var e=null;return(z===!1||t&&"error"===t.type&&t.name&&-1!==V.indexOf(t.name))&&(e=!1),e},$t=function(t){var e=t.target||n||null,s="swf"===t._source;switch(delete t._source,t.type){case"error":var a="flash-sandboxed"===t.name||xt(t);"boolean"==typeof a&&(N.sandboxed=a),-1!==Z.indexOf(t.name)?T(N,{disabled:"flash-disabled"===t.name,outdated:"flash-outdated"===t.name,unavailable:"flash-unavailable"===t.name,degraded:"flash-degraded"===t.name,deactivated:"flash-deactivated"===t.name,overdue:"flash-overdue"===t.name,ready:!1}):"version-mismatch"===t.name&&(i=t.swfVersion,T(N,{disabled:!1,outdated:!1,unavailable:!1,degraded:!1,deactivated:!1,overdue:!1,ready:!1})),Rt();break;case"ready":i=t.swfVersion;var r=N.deactivated===!0;T(N,{disabled:!1,outdated:!1,sandboxed:!1,unavailable:!1,degraded:!1,deactivated:!1,overdue:r,ready:!r}),Rt();break;case"beforecopy":o=e;break;case"copy":var l,d,c=t.relatedTarget;!U["text/html"]&&!U["text/plain"]&&c&&(d=c.value||c.outerHTML||c.innerHTML)&&(l=c.value||c.textContent||c.innerText)?(t.clipboardData.clearData(),t.clipboardData.setData("text/plain",l),d!==l&&t.clipboardData.setData("text/html",d)):!U["text/plain"]&&t.target&&(l=t.target.getAttribute("data-clipboard-text"))&&(t.clipboardData.clearData(),t.clipboardData.setData("text/plain",l));break;case"aftercopy":Ct(t),Zt.clearData(),e&&e!==Ot()&&e.focus&&e.focus();break;case"_mouseover":Zt.focus(e),G.bubbleEvents===!0&&s&&(e&&e!==t.relatedTarget&&!F(t.relatedTarget,e)&&_t(T({},t,{type:"mouseenter",bubbles:!1,cancelable:!1})),_t(T({},t,{type:"mouseover"})));break;case"_mouseout":Zt.blur(),G.bubbleEvents===!0&&s&&(e&&e!==t.relatedTarget&&!F(t.relatedTarget,e)&&_t(T({},t,{type:"mouseleave",bubbles:!1,cancelable:!1})),_t(T({},t,{type:"mouseout"})));break;case"_mousedown":Mt(e,G.activeClass),G.bubbleEvents===!0&&s&&_t(T({},t,{type:t.type.slice(1)}));break;case"_mouseup":Lt(e,G.activeClass),G.bubbleEvents===!0&&s&&_t(T({},t,{type:t.type.slice(1)}));break;case"_click":o=null,G.bubbleEvents===!0&&s&&_t(T({},t,{type:t.type.slice(1)}));break;case"_mousemove":G.bubbleEvents===!0&&s&&_t(T({},t,{type:t.type.slice(1)}))}return/^_(?:click|mouse(?:over|out|down|up|move))$/.test(t.type)?!0:void 0},Ct=function(t){if(t.errors&&t.errors.length>0){var e=S(t);T(e,{type:"error",name:"clipboard-error"}),delete e.success,l(function(){Zt.emit(e)},0)}},_t=function(t){if(t&&"string"==typeof t.type&&t){var e,i=t.target||null,n=i&&i.ownerDocument||a,o={view:n.defaultView||s,canBubble:!0,cancelable:!0,detail:"click"===t.type?1:0,button:"number"==typeof t.which?t.which-1:"number"==typeof t.button?t.button:n.createEvent?0:1},r=T(o,t);i&&n.createEvent&&i.dispatchEvent&&(r=[r.type,r.canBubble,r.cancelable,r.view,r.detail,r.screenX,r.screenY,r.clientX,r.clientY,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.button,r.relatedTarget],e=n.createEvent("MouseEvents"),e.initMouseEvent&&(e.initMouseEvent.apply(e,r),e._source="js",i.dispatchEvent(e)))}},kt=function(){var t=G.flashLoadTimeout;if("number"==typeof t&&t>=0){var e=Math.min(1e3,t/10),i=G.swfObjectId+"_fallbackContent";W=c(function(){var t=a.getElementById(i);Ht(t)&&(Rt(),N.deactivated=null,Zt.emit({type:"error",name:"swf-not-found"}))},e)}},Tt=function(){var t=a.createElement("div");return t.id=G.containerId,t.className=G.containerClass,t.style.position="absolute",t.style.left="0px",t.style.top="-9999px",t.style.width="1px",t.style.height="1px",t.style.zIndex=""+Bt(G.zIndex),t},St=function(t){for(var e=t&&t.parentNode;e&&"OBJECT"===e.nodeName&&e.parentNode;)e=e.parentNode;return e||null},Et=function(){var t,e=N.bridge,i=St(e);if(!e){var n=qt(s.location.host,G),o="never"===n?"none":"all",r=At(T({jsVersion:Zt.version},G)),l=G.swfPath+Pt(G.swfPath,G);i=Tt();var d=a.createElement("div");i.appendChild(d),a.body.appendChild(i);var c=a.createElement("div"),u="activex"===N.pluginType;c.innerHTML='<object id="'+G.swfObjectId+'" name="'+G.swfObjectId+'" width="100%" height="100%" '+(u?'classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"':'type="application/x-shockwave-flash" data="'+l+'"')+">"+(u?'<param name="movie" value="'+l+'"/>':"")+'<param name="allowScriptAccess" value="'+n+'"/><param name="allowNetworking" value="'+o+'"/><param name="menu" value="false"/><param name="wmode" value="transparent"/><param name="flashvars" value="'+r+'"/><div id="'+G.swfObjectId+'_fallbackContent">&nbsp;</div></object>',e=c.firstChild,c=null,_(e).ZeroClipboard=Zt,i.replaceChild(e,d),kt()}return e||(e=a[G.swfObjectId],e&&(t=e.length)&&(e=e[t-1]),!e&&i&&(e=i.firstChild)),N.bridge=e||null,e},It=function(){var t=N.bridge;if(t){var n=St(t);n&&("activex"===N.pluginType&&"readyState"in t?(t.style.display="none",function o(){if(4===t.readyState){for(var e in t)"function"==typeof t[e]&&(t[e]=null);t.parentNode&&t.parentNode.removeChild(t),n.parentNode&&n.parentNode.removeChild(n)}else l(o,10)}()):(t.parentNode&&t.parentNode.removeChild(t),n.parentNode&&n.parentNode.removeChild(n))),Rt(),N.ready=null,N.bridge=null,N.deactivated=null,i=e}},Dt=function(t){var e={},i={};if("object"==typeof t&&t){for(var n in t)if(n&&$.call(t,n)&&"string"==typeof t[n]&&t[n])switch(n.toLowerCase()){case"text/plain":case"text":case"air:text":case"flash:text":e.text=t[n],i.text=n;break;case"text/html":case"html":case"air:html":case"flash:html":e.html=t[n],i.html=n;break;case"application/rtf":case"text/rtf":case"rtf":case"richtext":case"air:rtf":case"flash:rtf":e.rtf=t[n],i.rtf=n}return{data:e,formatMap:i}}},Ft=function(t,e){if("object"!=typeof t||!t||"object"!=typeof e||!e)return t;var i={};for(var n in t)if($.call(t,n))if("errors"===n){i[n]=t[n]?t[n].slice():[];for(var o=0,s=i[n].length;s>o;o++)i[n][o].format=e[i[n][o].format]}else if("success"!==n&&"data"!==n)i[n]=t[n];else{i[n]={};var a=t[n];for(var r in a)r&&$.call(a,r)&&$.call(e,r)&&(i[n][e[r]]=a[r])}return i},Pt=function(t,e){var i=null==e||e&&e.cacheBust===!0;return i?(-1===t.indexOf("?")?"?":"&")+"noCache="+y():""},At=function(t){var e,i,n,o,a="",r=[];if(t.trustedDomains&&("string"==typeof t.trustedDomains?o=[t.trustedDomains]:"object"==typeof t.trustedDomains&&"length"in t.trustedDomains&&(o=t.trustedDomains)),o&&o.length)for(e=0,i=o.length;i>e;e++)if($.call(o,e)&&o[e]&&"string"==typeof o[e]){if(n=jt(o[e]),!n)continue;if("*"===n){r.length=0,r.push(n);break}r.push.apply(r,[n,"//"+n,s.location.protocol+"//"+n])}return r.length&&(a+="trustedOrigins="+f(r.join(","))),t.forceEnhancedClipboard===!0&&(a+=(a?"&":"")+"forceEnhancedClipboard=true"),"string"==typeof t.swfObjectId&&t.swfObjectId&&(a+=(a?"&":"")+"swfObjectId="+f(t.swfObjectId)),"string"==typeof t.jsVersion&&t.jsVersion&&(a+=(a?"&":"")+"jsVersion="+f(t.jsVersion)),a},jt=function(t){if(null==t||""===t)return null;if(t=t.replace(/^\s+|\s+$/g,""),""===t)return null;var e=t.indexOf("//");t=-1===e?t:t.slice(e+2);var i=t.indexOf("/");return t=-1===i?t:-1===e||0===i?null:t.slice(0,i),t&&".swf"===t.slice(-4).toLowerCase()?null:t||null},qt=function(){var t=function(t){var e,i,n,o=[];if("string"==typeof t&&(t=[t]),"object"!=typeof t||!t||"number"!=typeof t.length)return o;for(e=0,i=t.length;i>e;e++)if($.call(t,e)&&(n=jt(t[e]))){if("*"===n){o.length=0,o.push("*");break}-1===o.indexOf(n)&&o.push(n)}return o};return function(e,i){var n=jt(i.swfPath);null===n&&(n=e);var o=t(i.trustedDomains),s=o.length;if(s>0){if(1===s&&"*"===o[0])return"always";if(-1!==o.indexOf(e))return 1===s&&e===n?"sameDomain":"always"}return"never"}}(),Ot=function(){try{return a.activeElement}catch(t){return null}},Mt=function(t,e){var i,n,o,s=[];if("string"==typeof e&&e&&(s=e.split(/\s+/)),t&&1===t.nodeType&&s.length>0){for(o=(" "+(t.className||"")+" ").replace(/[\t\r\n\f]/g," "),i=0,n=s.length;n>i;i++)-1===o.indexOf(" "+s[i]+" ")&&(o+=s[i]+" ");o=o.replace(/^\s+|\s+$/g,""),o!==t.className&&(t.className=o)}return t},Lt=function(t,e){var i,n,o,s=[];if("string"==typeof e&&e&&(s=e.split(/\s+/)),t&&1===t.nodeType&&s.length>0&&t.className){for(o=(" "+t.className+" ").replace(/[\t\r\n\f]/g," "),i=0,n=s.length;n>i;i++)o=o.replace(" "+s[i]+" "," ");o=o.replace(/^\s+|\s+$/g,""),o!==t.className&&(t.className=o)}return t},zt=function(t,e){var i=h(t,null).getPropertyValue(e);return"cursor"!==e||i&&"auto"!==i||"A"!==t.nodeName?i:"pointer"},Nt=function(t){var e={left:0,top:0,width:0,height:0};if(t.getBoundingClientRect){var i=t.getBoundingClientRect(),n=s.pageXOffset,o=s.pageYOffset,r=a.documentElement.clientLeft||0,l=a.documentElement.clientTop||0,d=0,c=0;if("relative"===zt(a.body,"position")){var u=a.body.getBoundingClientRect(),h=a.documentElement.getBoundingClientRect();d=u.left-h.left||0,c=u.top-h.top||0}e.left=i.left+n-r-d,e.top=i.top+o-l-c,e.width="width"in i?i.width:i.right-i.left,e.height="height"in i?i.height:i.bottom-i.top}return e},Ht=function(t){if(!t)return!1;var e=h(t,null);if(!e)return!1;var i=v(e.height)>0,n=v(e.width)>0,o=v(e.top)>=0,s=v(e.left)>=0,a=i&&n&&o&&s,r=a?null:Nt(t),l="none"!==e.display&&"collapse"!==e.visibility&&(a||!!r&&(i||r.height>0)&&(n||r.width>0)&&(o||r.top>=0)&&(s||r.left>=0));return l},Rt=function(){d(B),B=0,u(W),W=0},Ut=function(){var t;if(n&&(t=St(N.bridge))){var e=Nt(n);T(t.style,{width:e.width+"px",height:e.height+"px",top:e.top+"px",left:e.left+"px",zIndex:""+Bt(G.zIndex)})}},Yt=function(t){N.ready===!0&&(N.bridge&&"function"==typeof N.bridge.setHandCursor?N.bridge.setHandCursor(t):N.ready=!1)},Bt=function(t){if(/^(?:auto|inherit)$/.test(t))return t;var e;return"number"!=typeof t||b(t)?"string"==typeof t&&(e=Bt(g(t,10))):e=t,"number"==typeof e?e:"auto"},Wt=function(t){var e=/(\r\n|\r|\n)/g;return"string"==typeof t&&G.fixLineEndings===!0&&(L()?/((^|[^\r])\n|\r([^\n]|$))/.test(t)&&(t=t.replace(e,"\r\n")):/\r/.test(t)&&(t=t.replace(e,"\n"))),t},Qt=function(e){var i,n,o,s=N.sandboxed,a=null;if(e=e===!0,z===!1)a=!1;else{try{n=t.frameElement||null}catch(r){o={name:r.name,message:r.message}}if(n&&1===n.nodeType&&"IFRAME"===n.nodeName)try{a=n.hasAttribute("sandbox")}catch(r){a=null}else{try{i=document.domain||null}catch(r){i=null}(null===i||o&&"SecurityError"===o.name&&/(^|[\s\(\[@])sandbox(es|ed|ing|[\s\.,!\)\]@]|$)/.test(o.message.toLowerCase()))&&(a=!0)}}return N.sandboxed=a,s===a||e||Vt(p),a},Vt=function(t){function e(t){var e=t.match(/[\d]+/g);return e.length=3,e.join(".")}function i(t){return!!t&&(t=t.toLowerCase())&&(/^(pepflashplayer\.dll|libpepflashplayer\.so|pepperflashplayer\.plugin)$/.test(t)||"chrome.plugin"===t.slice(-13))}function n(t){t&&(l=!0,t.version&&(u=e(t.version)),!u&&t.description&&(u=e(t.description)),t.filename&&(c=i(t.filename)))}var o,s,a,l=!1,d=!1,c=!1,u="";if(r.plugins&&r.plugins.length)o=r.plugins["Shockwave Flash"],n(o),r.plugins["Shockwave Flash 2.0"]&&(l=!0,u="2.0.0.11");else if(r.mimeTypes&&r.mimeTypes.length)a=r.mimeTypes["application/x-shockwave-flash"],o=a&&a.enabledPlugin,n(o);else if("undefined"!=typeof t){d=!0;try{s=new t("ShockwaveFlash.ShockwaveFlash.7"),l=!0,u=e(s.GetVariable("$version"))}catch(h){try{s=new t("ShockwaveFlash.ShockwaveFlash.6"),l=!0,u="6.0.21"}catch(f){try{s=new t("ShockwaveFlash.ShockwaveFlash"),l=!0,u=e(s.GetVariable("$version"))}catch(p){d=!1}}}}N.disabled=l!==!0,N.outdated=u&&v(u)<v(H),N.version=u||"0.0.0",N.pluginType=c?"pepper":d?"activex":l?"netscape":"unknown"};Vt(p),Qt(!0);var Zt=function(){return this instanceof Zt?void("function"==typeof Zt._createClient&&Zt._createClient.apply(this,k(arguments))):new Zt};x(Zt,"version",{value:"2.3.0-beta.1",writable:!1,configurable:!0,enumerable:!0}),Zt.config=function(){return K.apply(this,k(arguments))},Zt.state=function(){return tt.apply(this,k(arguments))},Zt.isFlashUnusable=function(){return et.apply(this,k(arguments))},Zt.on=function(){return it.apply(this,k(arguments))},Zt.off=function(){return nt.apply(this,k(arguments))},Zt.handlers=function(){return ot.apply(this,k(arguments));
},Zt.emit=function(){return st.apply(this,k(arguments))},Zt.create=function(){return at.apply(this,k(arguments))},Zt.destroy=function(){return rt.apply(this,k(arguments))},Zt.setData=function(){return lt.apply(this,k(arguments))},Zt.clearData=function(){return dt.apply(this,k(arguments))},Zt.getData=function(){return ct.apply(this,k(arguments))},Zt.focus=Zt.activate=function(){return ut.apply(this,k(arguments))},Zt.blur=Zt.deactivate=function(){return ht.apply(this,k(arguments))},Zt.activeElement=function(){return ft.apply(this,k(arguments))};var Xt=0,Jt={},Gt=0,Kt={},te={};T(G,{autoActivate:!0});var ee=function(t){var e=this;e.id=""+Xt++,Jt[e.id]={instance:e,elements:[],handlers:{}},t&&e.clip(t),Zt.on("*",function(t){return e.emit(t)}),Zt.on("destroy",function(){e.destroy()}),Zt.create()},ie=function(t,n){var o,s,a,r={},l=Jt[this.id],d=l&&l.handlers;if(!l)throw new Error("Attempted to add new listener(s) to a destroyed ZeroClipboard client instance");if("string"==typeof t&&t)a=t.toLowerCase().split(/\s+/);else if("object"==typeof t&&t&&"undefined"==typeof n)for(o in t)$.call(t,o)&&"string"==typeof o&&o&&"function"==typeof t[o]&&this.on(o,t[o]);if(a&&a.length){for(o=0,s=a.length;s>o;o++)t=a[o].replace(/^on/,""),r[t]=!0,d[t]||(d[t]=[]),d[t].push(n);if(r.ready&&N.ready&&this.emit({type:"ready",client:this}),r.error){for(o=0,s=Z.length;s>o;o++)if(N[Z[o].replace(/^flash-/,"")]){this.emit({type:"error",name:Z[o],client:this});break}i!==e&&Zt.version!==i&&this.emit({type:"error",name:"version-mismatch",jsVersion:Zt.version,swfVersion:i})}}return this},ne=function(t,e){var i,n,o,s,a,r=Jt[this.id],l=r&&r.handlers;if(!l)return this;if(0===arguments.length)s=w(l);else if("string"==typeof t&&t)s=t.split(/\s+/);else if("object"==typeof t&&t&&"undefined"==typeof e)for(i in t)$.call(t,i)&&"string"==typeof i&&i&&"function"==typeof t[i]&&this.off(i,t[i]);if(s&&s.length)for(i=0,n=s.length;n>i;i++)if(t=s[i].toLowerCase().replace(/^on/,""),a=l[t],a&&a.length)if(e)for(o=a.indexOf(e);-1!==o;)a.splice(o,1),o=a.indexOf(e,o);else a.length=0;return this},oe=function(t){var e=null,i=Jt[this.id]&&Jt[this.id].handlers;return i&&(e="string"==typeof t&&t?i[t]?i[t].slice(0):[]:S(i)),e},se=function(t){if(ce.call(this,t)){"object"==typeof t&&t&&"string"==typeof t.type&&t.type&&(t=T({},t));var e=T({},mt(t),{client:this});ue.call(this,e)}return this},ae=function(t){if(!Jt[this.id])throw new Error("Attempted to clip element(s) to a destroyed ZeroClipboard client instance");t=he(t);for(var e=0;e<t.length;e++)if($.call(t,e)&&t[e]&&1===t[e].nodeType){t[e].zcClippingId?-1===Kt[t[e].zcClippingId].indexOf(this.id)&&Kt[t[e].zcClippingId].push(this.id):(t[e].zcClippingId="zcClippingId_"+Gt++,Kt[t[e].zcClippingId]=[this.id],G.autoActivate===!0&&fe(t[e]));var i=Jt[this.id]&&Jt[this.id].elements;-1===i.indexOf(t[e])&&i.push(t[e])}return this},re=function(t){var e=Jt[this.id];if(!e)return this;var i,n=e.elements;t="undefined"==typeof t?n.slice(0):he(t);for(var o=t.length;o--;)if($.call(t,o)&&t[o]&&1===t[o].nodeType){for(i=0;-1!==(i=n.indexOf(t[o],i));)n.splice(i,1);var s=Kt[t[o].zcClippingId];if(s){for(i=0;-1!==(i=s.indexOf(this.id,i));)s.splice(i,1);0===s.length&&(G.autoActivate===!0&&pe(t[o]),delete t[o].zcClippingId)}}return this},le=function(){var t=Jt[this.id];return t&&t.elements?t.elements.slice(0):[]},de=function(){Jt[this.id]&&(this.unclip(),this.off(),delete Jt[this.id])},ce=function(t){if(!t||!t.type)return!1;if(t.client&&t.client!==this)return!1;var e=Jt[this.id],i=e&&e.elements,n=!!i&&i.length>0,o=!t.target||n&&-1!==i.indexOf(t.target),s=t.relatedTarget&&n&&-1!==i.indexOf(t.relatedTarget),a=t.client&&t.client===this;return!(!e||!(o||s||a))},ue=function(t){var e=Jt[this.id];if("object"==typeof t&&t&&t.type&&e){var i=bt(t),n=e&&e.handlers["*"]||[],o=e&&e.handlers[t.type]||[],a=n.concat(o);if(a&&a.length){var r,l,d,c,u,h=this;for(r=0,l=a.length;l>r;r++)d=a[r],c=h,"string"==typeof d&&"function"==typeof s[d]&&(d=s[d]),"object"==typeof d&&d&&"function"==typeof d.handleEvent&&(c=d,d=d.handleEvent),"function"==typeof d&&(u=T({},t),yt(d,c,[u],i))}}},he=function(t){return"string"==typeof t&&(t=[]),"number"!=typeof t.length?[t]:t},fe=function(t){if(t&&1===t.nodeType){var e=function(t){(t||(t=s.event))&&("js"!==t._source&&(t.stopImmediatePropagation(),t.preventDefault()),delete t._source)},i=function(i){(i||(i=s.event))&&(e(i),Zt.focus(t))};t.addEventListener("mouseover",i,!1),t.addEventListener("mouseout",e,!1),t.addEventListener("mouseenter",e,!1),t.addEventListener("mouseleave",e,!1),t.addEventListener("mousemove",e,!1),te[t.zcClippingId]={mouseover:i,mouseout:e,mouseenter:e,mouseleave:e,mousemove:e}}},pe=function(t){if(t&&1===t.nodeType){var e=te[t.zcClippingId];if("object"==typeof e&&e){for(var i,n,o=["move","leave","enter","out","over"],s=0,a=o.length;a>s;s++)i="mouse"+o[s],n=e[i],"function"==typeof n&&t.removeEventListener(i,n,!1);delete te[t.zcClippingId]}}};Zt._createClient=function(){ee.apply(this,k(arguments))},Zt.prototype.on=function(){return ie.apply(this,k(arguments))},Zt.prototype.off=function(){return ne.apply(this,k(arguments))},Zt.prototype.handlers=function(){return oe.apply(this,k(arguments))},Zt.prototype.emit=function(){return se.apply(this,k(arguments))},Zt.prototype.clip=function(){return ae.apply(this,k(arguments))},Zt.prototype.unclip=function(){return re.apply(this,k(arguments))},Zt.prototype.elements=function(){return le.apply(this,k(arguments))},Zt.prototype.destroy=function(){return de.apply(this,k(arguments))},Zt.prototype.setText=function(t){if(!Jt[this.id])throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.setData("text/plain",t),this},Zt.prototype.setHtml=function(t){if(!Jt[this.id])throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.setData("text/html",t),this},Zt.prototype.setRichText=function(t){if(!Jt[this.id])throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.setData("application/rtf",t),this},Zt.prototype.setData=function(){if(!Jt[this.id])throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.setData.apply(this,k(arguments)),this},Zt.prototype.clearData=function(){if(!Jt[this.id])throw new Error("Attempted to clear pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.clearData.apply(this,k(arguments)),this},Zt.prototype.getData=function(){if(!Jt[this.id])throw new Error("Attempted to get pending clipboard data from a destroyed ZeroClipboard client instance");return Zt.getData.apply(this,k(arguments))},"function"==typeof define&&define.amd?define(function(){return Zt}):"object"==typeof module&&module&&"object"==typeof module.exports&&module.exports?module.exports=Zt:t.ZeroClipboard=Zt}(function(){return this||window}()),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.affix"),s="object"==typeof e&&e;o||n.data("bs.affix",o=new i(this,s)),"string"==typeof e&&o[e]()})}var i=function(e,n){this.options=t.extend({},i.DEFAULTS,n),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.2.0",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=t(document).height(),n=this.$target.scrollTop(),o=this.$element.offset(),s=this.options.offset,a=s.top,r=s.bottom;"object"!=typeof s&&(r=a=s),"function"==typeof a&&(a=s.top(this.$element)),"function"==typeof r&&(r=s.bottom(this.$element));var l=null!=this.unpin&&n+this.unpin<=o.top?!1:null!=r&&o.top+this.$element.height()>=e-r?"bottom":null!=a&&a>=n?"top":!1;if(this.affixed!==l){null!=this.unpin&&this.$element.css("top","");var d="affix"+(l?"-"+l:""),c=t.Event(d+".bs.affix");this.$element.trigger(c),c.isDefaultPrevented()||(this.affixed=l,this.unpin="bottom"==l?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(d).trigger(t.Event(d.replace("affix","affixed"))),"bottom"==l&&this.$element.offset({top:e-this.$element.height()-r}))}}};var n=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=n,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),n=i.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),e.call(i,n)})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),o=i.data("bs.alert");o||i.data("bs.alert",o=new n(this)),"string"==typeof e&&o[e].call(i)})}var i='[data-dismiss="alert"]',n=function(e){t(e).on("click",i,this.close)};n.VERSION="3.2.0",n.prototype.close=function(e){function i(){s.detach().trigger("closed.bs.alert").remove()}var n=t(this),o=n.attr("data-target");o||(o=n.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var s=t(o);e&&e.preventDefault(),s.length||(s=n.hasClass("alert")?n:n.parent()),s.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(s.removeClass("in"),t.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",i).emulateTransitionEnd(150):i())};var o=t.fn.alert;t.fn.alert=e,t.fn.alert.Constructor=n,t.fn.alert.noConflict=function(){return t.fn.alert=o,this},t(document).on("click.bs.alert.data-api",i,n.prototype.close)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.button"),s="object"==typeof e&&e;o||n.data("bs.button",o=new i(this,s)),"toggle"==e?o.toggle():e&&o.setState(e)})}var i=function(e,n){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,n),this.isLoading=!1};i.VERSION="3.2.0",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",n=this.$element,o=n.is("input")?"val":"html",s=n.data();e+="Text",null==s.resetText&&n.data("resetText",n[o]()),n[o](null==s[e]?this.options[e]:s[e]),setTimeout(t.proxy(function(){"loadingText"==e?(this.isLoading=!0,n.addClass(i).attr(i,i)):this.isLoading&&(this.isLoading=!1,n.removeClass(i).removeAttr(i))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")&&(i.prop("checked")&&this.$element.hasClass("active")?t=!1:e.find(".active").removeClass("active")),t&&i.prop("checked",!this.$element.hasClass("active")).trigger("change")}t&&this.$element.toggleClass("active")};var n=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=n,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var n=t(i.target);n.hasClass("btn")||(n=n.closest(".btn")),e.call(n,"toggle"),i.preventDefault()})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.carousel"),s=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e),a="string"==typeof e?e:s.slide;o||n.data("bs.carousel",o=new i(this,s)),"number"==typeof e?o.to(e):a?o[a]():s.interval&&o.pause().cycle()})}var i=function(e,i){this.$element=t(e).on("keydown.bs.carousel",t.proxy(this.keydown,this)),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.2.0",i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},i.prototype.keydown=function(t){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.to=function(e){var i=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));return e>this.$items.length-1||0>e?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){i.to(e)}):n==e?this.pause().cycle():this.slide(e>n?"next":"prev",t(this.$items[e]))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){return this.sliding?void 0:this.slide("next")},i.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},i.prototype.slide=function(e,i){var n=this.$element.find(".item.active"),o=i||n[e](),s=this.interval,a="next"==e?"left":"right",r="next"==e?"first":"last",l=this;if(!o.length){if(!this.options.wrap)return;o=this.$element.find(".item")[r]()}if(o.hasClass("active"))return this.sliding=!1;var d=o[0],c=t.Event("slide.bs.carousel",{relatedTarget:d,direction:a});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,s&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var u=t(this.$indicators.children()[this.getItemIndex(o)]);u&&u.addClass("active")}var h=t.Event("slid.bs.carousel",{relatedTarget:d,direction:a});return t.support.transition&&this.$element.hasClass("slide")?(o.addClass(e),o[0].offsetWidth,n.addClass(a),o.addClass(a),n.one("bsTransitionEnd",function(){o.removeClass([e,a].join(" ")).addClass("active"),n.removeClass(["active",a].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(h)},0)}).emulateTransitionEnd(1e3*n.css("transition-duration").slice(0,-1))):(n.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(h)),s&&this.cycle(),this}};var n=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=n,this},t(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(i){var n,o=t(this),s=t(o.attr("data-target")||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""));if(s.hasClass("carousel")){var a=t.extend({},s.data(),o.data()),r=o.attr("data-slide-to");r&&(a.interval=!1),e.call(s,a),r&&s.data("bs.carousel").to(r),i.preventDefault()}}),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.collapse"),s=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e);!o&&s.toggle&&"show"==e&&(e=!e),o||n.data("bs.collapse",o=new i(this,s)),"string"==typeof e&&o[e]()})}var i=function(e,n){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,n),this.transitioning=null,this.options.parent&&(this.$parent=t(this.options.parent)),this.options.toggle&&this.toggle()};i.VERSION="3.2.0",i.DEFAULTS={toggle:!0},i.prototype.dimension=function(){var t=this.$element.hasClass("width");return t?"width":"height"},i.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var i=t.Event("show.bs.collapse");if(this.$element.trigger(i),!i.isDefaultPrevented()){var n=this.$parent&&this.$parent.find("> .panel > .in");if(n&&n.length){var o=n.data("bs.collapse");if(o&&o.transitioning)return;e.call(n,"hide"),o||n.data("bs.collapse",null)}var s=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[s](0),this.transitioning=1;var a=function(){this.$element.removeClass("collapsing").addClass("collapse in")[s](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return a.call(this);var r=t.camelCase(["scroll",s].join("-"));this.$element.one("bsTransitionEnd",t.proxy(a,this)).emulateTransitionEnd(350)[s](this.$element[0][r])}}},i.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return t.support.transition?void this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(350):n.call(this)}}},i.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var n=t.fn.collapse;t.fn.collapse=e,t.fn.collapse.Constructor=i,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(i){var n,o=t(this),s=o.attr("data-target")||i.preventDefault()||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""),a=t(s),r=a.data("bs.collapse"),l=r?"toggle":o.data(),d=o.attr("data-parent"),c=d&&t(d);r&&r.transitioning||(c&&c.find('[data-toggle="collapse"][data-parent="'+d+'"]').not(o).addClass("collapsed"),o[a.hasClass("in")?"addClass":"removeClass"]("collapsed")),e.call(a,l)})}(jQuery),+function(t){"use strict";function e(e){e&&3===e.which||(t(o).remove(),t(s).each(function(){var n=i(t(this)),o={relatedTarget:this};n.hasClass("open")&&(n.trigger(e=t.Event("hide.bs.dropdown",o)),e.isDefaultPrevented()||n.removeClass("open").trigger("hidden.bs.dropdown",o))}))}function i(e){var i=e.attr("data-target");i||(i=e.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var n=i&&t(i);return n&&n.length?n:e.parent()}function n(e){return this.each(function(){var i=t(this),n=i.data("bs.dropdown");n||i.data("bs.dropdown",n=new a(this)),"string"==typeof e&&n[e].call(i)})}var o=".dropdown-backdrop",s='[data-toggle="dropdown"]',a=function(e){t(e).on("click.bs.dropdown",this.toggle)};a.VERSION="3.2.0",a.prototype.toggle=function(n){var o=t(this);if(!o.is(".disabled, :disabled")){var s=i(o),a=s.hasClass("open");if(e(),!a){"ontouchstart"in document.documentElement&&!s.closest(".navbar-nav").length&&t('<div class="dropdown-backdrop"/>').insertAfter(t(this)).on("click",e);var r={relatedTarget:this};if(s.trigger(n=t.Event("show.bs.dropdown",r)),n.isDefaultPrevented())return;o.trigger("focus"),s.toggleClass("open").trigger("shown.bs.dropdown",r)}return!1}},a.prototype.keydown=function(e){if(/(38|40|27)/.test(e.keyCode)){var n=t(this);if(e.preventDefault(),e.stopPropagation(),!n.is(".disabled, :disabled")){var o=i(n),a=o.hasClass("open");if(!a||a&&27==e.keyCode)return 27==e.which&&o.find(s).trigger("focus"),n.trigger("click");var r=" li:not(.divider):visible a",l=o.find('[role="menu"]'+r+', [role="listbox"]'+r);if(l.length){var d=l.index(l.filter(":focus"));38==e.keyCode&&d>0&&d--,40==e.keyCode&&d<l.length-1&&d++,~d||(d=0),l.eq(d).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=n,t.fn.dropdown.Constructor=a,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",e).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",s,a.prototype.toggle).on("keydown.bs.dropdown.data-api",s+', [role="menu"], [role="listbox"]',a.prototype.keydown)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.tab");o||n.data("bs.tab",o=new i(this)),"string"==typeof e&&o[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.2.0",i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),n=e.data("target");if(n||(n=e.attr("href"),n=n&&n.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var o=i.find(".active:last a")[0],s=t.Event("show.bs.tab",{relatedTarget:o});if(e.trigger(s),!s.isDefaultPrevented()){var a=t(n);this.activate(e.closest("li"),i),this.activate(a,a.parent(),function(){e.trigger({type:"shown.bs.tab",relatedTarget:o})})}}},i.prototype.activate=function(e,i,n){function o(){s.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),e.addClass("active"),a?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu")&&e.closest("li.dropdown").addClass("active"),n&&n()}var s=i.find("> .active"),a=n&&t.support.transition&&s.hasClass("fade");a?s.one("bsTransitionEnd",o).emulateTransitionEnd(150):o(),s.removeClass("in")};var n=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=n,this},t(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(i){i.preventDefault(),e.call(t(this),"show")})}(jQuery),+function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,n=this;t(this).one("bsTransitionEnd",function(){i=!0});var o=function(){i||t(n).trigger(t.support.transition.end)};return setTimeout(o,e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){return t(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(t){"use strict";function e(i,n){var o=t.proxy(this.process,this);this.$body=t("body"),this.$scrollElement=t(t(i).is("body")?window:i),this.options=t.extend({},e.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",o),this.refresh(),this.process()}function i(i){return this.each(function(){var n=t(this),o=n.data("bs.scrollspy"),s="object"==typeof i&&i;o||n.data("bs.scrollspy",o=new e(this,s)),"string"==typeof i&&o[i]()})}e.VERSION="3.2.0",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e="offset",i=0;t.isWindow(this.$scrollElement[0])||(e="position",i=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var n=this;this.$body.find(this.selector).map(function(){var n=t(this),o=n.data("target")||n.attr("href"),s=/^#./.test(o)&&t(o);return s&&s.length&&s.is(":visible")&&[[s[e]().top+i,o]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){n.offsets.push(this[0]),n.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),n=this.options.offset+i-this.$scrollElement.height(),o=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=n)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<=o[0])return a!=(t=s[0])&&this.activate(t);for(t=o.length;t--;)a!=s[t]&&e>=o[t]&&(!o[t+1]||e<=o[t+1])&&this.activate(s[t])},e.prototype.activate=function(e){this.activeTarget=e,t(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',n=t(i).parents("li").addClass("active");n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate.bs.scrollspy")};var n=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=n,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(e,n){return this.each(function(){var o=t(this),s=o.data("bs.modal"),a=t.extend({},i.DEFAULTS,o.data(),"object"==typeof e&&e);s||o.data("bs.modal",s=new i(this,a)),"string"==typeof e?s[e](n):a.show&&s.show(n)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.2.0",i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var i=this,n=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass("modal-open"),this.setScrollbar(),this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.backdrop(function(){var n=t.support.transition&&i.$element.hasClass("fade");i.$element.parent().length||i.$element.appendTo(i.$body),i.$element.show().scrollTop(0),n&&i.$element[0].offsetWidth,i.$element.addClass("in").attr("aria-hidden",!1),i.enforceFocus();var o=t.Event("shown.bs.modal",{relatedTarget:e});n?i.$element.find(".modal-dialog").one("bsTransitionEnd",function(){i.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(300):i.$element.trigger("focus").trigger(o)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.$body.removeClass("modal-open"),this.resetScrollbar(),this.escape(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var i=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=t.support.transition&&n;if(this.$backdrop=t('<div class="modal-backdrop '+n+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;o?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(150):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var s=function(){i.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",s).emulateTransitionEnd(150):s()}else e&&e()},i.prototype.checkScrollbar=function(){document.body.clientWidth>=window.innerWidth||(this.scrollbarWidth=this.scrollbarWidth||this.measureScrollbar())},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var n=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=n,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var n=t(this),o=n.attr("href"),s=t(n.attr("data-target")||o&&o.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(o)&&o},s.data(),n.data());n.is("a")&&i.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),e.call(s,a,this)})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.tooltip"),s="object"==typeof e&&e;(o||"destroy"!=e)&&(o||n.data("bs.tooltip",o=new i(this,s)),"string"==typeof e&&o[e]())})}var i=function(t,e){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",t,e)};i.VERSION="3.2.0",i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(e,i,n){this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&t(this.options.viewport.selector||this.options.viewport);for(var o=this.options.trigger.split(" "),s=o.length;s--;){var a=o[s];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},i.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,n){i[t]!=n&&(e[t]=n)}),e},i.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show()},i.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide()},i.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var i=t.contains(document.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!i)return;var n=this,o=this.tip(),s=this.getUID(this.type);this.setContent(),o.attr("id",s),this.$element.attr("aria-describedby",s),this.options.animation&&o.addClass("fade");var a="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,r=/\s?auto?\s?/i,l=r.test(a);
l&&(a=a.replace(r,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(a).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var d=this.getPosition(),c=o[0].offsetWidth,u=o[0].offsetHeight;if(l){var h=a,f=this.$element.parent(),p=this.getPosition(f);a="bottom"==a&&d.top+d.height+u-p.scroll>p.height?"top":"top"==a&&d.top-p.scroll-u<0?"bottom":"right"==a&&d.right+c>p.width?"left":"left"==a&&d.left-c<p.left?"right":a,o.removeClass(h).addClass(a)}var m=this.getCalculatedOffset(a,d,c,u);this.applyPlacement(m,a);var g=function(){n.$element.trigger("shown.bs."+n.type),n.hoverState=null};t.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(150):g()}},i.prototype.applyPlacement=function(e,i){var n=this.tip(),o=n[0].offsetWidth,s=n[0].offsetHeight,a=parseInt(n.css("margin-top"),10),r=parseInt(n.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top=e.top+a,e.left=e.left+r,t.offset.setOffset(n[0],t.extend({using:function(t){n.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),n.addClass("in");var l=n[0].offsetWidth,d=n[0].offsetHeight;"top"==i&&d!=s&&(e.top=e.top+s-d);var c=this.getViewportAdjustedDelta(i,e,l,d);c.left?e.left+=c.left:e.top+=c.top;var u=c.left?2*c.left-o+l:2*c.top-s+d,h=c.left?"left":"top",f=c.left?"offsetWidth":"offsetHeight";n.offset(e),this.replaceArrow(u,n[0][f],h)},i.prototype.replaceArrow=function(t,e,i){this.arrow().css(i,t?50*(1-t/e)+"%":"")},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},i.prototype.hide=function(){function e(){"in"!=i.hoverState&&n.detach(),i.$element.trigger("hidden.bs."+i.type)}var i=this,n=this.tip(),o=t.Event("hide.bs."+this.type);return this.$element.removeAttr("aria-describedby"),this.$element.trigger(o),o.isDefaultPrevented()?void 0:(n.removeClass("in"),t.support.transition&&this.$tip.hasClass("fade")?n.one("bsTransitionEnd",e).emulateTransitionEnd(150):e(),this.hoverState=null,this)},i.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(e){e=e||this.$element;var i=e[0],n="BODY"==i.tagName;return t.extend({},"function"==typeof i.getBoundingClientRect?i.getBoundingClientRect():null,{scroll:n?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop(),width:n?t(window).width():e.outerWidth(),height:n?t(window).height():e.outerHeight()},n?{top:0,left:0}:e.offset())},i.prototype.getCalculatedOffset=function(t,e,i,n){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-n,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-n/2,left:e.left-i}:{top:e.top+e.height/2-n/2,left:e.left+e.width}},i.prototype.getViewportAdjustedDelta=function(t,e,i,n){var o={top:0,left:0};if(!this.$viewport)return o;var s=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-s-a.scroll,l=e.top+s-a.scroll+n;r<a.top?o.top=a.top-r:l>a.top+a.height&&(o.top=a.top+a.height-l)}else{var d=e.left-s,c=e.left+s+i;d<a.left?o.left=a.left-d:c>a.width&&(o.left=a.left+a.width-c)}return o},i.prototype.getTitle=function(){var t,e=this.$element,i=this.options;return t=e.attr("data-original-title")||("function"==typeof i.title?i.title.call(e[0]):i.title)},i.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},i.prototype.tip=function(){return this.$tip=this.$tip||t(this.options.template)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(e){var i=this;e&&(i=t(e.currentTarget).data("bs."+this.type),i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var n=t.fn.tooltip;t.fn.tooltip=e,t.fn.tooltip.Constructor=i,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=n,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),o=n.data("bs.popover"),s="object"==typeof e&&e;(o||"destroy"!=e)&&(o||n.data("bs.popover",o=new i(this,s)),"string"==typeof e&&o[e]())})}var i=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.2.0",i.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").empty()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},i.prototype.tip=function(){return this.$tip||(this.$tip=t(this.options.template)),this.$tip};var n=t.fn.popover;t.fn.popover=e,t.fn.popover.Constructor=i,t.fn.popover.noConflict=function(){return t.fn.popover=n,this}}(jQuery),function(t){"use strict";function e(t,e){return t.toUpperCase().indexOf(e.toUpperCase())>-1}function i(e){var i=[{re:/[\xC0-\xC6]/g,ch:"A"},{re:/[\xE0-\xE6]/g,ch:"a"},{re:/[\xC8-\xCB]/g,ch:"E"},{re:/[\xE8-\xEB]/g,ch:"e"},{re:/[\xCC-\xCF]/g,ch:"I"},{re:/[\xEC-\xEF]/g,ch:"i"},{re:/[\xD2-\xD6]/g,ch:"O"},{re:/[\xF2-\xF6]/g,ch:"o"},{re:/[\xD9-\xDC]/g,ch:"U"},{re:/[\xF9-\xFC]/g,ch:"u"},{re:/[\xC7-\xE7]/g,ch:"c"},{re:/[\xD1]/g,ch:"N"},{re:/[\xF1]/g,ch:"n"}];return t.each(i,function(){e=e.replace(this.re,this.ch)}),e}function n(e,i){var n=arguments,s=e,e=n[0],i=n[1];[].shift.apply(n),"undefined"==typeof e&&(e=s);var a,r=this.each(function(){var s=t(this);if(s.is("select")){var r=s.data("selectpicker"),l="object"==typeof e&&e;if(r){if(l)for(var d in l)l.hasOwnProperty(d)&&(r.options[d]=l[d])}else{var c=t.extend({},o.DEFAULTS,t.fn.selectpicker.defaults||{},s.data(),l);s.data("selectpicker",r=new o(this,c,i))}"string"==typeof e&&(a=r[e]instanceof Function?r[e].apply(r,n):r.options[e])}});return"undefined"!=typeof a?a:r}t.expr[":"].icontains=function(i,n,o){return e(t(i).text(),o[3])},t.expr[":"].aicontains=function(i,n,o){return e(t(i).data("normalizedText")||t(i).text(),o[3])};var o=function(e,i,n){n&&(n.stopPropagation(),n.preventDefault()),this.$element=t(e),this.$newElement=null,this.$button=null,this.$menu=null,this.$lis=null,this.options=i,null===this.options.title&&(this.options.title=this.$element.attr("title")),this.val=o.prototype.val,this.render=o.prototype.render,this.refresh=o.prototype.refresh,this.setStyle=o.prototype.setStyle,this.selectAll=o.prototype.selectAll,this.deselectAll=o.prototype.deselectAll,this.destroy=o.prototype.remove,this.remove=o.prototype.remove,this.show=o.prototype.show,this.hide=o.prototype.hide,this.init()};o.VERSION="1.6.2",o.DEFAULTS={noneSelectedText:"Nothing selected",noneResultsText:"No results match",countSelectedText:function(t,e){return 1==t?"{0} item selected":"{0} items selected"},maxOptionsText:function(t,e){var i=[];return i[0]=1==t?"Limit reached ({n} item max)":"Limit reached ({n} items max)",i[1]=1==e?"Group limit reached ({n} item max)":"Group limit reached ({n} items max)",i},selectAllText:"Select All",deselectAllText:"Deselect All",multipleSeparator:", ",style:"btn-select",size:"auto",title:"string",selectedTextFormat:"values",width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,actionsBox:!1,iconBase:"glyphicon",tickIcon:"glyphicon-ok",maxOptions:!1,mobile:!1,selectOnTab:!1,dropdownAlignRight:!1,searchAccentInsensitive:!1},o.prototype={constructor:o,init:function(){var e=this,i=this.$element.attr("id");this.$element.hide(),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),this.$newElement=this.createView(),this.$element.after(this.$newElement),this.$menu=this.$newElement.find("> .dropdown-menu"),this.$button=this.$newElement.find("> button"),this.$searchbox=this.$newElement.find("input"),this.options.dropdownAlignRight&&this.$menu.addClass("dropdown-menu-right"),"undefined"!=typeof i&&(this.$button.attr("data-id",i),t('label[for="'+i+'"]').click(function(t){t.preventDefault(),e.$button.focus()})),this.checkDisabled(),this.clickListener(),this.options.liveSearch&&this.liveSearchListener(),this.render(),this.liHeight(),this.setStyle(),this.setWidth(),this.options.container&&this.selectPosition(),this.$menu.data("this",this),this.$newElement.data("this",this),this.options.mobile&&this.mobile()},createDropdown:function(){var e=this.multiple?" show-tick":"",i=this.$element.parent().hasClass("input-group")?" input-group-btn":"",n=this.autofocus?" autofocus":"",o=this.$element.parents().hasClass("form-group-lg")?" btn-lg":this.$element.parents().hasClass("form-group-sm")?" btn-sm":"",s=this.options.header?'<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>":"",a=this.options.liveSearch?'<div class="bs-searchbox"><input type="text" class="input-block-level form-control" autocomplete="off" /></div>':"",r=this.options.actionsBox?'<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">'+this.options.selectAllText+'</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">'+this.options.deselectAllText+"</button></div></div>":"",l='<div class="btn-group bootstrap-select'+e+i+'"><button type="button" class="btn dropdown-toggle selectpicker'+o+'" data-toggle="dropdown"'+n+'><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">'+s+a+r+'<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';return t(l)},createView:function(){var t=this.createDropdown(),e=this.createLi();return t.find("ul").append(e),t},reloadLi:function(){this.destroyLi();var t=this.createLi();this.$menu.find("ul").append(t)},destroyLi:function(){this.$menu.find("li").remove()},createLi:function(){var e=this,n=[],o=0,s=function(t,e,i){return"<li"+("undefined"!=typeof i?' class="'+i+'"':"")+("undefined"!=typeof e|null===e?' data-original-index="'+e+'"':"")+">"+t+"</li>"},a=function(n,o,s,a){var r=i(t.trim(t("<div/>").html(n).text()).replace(/\s\s+/g," "));return'<a tabindex="0"'+("undefined"!=typeof o?' class="'+o+'"':"")+("undefined"!=typeof s?' style="'+s+'"':"")+("undefined"!=typeof a?'data-optgroup="'+a+'"':"")+' data-normalized-text="'+r+'">'+n+'<span class="'+e.options.iconBase+" "+e.options.tickIcon+' check-mark"></span></a>'};return this.$element.find("option").each(function(){var i=t(this),r=i.attr("class")||"",l=i.attr("style"),d=i.data("content")?i.data("content"):i.html(),c="undefined"!=typeof i.data("subtext")?'<small class="muted text-muted">'+i.data("subtext")+"</small>":"",u="undefined"!=typeof i.data("icon")?'<span class="'+e.options.iconBase+" "+i.data("icon")+'"></span> ':"",h=i.is(":disabled")||i.parent().is(":disabled"),f=i[0].index;if(""!==u&&h&&(u="<span>"+u+"</span>"),i.data("content")||(d=u+'<span class="text">'+d+c+"</span>"),!e.options.hideDisabled||!h)if(i.parent().is("optgroup")&&i.data("divider")!==!0){if(0===i.index()){o+=1;var p=i.parent().attr("label"),m="undefined"!=typeof i.parent().data("subtext")?'<small class="muted text-muted">'+i.parent().data("subtext")+"</small>":"",g=i.parent().data("icon")?'<span class="'+e.options.iconBase+" "+i.parent().data("icon")+'"></span> ':"";p=g+'<span class="text">'+p+m+"</span>",0!==f&&n.length>0&&n.push(s("",null,"divider")),n.push(s(p,null,"dropdown-header"))}n.push(s(a(d,"opt "+r,l,o),f))}else i.data("divider")===!0?n.push(s("",f,"divider")):i.data("hidden")===!0?n.push(s(a(d,r,l),f,"hide is-hidden")):n.push(s(a(d,r,l),f))}),this.multiple||0!==this.$element.find("option:selected").length||this.options.title||this.$element.find("option").eq(0).prop("selected",!0).attr("selected","selected"),t(n.join(""))},findLis:function(){return null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$lis},render:function(e){var i=this;e!==!1&&this.$element.find("option").each(function(e){i.setDisabled(e,t(this).is(":disabled")||t(this).parent().is(":disabled")),i.setSelected(e,t(this).is(":selected"))}),this.tabIndex();var n=this.options.hideDisabled?":not([disabled])":"",o=this.$element.find("option:selected"+n).map(function(){var e,n=t(this),o=n.data("icon")&&i.options.showIcon?'<i class="'+i.options.iconBase+" "+n.data("icon")+'"></i> ':"";return e=i.options.showSubtext&&n.attr("data-subtext")&&!i.multiple?' <small class="muted text-muted">'+n.data("subtext")+"</small>":"",n.data("content")&&i.options.showContent?n.data("content"):"undefined"!=typeof n.attr("title")?n.attr("title"):o+n.html()+e}).toArray(),s=this.multiple?o.join(this.options.multipleSeparator):o[0];if(this.multiple&&this.options.selectedTextFormat.indexOf("count")>-1){var a=this.options.selectedTextFormat.split(">");if(a.length>1&&o.length>a[1]||1==a.length&&o.length>=2){n=this.options.hideDisabled?", [disabled]":"";var r=this.$element.find("option").not('[data-divider="true"], [data-hidden="true"]'+n).length,l="function"==typeof this.options.countSelectedText?this.options.countSelectedText(o.length,r):this.options.countSelectedText;s=l.replace("{0}",o.length.toString()).replace("{1}",r.toString())}}this.options.title=this.$element.attr("title"),"static"==this.options.selectedTextFormat&&(s=this.options.title),s||(s="undefined"!=typeof this.options.title?this.options.title:this.options.noneSelectedText),this.$button.attr("title",t.trim(t("<div/>").html(s).text()).replace(/\s\s+/g," ")),this.$newElement.find(".filter-option").html(s)},setStyle:function(t,e){this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|validate\[.*\]/gi,""));var i=t?t:this.options.style;"add"==e?this.$button.addClass(i):"remove"==e?this.$button.removeClass(i):(this.$button.removeClass(this.options.style),this.$button.addClass(i))},liHeight:function(){if(this.options.size!==!1){var t=this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus",!1).end().appendTo("body"),e=t.addClass("open").find("> .dropdown-menu"),i=e.find("li").not(".divider").not(".dropdown-header").filter(":visible").children("a").outerHeight(),n=this.options.header?e.find(".popover-title").outerHeight():0,o=this.options.liveSearch?e.find(".bs-searchbox").outerHeight():0,s=this.options.actionsBox?e.find(".bs-actionsbox").outerHeight():0;t.remove(),this.$newElement.data("liHeight",i).data("headerHeight",n).data("searchHeight",o).data("actionsHeight",s)}},setSize:function(){this.findLis();var e,i,n,o=this,s=this.$menu,a=s.find(".inner"),r=this.$newElement.outerHeight(),l=this.$newElement.data("liHeight"),d=this.$newElement.data("headerHeight"),c=this.$newElement.data("searchHeight"),u=this.$newElement.data("actionsHeight"),h=this.$lis.filter(".divider").outerHeight(!0),f=parseInt(s.css("padding-top"))+parseInt(s.css("padding-bottom"))+parseInt(s.css("border-top-width"))+parseInt(s.css("border-bottom-width")),p=this.options.hideDisabled?", .disabled":"",m=t(window),g=f+parseInt(s.css("margin-top"))+parseInt(s.css("margin-bottom"))+2,v=function(){i=o.$newElement.offset().top-m.scrollTop(),n=m.height()-i-r};if(v(),this.options.header&&s.css("padding-top",0),"auto"==this.options.size){var b=function(){var t,r=o.$lis.not(".hide");v(),e=n-g,o.options.dropupAuto&&o.$newElement.toggleClass("dropup",i>n&&e-g<s.height()),o.$newElement.hasClass("dropup")&&(e=i-g),t=r.length+r.filter(".dropdown-header").length>3?3*l+g-2:0,s.css({"max-height":e+"px",overflow:"hidden","min-height":t+d+c+u+"px"}),a.css({"max-height":e-d-c-u-f+"px","overflow-y":"auto","min-height":Math.max(t-f,0)+"px"})};b(),this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize",b),t(window).off("resize.getSize").on("resize.getSize",b),t(window).off("scroll.getSize").on("scroll.getSize",b)}else if(this.options.size&&"auto"!=this.options.size&&s.find("li"+p).length>this.options.size){var y=this.$lis.not(".divider"+p).find(" > *").slice(0,this.options.size).last().parent().index(),w=this.$lis.slice(0,y+1).filter(".divider").length;e=l*this.options.size+w*h+f,o.options.dropupAuto&&this.$newElement.toggleClass("dropup",i>n&&e<s.height()),s.css({"max-height":e+d+c+u+"px",overflow:"hidden"}),a.css({"max-height":e-f+"px","overflow-y":"auto"})}},setWidth:function(){if("auto"==this.options.width){this.$menu.css("min-width","0");var t=this.$newElement.clone().appendTo("body"),e=t.find("> .dropdown-menu").css("width"),i=t.css("width","auto").find("> button").css("width");t.remove(),this.$newElement.css("width",Math.max(parseInt(e),parseInt(i))+"px")}else"fit"==this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width",""));this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement.removeClass("fit-width")},selectPosition:function(){var e,i,n=this,o="<div />",s=t(o),a=function(t){s.addClass(t.attr("class").replace(/form-control/gi,"")).toggleClass("dropup",t.hasClass("dropup")),e=t.offset(),i=t.hasClass("dropup")?0:t[0].offsetHeight,s.css({top:e.top+i,left:e.left,width:t[0].offsetWidth,position:"absolute"})};this.$newElement.on("click",function(){n.isDisabled()||(a(t(this)),s.appendTo(n.options.container),s.toggleClass("open",!t(this).hasClass("open")),s.append(n.$menu))}),t(window).resize(function(){a(n.$newElement)}),t(window).on("scroll",function(){a(n.$newElement)}),t("html").on("click",function(e){t(e.target).closest(n.$newElement).length<1&&s.removeClass("open")})},setSelected:function(t,e){this.findLis(),this.$lis.filter('[data-original-index="'+t+'"]').toggleClass("selected",e)},setDisabled:function(t,e){this.findLis(),e?this.$lis.filter('[data-original-index="'+t+'"]').addClass("disabled").find("a").attr("href","#").attr("tabindex",-1):this.$lis.filter('[data-original-index="'+t+'"]').removeClass("disabled").find("a").removeAttr("href").attr("tabindex",0)},isDisabled:function(){return this.$element.is(":disabled")},checkDisabled:function(){var t=this;this.isDisabled()?this.$button.addClass("disabled").attr("tabindex",-1):(this.$button.hasClass("disabled")&&this.$button.removeClass("disabled"),-1==this.$button.attr("tabindex")&&(this.$element.data("tabindex")||this.$button.removeAttr("tabindex"))),this.$button.click(function(){return!t.isDisabled()})},tabIndex:function(){this.$element.is("[tabindex]")&&(this.$element.data("tabindex",this.$element.attr("tabindex")),this.$button.attr("tabindex",this.$element.data("tabindex")))},clickListener:function(){var e=this;this.$newElement.on("touchstart.dropdown",".dropdown-menu",function(t){t.stopPropagation()}),this.$newElement.on("click",function(){e.setSize(),e.options.liveSearch||e.multiple||setTimeout(function(){e.$menu.find(".selected a").focus()},10)}),this.$menu.on("click","li a",function(i){var n=t(this),o=n.parent().data("originalIndex"),s=e.$element.val(),a=e.$element.prop("selectedIndex");if(e.multiple&&i.stopPropagation(),i.preventDefault(),!e.isDisabled()&&!n.parent().hasClass("disabled")){var r=e.$element.find("option"),l=r.eq(o),d=l.prop("selected"),c=l.parent("optgroup"),u=e.options.maxOptions,h=c.data("maxOptions")||!1;if(e.multiple){if(l.prop("selected",!d),e.setSelected(o,!d),n.blur(),u!==!1||h!==!1){var f=u<r.filter(":selected").length,p=h<c.find("option:selected").length;if(u&&f||h&&p)if(u&&1==u)r.prop("selected",!1),l.prop("selected",!0),e.$menu.find(".selected").removeClass("selected"),e.setSelected(o,!0);else if(h&&1==h){c.find("option:selected").prop("selected",!1),l.prop("selected",!0);var m=n.data("optgroup");e.$menu.find(".selected").has('a[data-optgroup="'+m+'"]').removeClass("selected"),e.setSelected(o,!0)}else{var g="function"==typeof e.options.maxOptionsText?e.options.maxOptionsText(u,h):e.options.maxOptionsText,v=g[0].replace("{n}",u),b=g[1].replace("{n}",h),y=t('<div class="notify"></div>');g[2]&&(v=v.replace("{var}",g[2][u>1?0:1]),b=b.replace("{var}",g[2][h>1?0:1])),l.prop("selected",!1),e.$menu.append(y),u&&f&&(y.append(t("<div>"+v+"</div>")),e.$element.trigger("maxReached.bs.select")),h&&p&&(y.append(t("<div>"+b+"</div>")),e.$element.trigger("maxReachedGrp.bs.select")),setTimeout(function(){e.setSelected(o,!1)},10),y.delay(750).fadeOut(300,function(){t(this).remove()})}}}else r.prop("selected",!1),l.prop("selected",!0),e.$menu.find(".selected").removeClass("selected"),e.setSelected(o,!0);e.multiple?e.options.liveSearch&&e.$searchbox.focus():e.$button.focus(),(s!=e.$element.val()&&e.multiple||a!=e.$element.prop("selectedIndex")&&!e.multiple)&&e.$element.change()}}),this.$menu.on("click","li.disabled a, .popover-title, .popover-title :not(.close)",function(t){t.target==this&&(t.preventDefault(),t.stopPropagation(),e.options.liveSearch?e.$searchbox.focus():e.$button.focus())}),this.$menu.on("click","li.divider, li.dropdown-header",function(t){t.preventDefault(),t.stopPropagation(),e.options.liveSearch?e.$searchbox.focus():e.$button.focus()}),this.$menu.on("click",".popover-title .close",function(){e.$button.focus()}),this.$searchbox.on("click",function(t){t.stopPropagation()}),this.$menu.on("click",".actions-btn",function(i){e.options.liveSearch?e.$searchbox.focus():e.$button.focus(),i.preventDefault(),i.stopPropagation(),t(this).is(".bs-select-all")?e.selectAll():e.deselectAll(),e.$element.change()}),this.$element.change(function(){e.render(!1)})},liveSearchListener:function(){var e=this,n=t('<li class="no-results"></li>');this.$newElement.on("click.dropdown.data-api",function(){e.$menu.find(".active").removeClass("active"),e.$searchbox.val()&&(e.$searchbox.val(""),e.$lis.not(".is-hidden").removeClass("hide"),n.parent().length&&n.remove()),e.multiple||e.$menu.find(".selected").addClass("active"),setTimeout(function(){e.$searchbox.focus()},10)}),this.$searchbox.on("input propertychange",function(){e.$searchbox.val()?(e.options.searchAccentInsensitive?e.$lis.not(".is-hidden").removeClass("hide").find("a").not(":aicontains("+i(e.$searchbox.val())+")").parent().addClass("hide"):e.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains("+e.$searchbox.val()+")").parent().addClass("hide"),e.$menu.find("li").filter(":visible:not(.no-results)").length?n.parent().length&&n.remove():(n.parent().length&&n.remove(),n.html(e.options.noneResultsText+' "'+e.$searchbox.val()+'"').show(),e.$menu.find("li").last().after(n))):(e.$lis.not(".is-hidden").removeClass("hide"),n.parent().length&&n.remove()),e.$menu.find("li.active").removeClass("active"),e.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(),t(this).focus()})},val:function(t){return"undefined"!=typeof t?(this.$element.val(t),this.render(),this.$element):this.$element.val()},selectAll:function(){this.findLis(),this.$lis.not(".divider").not(".disabled").not(".selected").filter(":visible").find("a").click()},deselectAll:function(){this.findLis(),this.$lis.not(".divider").not(".disabled").filter(".selected").filter(":visible").find("a").click()},keydown:function(e){var n,o,s,a,r,l,d,c,u,h=t(this),f=h.is("input")?h.parent().parent():h.parent(),p=f.data("this"),m={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"};if(p.options.liveSearch&&(f=h.parent().parent()),p.options.container&&(f=p.$menu),n=t("[role=menu] li a",f),u=p.$menu.parent().hasClass("open"),!u&&/([0-9]|[A-z])/.test(String.fromCharCode(e.keyCode))&&(p.options.container?p.$newElement.trigger("click"):(p.setSize(),p.$menu.parent().addClass("open"),u=!0),p.$searchbox.focus()),p.options.liveSearch&&(/(^9$|27)/.test(e.keyCode.toString(10))&&u&&0===p.$menu.find(".active").length&&(e.preventDefault(),p.$menu.parent().removeClass("open"),p.$button.focus()),n=t("[role=menu] li:not(.divider):not(.dropdown-header):visible",f),h.val()||/(38|40)/.test(e.keyCode.toString(10))||0===n.filter(".active").length&&(n=p.options.searchAccentInsensitive?p.$newElement.find("li").filter(":aicontains("+i(m[e.keyCode])+")"):p.$newElement.find("li").filter(":icontains("+m[e.keyCode]+")"))),n.length){if(/(38|40)/.test(e.keyCode.toString(10)))o=n.index(n.filter(":focus")),a=n.parent(":not(.disabled):visible").first().index(),r=n.parent(":not(.disabled):visible").last().index(),s=n.eq(o).parent().nextAll(":not(.disabled):visible").eq(0).index(),l=n.eq(o).parent().prevAll(":not(.disabled):visible").eq(0).index(),d=n.eq(s).parent().prevAll(":not(.disabled):visible").eq(0).index(),p.options.liveSearch&&(n.each(function(e){t(this).is(":not(.disabled)")&&t(this).data("index",e)}),o=n.index(n.filter(".active")),a=n.filter(":not(.disabled):visible").first().data("index"),r=n.filter(":not(.disabled):visible").last().data("index"),s=n.eq(o).nextAll(":not(.disabled):visible").eq(0).data("index"),l=n.eq(o).prevAll(":not(.disabled):visible").eq(0).data("index"),d=n.eq(s).prevAll(":not(.disabled):visible").eq(0).data("index")),c=h.data("prevIndex"),38==e.keyCode&&(p.options.liveSearch&&(o-=1),o!=d&&o>l&&(o=l),a>o&&(o=a),o==c&&(o=r)),40==e.keyCode&&(p.options.liveSearch&&(o+=1),-1==o&&(o=0),o!=d&&s>o&&(o=s),o>r&&(o=r),o==c&&(o=a)),h.data("prevIndex",o),p.options.liveSearch?(e.preventDefault(),h.is(".dropdown-toggle")||(n.removeClass("active"),n.eq(o).addClass("active").find("a").focus(),h.focus())):n.eq(o).focus();else if(!h.is("input")){var g,v,b=[];n.each(function(){t(this).parent().is(":not(.disabled)")&&t.trim(t(this).text().toLowerCase()).substring(0,1)==m[e.keyCode]&&b.push(t(this).parent().index())}),g=t(document).data("keycount"),g++,t(document).data("keycount",g),v=t.trim(t(":focus").text().toLowerCase()).substring(0,1),v!=m[e.keyCode]?(g=1,t(document).data("keycount",g)):g>=b.length&&(t(document).data("keycount",0),g>b.length&&(g=1)),n.eq(b[g-1]).focus()}(/(13|32)/.test(e.keyCode.toString(10))||/(^9$)/.test(e.keyCode.toString(10))&&p.options.selectOnTab)&&u&&(/(32)/.test(e.keyCode.toString(10))||e.preventDefault(),p.options.liveSearch?/(32)/.test(e.keyCode.toString(10))||(p.$menu.find(".active a").click(),h.focus()):t(":focus").click(),t(document).data("keycount",0)),(/(^9$|27)/.test(e.keyCode.toString(10))&&u&&(p.multiple||p.options.liveSearch)||/(27)/.test(e.keyCode.toString(10))&&!u)&&(p.$menu.parent().removeClass("open"),p.$button.focus())}},mobile:function(){this.$element.addClass("mobile-device").appendTo(this.$newElement),this.options.container&&this.$menu.hide()},refresh:function(){this.$lis=null,this.reloadLi(),this.render(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},update:function(){this.reloadLi(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},remove:function(){this.$newElement.remove(),this.$element.remove()}};var s=t.fn.selectpicker;t.fn.selectpicker=n,t.fn.selectpicker.Constructor=o,t.fn.selectpicker.noConflict=function(){return t.fn.selectpicker=s,this},t(document).data("keycount",0).on("keydown",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bs-searchbox input",o.prototype.keydown).on("focusin.modal",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bs-searchbox input",function(t){t.stopPropagation()}),t(window).on("load.bs.select.data-api",function(){t(".selectpicker").each(function(){var e=t(this);n.call(e,e.data())})})}(jQuery),function(t){t(function(){var e=t("body");t.browser.msie||detectIE()?e.addClass("msie ie"+detectIE()):t.browser.webkit?e.addClass("webkit"):t.browser.mozilla&&e.addClass("mozilla")})}(jQuery),$(function(){$(".ga-action-click").on("click",function(){var t=$(this).attr("ga-action")?$(this).attr("ga-action"):!1,e=$(this).attr("ga-category")?$(this).attr("ga-category"):!1,i=$(this).attr("ga-label")?$.trim($(this).attr("ga-label").toLowerCase()).replace(/\s/g,"-"):!1;t&&e&&i&&TrackEventGA(e,t,i)}),$(".ga-action-submit").on("click",function(){var t=$(this),e=$(this).closest("form"),i=t.attr("ga-action")?t.attr("ga-action"):!1,n=t.attr("ga-category")?t.attr("ga-category"):!1,o=t.attr("ga-page")?t.attr("ga-page"):"",s=t.attr("ga-label")?$.trim(t.attr("ga-label").toLowerCase()).replace(/\s/g,"-"):!1;return i&&n&&s?(ga("send","page",o),ga("send","pageview",o),ga("send","event",n,i,s,{page:o,_trackPageview:o,hitCallback:function(){e.submit()}}),!(ga.hasOwnProperty("loaded")&&ga.loaded===!0)):!0})}),currencyHandler={afterLoad:function(t){$.each($("input.data-price"),function(e,i){var n=$(i).data("price-usd");"undefined"!=typeof n&&$.each(["gbp","eur","cad","aud"],function(e,o){if(t[o.toUpperCase()]){var s=Number(1/t[o.toUpperCase()]*n).toFixed(2);$(i).attr("data-price-"+o,s)}});var o=$(i).data("data-offer-price-usd");"undefined"!=typeof o&&$.each(["gbp","eur","cad","aud"],function(e,n){if(t[n.toUpperCase()]){var s=Number(1/t[n.toUpperCase()]*o).toFixed(2);$(i).attr("data-offer-price-"+n,s)}})}),$("input.data-price:checked").change()},onChange:function(t){$("input.data-price").attr("data-cur",t).filter(":checked").change()}},function(t){var e={},i={},n="",o={debug:!1,api_key:"",currBase:"USD",currCode:{usd:"$",eur:"€",gbp:"£",cad:"$",aud:"$"},filter:{iso:["USD","EUR","GBP","CAD","AUD"]},rates:{},convert:{from:!1,to:!1},ajax:{dataType:"json",type:"POST",crossDomain:!0,data:{}},onOpen:!1},s={init:function(i){s._die("Load init! *Curr"),e=t(this),s.setSettings(i),s.setRates(),s._die("Rates ..."),s._die(o.rates);var n=s._initMoney();return s.triggerCall(o.onOpen,n),t(this)},setSettings:function(e){"undefined"!=typeof e&&(o=t.extend(o,e||{}))},setRates:function(t){"undefined"!=typeof t?o.rates=t:(i=s._json())&&(o.rates=i)},triggerCall:function(e,i){t.isFunction(e)&&e.call(this,i)},_die:function(t){o.debug&&console.log(t)},_clearCookie:function(e){t.cookie(e)&&t.removeCookie(e,{path:"/"})},setCookie:function(e,i){t.cookie(e,i,{expires:7,path:"/"})},getCookie:function(e){return t.cookie(e)?t.cookie(e):!1},_clearCach:function(t){t?jQuery.data(window,t,!1):jQuery.data(window,"_result",!1)},setCach:function(t,e){return t=t?t:"_result",e?jQuery.data(window,t,e):jQuery.data(window,t)},getCach:function(t){return jQuery.data(window,t)?jQuery.data(window,t):!1},_json:function(t){
s._die("Load json curr..");var e={};return isset($rand)&&!s.getCach("_ajax")&&s.setCach("_ajax",$rand),s._die("getCache..."),s._die(s.getCach("_ajax")),e=s.getCach("_ajax")},_initMoney:function(e){var i={};return o.rates&&t.each(o.rates,function(t,e){e.iso&&(i[e.iso.toUpperCase()]=parseFloat(e.rates))}),s._die(i),fx.rates=i?i:e.rates,fx.base=o.currBase?o.currBase:e.base,i},_convert:function(t,e,i){if(!t)return null;var n={from:e?e.toUpperCase():!1,to:i?i.toUpperCase():!1};return fx.convert(t,n)},bindEvent:function(){e.find(".store-flags, .store-link-currancy-flag").length&&e.find(".store-flags, .store-link-currancy-flag").on("click",function(i){i.preventDefault();var n=t(this).attr("attr-rates-iso");return s.getCach("currISO")&&n?s.getCach("currISO")!=n&&s.setCach("currISO",n):s.setCach("currISO",n),e.find(".store-flags, .store-link-currancy-flag").each(function(){t(this).hasClass("active")&&t(this).removeClass("active")}),t(this).addClass("active"),s.afterEvent(),!1})},unbindEvent:function(){e.find(".store-flags, .store-link-currancy-flag").off("click")},show:function(){var i=[];s._die(o.rates),o.rates&&(n+="<span>Currency:</span>",t.each(o.rates,function(t,e){i[t]=e.iso.toUpperCase()==o.currBase?"active":"",n+='<a class="store-link-currancy-flag '+i[t]+'" attr-rates-iso="'+e.iso+'" attr-rates-id="'+e.id+'" href="#"><i class="ico-flag-'+e.iso+'"></i><span>'+e.iso.toUpperCase()+"</span></a>"}),e.html(n),s.beforeEvent(),s.bindEvent())},beforeEvent:function(){t(".box-currence").each(function(){var e=t(this).find("div.symbol"),i=e.attr("attr-iso");i.length||e.attr("attr-iso",o.currBase),e.length||e.text(o.currCode[o.currBase.toLowerCase()])})},afterEvent:function(){currencyHandler.onChange(s.getCach("currISO")),t.each(t(".box-currence"),function(e,i){s._die(t(i));var n=t(i).find("div.symbol"),a=t(i).find("div.curr"),r=n?n.text():!1,l=a?a.text():!1,d=a?n.attr("attr-iso"):!1;s._die("afterEvent..."),s._die(r),s._die(l),s._die(d),l&&(a.html(s._convert(parseFloat(l),s.getCach("currISO")||o.currBase,d).toFixed(2)),n.attr("attr-iso",s.getCach("currISO")),n.text(o.currCode[s.getCach("currISO").toLowerCase()]))})},run:function(t){s._die(t),s._die("Rates init"),s._die(o.rates)}};t.fn.currancy=function(e,i){if(s[e])return s[e].apply(this,Array.prototype.slice.call(arguments,1));if("object"!=typeof e&&e)t.error("Метод с именем "+e+" не существует для jQuery.tooltip");else if(s.init.apply(this,arguments),"undefined"!=typeof i&&s[i])return s[i].apply(this,Array.prototype.slice.call(arguments,1))}}(jQuery),$(document).ready(function(){$(".list-currencies").length&&$(".list-currencies").currancy({onOpen:function(t){currencyHandler.afterLoad(t)}},"show")}),function(t){t.fn.easyTooltip=function(e){var i,n={xOffset:10,yOffset:25,tooltipId:"easyTooltip",clickRemove:!1,content:"",useElement:""},e=t.extend(n,e);this.each(function(){var n=t(this).attr("title");t(this).hover(function(o){i=""!=e.content?e.content:n,i=""!=e.useElement?t("#"+e.useElement).html():i,t(this).attr("title",""),""!=i&&void 0!=i&&(t("body").append("<div id='"+e.tooltipId+"'>"+i+"</div>"),t("#"+e.tooltipId).css("position","absolute").css("top",o.pageY-e.yOffset+"px").css("left",o.pageX+e.xOffset+"px").css("display","none").fadeIn("fast"))},function(){t("#"+e.tooltipId).remove(),t(this).attr("title",n)}),t(this).mousemove(function(i){t("#"+e.tooltipId).css("top",i.pageY-e.yOffset+"px").css("left",i.pageX+e.xOffset+"px")}),e.clickRemove&&t(this).mousedown(function(i){t("#"+e.tooltipId).remove(),t(this).attr("title",n)})})}}(jQuery);var d=document,safari=-1!=navigator.userAgent.toLowerCase().indexOf("safari"),gebtn=function(t,e){return t.getElementsByTagName(e)};onload=function(){var t=gebtn(d,"body")[0];if(t.className=t.className&&""!=t.className?t.className+" has-js":"has-js",d.getElementById&&d.createTextNode)for(var e=gebtn(d,"label"),i=0;i<e.length;i++){var n=e[i];if(-1!=n.className.indexOf("label_")){var o=gebtn(n,"input")[0];"label_check"==n.className&&(n.className=safari&&1==o.checked||o.checked?"label_check c_on":"label_check c_off",n.onclick=check_it),"label_radio"==n.className&&(n.className=safari&&1==o.checked||o.checked?"label_radio r_on":"label_radio r_off",n.onclick=turn_radio)}}};var check_it=function(){var t=gebtn(this,"input")[0];"label_check c_off"==this.className||!safari&&t.checked?(this.className="label_check c_on",safari&&t.click()):(this.className="label_check c_off",safari&&t.click())},turn_radio=function(){var t=gebtn(this,"input")[0];if("label_radio r_off"==this.className||t.checked){for(var e=gebtn(this.parentNode,"label"),i=0;i<e.length;i++){var n=e[i];-1!=n.className.indexOf("label_radio")&&(n.className="label_radio r_off")}this.className="label_radio r_on",safari&&t.click()}else this.className="label_radio r_off",safari&&t.click()};$(document).ready(function(){"undefined"==typeof $.cookie("fly_features")&&$.cookie("fly_features",0,{expires:1}),$(window).scroll(function(){$(this).scrollTop()>100&&"undefined"!=typeof $.cookie("fly_features")&&!parseInt($.cookie("fly_features"))?$("#fly_features").fadeIn():$("#fly_features").fadeOut()}),$(".fly_close").length&&$(".fly_close").on("click",function(){return $(this).parent().hide(),"undefined"==typeof $.cookie("fly_features")||parseInt($.cookie("fly_features"))||$.cookie("fly_features",1),!1})});var alertFallback=!1;"undefined"!=typeof console&&"undefined"!=typeof console.log||(console={},alertFallback?console.log=function(t){alert(t)}:console.log=function(){}),function(t){var e={_plans:!1,_mobile:!1},i={},n={plan:!1,mobile:!1},o={init:function(e){return"undefined"!=typeof e.filters&&(n.plans=e.filters.plans?e.filters.plans:null,n.mobile=e.filters.mobile?e.filters.mobile:null),t(this)},_clearCach:function(t){t?jQuery.data(window,t,!1):(jQuery.data(window,"_result",!1),jQuery.data(window,"_plans",!1),jQuery.data(window,"_mobile",!1))},_cach:function(t,e){return e=e?e:"_result",t?jQuery.data(window,e,t):jQuery.data(window,e)},_plans:function(){if(n.plans){var e=[];t.each(i,function(i,o){var s=t(o),a=s.attr("attr-use-plan").split("|");-1!=t.inArray(n.plans,a)&&(e[s.index()]=s.index())}),o._cach(e,"_plans")}else o._clearCach("_plans"),console.log("Not enter filters Plans (*settings)!")},_mobile:function(){if(n.mobile){var s=[];e._plans?t.each(i,function(i,o){var a=t(o);-1!=t.inArray(a.index(),e._plans)&&t.each(n.mobile,function(t,e){1==e&&a.find(".box-filter-mobile i.icon-"+t).is(".supported")&&(s[a.index()]=a.index())})}):t.each(n.mobile,function(e,n){1==n&&t.each(i,function(i,n){var o=t(n);o.find(".box-filter-mobile i.icon-"+e).is(".supported")&&(s[o.index()]=o.index())})}),o._cach(s,"_mobile")}else o._clearCach("_mobile"),console.log("Not enter filters mobile (*settings)!")},_run:function(t){return t.length?(i=t,o._plans(),e._plans=o._cach(!1,"_plans"),"undefined"==typeof e._plans&&console.log("Not enter plans filters!"),o._mobile(),e._mobile=o._cach(!1,"_mobile"),"undefined"==typeof e._mobile&&console.log("Not enter mobile filter!"),void o._visible(e)):void console.log("Not detected Objects!")},_visible:function(e){i.length>0&&("undefined"!=typeof e._plans&&e._plans.length>0?(t.each(i,function(i,n){var o=t(n);e._plans.length>0&&(-1!=t.inArray(o.index(),e._plans)?(o.hasClass("hide")&&o.removeClass("hide"),o.addClass("show")):(o.hasClass("show")&&o.removeClass("show"),o.addClass("hide")))}),e._mobile.length>0&&"undefined"!=typeof e._mobile&&t.each(i,function(i,n){var o=t(n);-1!=t.inArray(o.index(),e._mobile)?(o.hasClass("hide")&&o.removeClass("hide"),o.addClass("show")):(o.hasClass("show")&&o.removeClass("show"),o.addClass("hide"))})):!e._plans.length&&"undefined"!=typeof e._mobile&&e._mobile.length>0?t.each(i,function(i,n){var o=t(n);-1!=t.inArray(o.index(),e._mobile)?(o.hasClass("hide")&&o.removeClass("hide"),o.addClass("show")):(o.hasClass("show")&&o.removeClass("show"),o.addClass("hide"))}):t.each(i,function(e,i){var n=t(i);n.hasClass("hide")&&n.removeClass("hide"),n.addClass("show")}))},show:function(){return o._run(t(this))},update:function(t){}};t.fn.tabPumpic=function(e){return o[e]?o[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error("Метод с именем "+e+" не существует для jQuery.tooltip"):o.init.apply(this,arguments)}}(jQuery),$data_hash=[];var _htmlPopUp={boxStatusAuth:'<div id="box-status-auth" class="popUp"><div><label class="title gold">Hello!<i class="close small"></i></label></div><p class="info">You have just logged into Pumpic.com, enjoy your time with us or go straight to your <a class="a-default" href="https://cp.pumpic.com">account</a>.</p></div>',boxStatusRegistration:'<div id="box-status-registration" class="popUp"><div><label class="title gold">Hello!<i class="close small"></i></label></div><p class="info">You have just registered in Pumpic.com, enjoy your time with us or go straight to your <a class="a-default" href="https://cp.pumpic.com">account</a>.</p></div>',boxStatusFreeTrialRegistration:'<div id="box-status-free-trial-registration" class="popUp"><div><label class="title gold">Thank you for signing up!<i class="close small"></i></label></div><p class="info">The email with registration details was sent to '+UserLogin+'.<br /> You can go straight to your <a class="a-default" href="https://cp.pumpic.com">Personal Account</a> now.</p></div>',email_success:'<div id="box-email-success" class="popUp"><div><label class="title gold"> Thank you! <i class="close small"></i></label></div><div class="info text-center"> Your discount code will be sent to you soon.<form><div><a href="#" class="button-red btn-default block-popUp-close">Close</a></div></form></div></div>',box_email:'<div id="box-email" class="popUp"><div><label class="title gold"> <b>10%</b> off<i class="close small"></i></label></div><div class="info text-center">Want to get <a class="a-default" href="#">10% discount</a> right now?<br />Subscribe to our specail promo!<form class="block-popup-form text-center"><div><input id="email" class="required" type="email" name="email" value="" placeholder="email" /><div id="email-error" class="error"></div></div><div><button class="button-red btn-default">Save 10% today</button></div></form></div></div>'};jQuery(function(){jQuery(window).hashchange(function(){if(""!=document.location.hash){var t=location.hash.split("#");t.length>1&&($data_hash=t[1],hashchange_onLoadInit())}}),jQuery(window).hashchange()}),jQuery.fn.clickToggle=function(t,e){function i(){return n[this._tog^=1].call(this),!1}var n=[e,t];return this.on("click",i)},$(document).ready(function(){$rs_width=!1,$(window).resize(function(){$rs_width=$(window).width()}),$rs_width||($rs_width=$(window).width()),cookie_init(),copy_to_clipboard_init(),$.data(window,"filters",!1);var t={plans:!1,mobile:{apple:!1,android:!1,blackberry:!1}};if(window.location.hash.length){var e=window.location.hash,i=$('a[href="'+e+'"]');i.length&&$(e).length&&(i.attr("data-toggled","on"),i.parent().addClass("active"),$(".box_category>ul>li").hide(),$(e).show())}if($(".share_list a").click(function(t){if(t.preventDefault(),isset($(this).data("location"))&&$(this).data("location").length){var e="";isset($(this).data("media"))&&$(this).data("media").length&&(e="&media="+$(this).data("media")),window.open($(this).data("location")+encodeURIComponent(window.location)+e,"Share","height=300,width=500")}return!1}),$(".box-plans, .box-phone").on("click",function(e){e.preventDefault(),t=$.data(window,"filters")?$.data(window,"filters"):t;var i=$(this).attr("rel");if($(this).hasClass("active")){if($(this).removeClass("active"),$(this).is(".box-plans"))t.plans=!1;else if($(this).is(".box-phone"))for(key in t.mobile)t.mobile[key]=!1}else if($(this).is(".box-plans"))clickActive(".box-plans",$(this)),t.plans=i;else if($(this).is(".box-phone")){clickActive(".box-phone",$(this));for(key in t.mobile)t.mobile[key]=!1;"undefined"!=typeof t.mobile[i]&&(t.mobile[i]=!0)}return console.log("save cashe filter..."),$.data(window,"filters",t),console.log("end..."),console.log("init Plugins Tabs..."),$(".box-body-filters").tabPumpic({filters:t}).tabPumpic("show"),console.log("end..."),!1}),$("#item-stickybar").length&&$(".list_category > li").each(function(t,e){$("#item-stickybar.stickybar-"+t).stick_in_parent(),console.log("key = "+t)}),$("#block-stickybar").length&&$("#block-stickybar").stick_in_parent(),$('.list_category > li > a[data-toggled="on"]').length&&$.each($('.list_category > li > a[data-toggled="on"]'),function(){if($(".box_category > ul > li").hide(),$(this).parent().hasClass("active")){var t=$(this).attr("href").split("#");console.log(t[1]),t.length&&$(".box_category > ul > li").find("#"+t[1]).closest("li").show()}}),$(".list_category > li > a").on("click",function(t){t.preventDefault();var e=$(this).attr("href").split("#"),i=$(this).closest("li").index(),n=$(this).parent().parent(),o=n.attr("save-state");return"undefined"!=typeof o&&o!==!1&&(window.location.hash=$(this).attr("href")),$.each($(".list_category > li").not(":eq("+i+")"),function(){$(this).hasClass("active")&&$(this).removeClass("active"),"on"==$(this).children("a").attr("data-toggled")&&$(this).children("a").attr("data-toggled","off")}),$(this).attr("data-toggled")&&"off"!=$(this).attr("data-toggled")?"on"==$(this).attr("data-toggled")&&($(this).attr("data-toggled","off"),$(".list_category").each(function(t,e){$(this).find("li:eq("+i+")").hasClass("active")&&$(this).find("li:eq("+i+")").removeClass("active")}),$(".box_category > ul > li").show()):($(this).attr("data-toggled","on"),$(".list_category").each(function(t,e){$(this).find("li:eq("+i+")").length&&$(this).find("li:eq("+i+")").addClass("active")}),$(".box_category > ul > li").hide(),e.length>1&&("all"==e[1]?$(".box_category > ul > li").show():$(".box_category > ul > li").find("#"+e[1]).closest("li").show(),$(".box_category > ul > li").find("#"+e[1]).length&&$("html, body").animate({scrollTop:Math.ceil($(".box_category > ul > li").find("#"+e[1]).offset().top)},"linear"))),!1}),$("a.anchor").on("click",function(t){t.preventDefault();var e=$(this).attr("href").split("#");return e.length>1&&$("html, body").stop().animate({scrollTop:$(".box-anchor #"+e[1]).offset().top},1e3),!1}),$(".mobile_tooltip").length&&$(".mobile_tooltip").easyTooltip(),$(".form-discount").length){var n=$(".form-discount input[type!='submit'], .form-discount textarea, .form-discount select");n.focus(function(){$(this).addClass("highlight")}),n.blur(function(){$(this).removeClass("highlight")})}if($(".box-form").length){var n=$(".box-form input[type!='submit'], .box-form textarea, .box-form select");n.focus(function(){$(this).addClass("highlight")}),n.blur(function(){$(this).removeClass("highlight")})}$('form[name="send_find_phone"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,debug:!1,"device-model":{required:!0},captcha:{required:!0},email:{required:!0,email:!0},messages:{captcha:"Invalid CAPTCHA.",name:"The Device Model field is empty",email:{required:"The Email field is empty",email:"Invalid email format"}},errorClass:"invalid",validClass:"success",invalidHandler:function(t,e){$('form[name="send_find_phone"] span.info').length&&$('form[name="send_find_phone"] span.info').html(" ").hide(),$('form[name="send_find_phone"] .fatal-error').length&&$('form[name="send_find_phone"] .fatal-error').html(" ").hide(),$('form[name="send_find_phone"] label.error, form[name="send_find_phone"] label.invalid').length&&$('form[name="send_find_phone"] label.error, form[name="send_find_phone"] label.invalid').remove()},showErrors:function(t,e){var i=$('form[name="send_find_phone"]');$.each(e,function(t,e){if(e.element){var n=i.find(e.element).attr("name");i.find(e.element).after('<label id="'+n+'-error" for="'+n+'" class="invalid">'+e.message+"</label>"),i.find(e.element).next().show()}})},submitHandler:function(t){$('form[name="send_find_phone"] span.info').length&&$('form[name="send_find_phone"] span.info').html(" ").hide(),$('form[name="send_find_phone"] .fatal-error').length&&$('form[name="send_find_phone"] .fatal-error').html(" ").hide(),$('form[name="send_find_phone"] label.error, form[name="send_find_phone"] label.invalid').length&&$('form[name="send_find_phone"] label.error, form[name="send_find_phone"] label.invalid').remove();var e=$(t),i=parseQuery(e.serializeArray()),n=getAjaxForm("/compatibility_send.html",i);if(!n.result)return $('form[name="send_find_phone"] .fatal-error').html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;var o=n.result;if(o.error)return"object"==typeof o.error?$.each(o.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$('<label id="'+t+'-error" for="'+t+'" class="invalid">'+i+"</label>").insertAfter(n))}):$('form[name="send_find_phone"] .fatal-error').html(o.error),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;if(!o.success)return $('form[name="send_find_phone"] .fatal-error').html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;$('form[name="send_find_phone"] span.info').html(o.success).css({display:"inline-block"});var s=$('form[name="send_find_phone"] span.info').offset().top;$("html, body").animate({scrollTop:Math.ceil(s)},"linear"),console.log(s,Math.ceil(s*$(window).outerHeight(!0)/$("html, body").height())),ga("send","event","form","submit","compatibility-request-success"),reloadCaptcha(e.find(".box-captcha > img"),!1),e.trigger("reset")}});$('form[name="send_find_phone"] input, form[name="send_find_phone"] textarea').focus(function(){});$('form[name="send_mobile_operators_find_phone"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,debug:!1,carrier:{required:!0},captcha:{required:!0},email:{required:!0,email:!0},messages:{captcha:"Invalid CAPTCHA.",name:"The Device Model field is empty",email:{required:"The Email field is empty",email:"Invalid email format"}},errorClass:"invalid",validClass:"success",invalidHandler:function(t,e){$('form[name="send_mobile_operators_find_phone"] span.info').length&&$('form[name="send_mobile_operators_find_phone"] span.info').html(" ").hide(),$('form[name="send_mobile_operators_find_phone"] .fatal-error').length&&$('form[name="send_mobile_operators_find_phone"] .fatal-error').html(" ").hide(),$('form[name="send_mobile_operators_find_phone"] label.error, form[name="send_mobile_operators_find_phone"] label.invalid').length&&$('form[name="send_mobile_operators_find_phone"] label.error, form[name="send_mobile_operators_find_phone"] label.invalid').remove()},showErrors:function(t,e){var i=$('form[name="send_mobile_operators_find_phone"]');$.each(e,function(t,e){if(e.element){var n=i.find(e.element).attr("name");i.find(e.element).after('<label id="'+n+'-error" for="'+n+'" class="invalid">'+e.message+"</label>"),i.find(e.element).next().show()}})},submitHandler:function(t){$('form[name="send_mobile_operators_find_phone"] span.info').length&&$('form[name="send_mobile_operators_find_phone"] span.info').html(" ").hide(),$('form[name="send_mobile_operators_find_phone"] .fatal-error').length&&$('form[name="send_mobile_operators_find_phone"] .fatal-error').html(" ").hide(),$('form[name="send_mobile_operators_find_phone"] label.error, form[name="send_mobile_operators_find_phone"] label.invalid').length&&$('form[name="send_mobile_operators_find_phone"] label.error, form[name="send_mobile_operators_find_phone"] label.invalid').remove();var e=$(t),i=parseQuery(e.serializeArray()),n=getAjaxForm("/gps-wireless-tracking-phone.html",i);if(!n.result)return $('form[name="send_mobile_operators_find_phone"] .fatal-error').html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;var o=n.result;if(o.error)return"object"==typeof o.error?$.each(o.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$('<label id="'+t+'-error" for="'+t+'" class="invalid">'+i+"</label>").insertAfter(n))}):$('form[name="send_mobile_operators_find_phone"] .fatal-error').html(o.error),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;if(!o.success)return $('form[name="send_mobile_operators_find_phone"] .fatal-error').html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;$('form[name="send_mobile_operators_find_phone"] span.info').html(o.success).css({display:"inline-block"});var s=$('form[name="send_mobile_operators_find_phone"] span.info').offset().top;$("html, body").animate({scrollTop:Math.ceil(s)},"linear"),ga("send","event","form","submit","mobile-operators-request-success"),reloadCaptcha(e.find(".box-captcha > img"),!1),e.trigger("reset")}});$('form[name="send_mobile_operators_find_phone"] input, form[name="send_mobile_operators_find_phone"] textarea').focus(function(){});$("form.form-faq-send").validate({onfocusout:!1,focusInvalid:!1,name:{required:!0},question:{required:!0},email:{required:!0,email:!0},messages:{name:"The Name field is empty",question:"The Question field is empty",email:{required:"The Email field is empty",email:"Invalid email format"}},errorClass:"invalid",validClass:"success",invalidHandler:function(t,e){$("form.form-faq-send span.info").length&&$("form.form-faq-send span.info").html(" ").hide(),$("form.form-faq-send .fatal-error").length&&$("form.form-faq-send .fatal-error").html(" ").hide()},submitHandler:function(t){$("form.form-faq-send span.info").length&&$("form.form-faq-send span.info").html(" ").hide(),$("form.form-faq-send .fatal-error").length&&$("form.form-faq-send .fatal-error").html(" ").hide();var e=$(t),i=parseQuery(e.serializeArray()),n=getAjaxForm("/faq_send.html",i);if(!n.result)return $("form.form-faq-send .fatal-error").html("Your email was not sent"),console.log("Can not get params in ajax!"),!1;var o=n.result;return o.error?("object"==typeof o.error?$.each(o.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$('<label id="'+t+'-error" for="'+t+'" class="invalid">'+i+"</label>").insertAfter(n))}):$("form.form-faq-send .fatal-error").html(o.error),!1):o.success?($("form.form-faq-send span.info").html(o.success).css({display:"inline-block"}),ga("send","event","form","submit","faq-request-success"),void e.trigger("reset")):($("form.form-faq-send .fatal-error").html("Your email was not sent"),console.log("System error!"),!1)}});$("form.form-faq-send input, form.form-faq-send textarea").focus(function(){}),$("form.form-contact-us select").change(function(){var t=!1;$("form.form-contact-us #wos").val(""),$(this).find("option:selected").each(function(){t=$(this).val()}),t&&"0"!=t&&$("form.form-contact-us #wos").val(t).valid()}).change();$("form.form-contact-us").validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,debug:!1,ignore:"not:hidden",name:{required:!0},description:{required:!0},wos:{required:!0},email:{required:!0,email:!0},captcha:{required:!0},messages:{captcha:"Invalid CAPTCHA.",name:"The Name field is empty",description:"The Question field is empty",wos:"The field Choose your OS is empty",email:{required:"The Email field is empty",email:"Invalid email format"}},errorClass:"invalid",validClass:"success",invalidHandler:function(t,e){$("form.form-contact-us span.info").length&&$("form.form-contact-us span.info").html(" ").hide(),$("form.form-contact-us .fatal-error").length&&$("form.form-contact-us .fatal-error").html(" ").hide(),$("form.form-contact-us label.error, form.form-contact-us label.invalid").length&&$("form.form-contact-us label.error, form.form-contact-us label.invalid").remove()},showErrors:function(t,e){var i=$("form.form-contact-us");$.each(e,function(t,e){if(e.element){var n=i.find(e.element).attr("name");i.find(e.element).after('<label id="'+n+'-error" for="'+n+'" class="invalid">'+e.message+"</label>"),i.find(e.element).next().show()}})},submitHandler:function(t){$("form.form-contact-us span.info").length&&$("form.form-contact-us span.info").html(" ").hide(),$("form.form-contact-us .fatal-error").length&&$("form.form-contact-us .fatal-error").html(" ").hide(),$("form.form-contact-us label.error, form.form-contact-us label.invalid").length&&$("form.form-contact-us label.error, form.form-contact-us label.invalid").remove();var e=$(t),i=parseQuery(e.serializeArray()),n=getAjaxForm("/contact_us_send.html",i);if(!n.result)return $("form.form-contact-us .fatal-error").html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;var o=n.result;if(o.error)return"object"==typeof o.error?$.each(o.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$('<label id="'+t+'-error" for="'+t+'" class="invalid">'+i+"</label>").insertAfter(n))}):$("form.form-contact-us .fatal-error").html(o.error),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;if(!o.success)return $("form.form-contact-us .fatal-error").html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;$("form.form-contact-us span.info").html(o.success).css({display:"inline-block"});var s=$("form.form-contact-us span.info").offset().top;$("html, body").animate({scrollTop:Math.ceil(s*$(window).outerHeight(!0)/$("html, body").height())},"linear"),ga("send","event","form","submit","contact-request-success"),reloadCaptcha(e.find(".box-captcha > img")),e.trigger("reset")}});$("form.form-contact-us input, form.form-contact-us textarea").focus(function(){}),$("form.form-faq select").change(function(){var t=!1;$("form.form-faq #wos").val(""),$(this).find("option:selected").each(function(){t=$(this).val()}),t&&"0"!=t&&$("form.form-faq #wos").val(t).valid()}).change();$("form.form-faq").validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,debug:!1,ignore:"not:hidden",name:{required:!0},description:{required:!0},wos:{required:!0},email:{required:!0,email:!0},captcha:{required:!0},messages:{captcha:"Invalid CAPTCHA.",name:"The Name field is empty",description:"The Question field is empty",wos:"The field Choose your OS is empty",email:{required:"The Email field is empty",email:"Invalid email format"}},errorClass:"invalid",validClass:"success",invalidHandler:function(t,e){$("form.form-faq span.info").length&&$("form.form-faq span.info").html(" ").hide(),$("form.form-faq .fatal-error").length&&$("form.form-faq .fatal-error").html(" ").hide(),$("form.form-faq label.error, form.form-faq label.invalid").length&&$("form.form-faq label.error, form.form-faq label.invalid").remove()},showErrors:function(t,e){var i=$("form.form-faq");$.each(e,function(t,e){if(e.element){var n=i.find(e.element).attr("name");i.find(e.element).after('<label id="'+n+'-error" for="'+n+'" class="invalid">'+e.message+"</label>"),i.find(e.element).next().show()}})},submitHandler:function(t){$("form.form-faq span.info").length&&$("form.form-faq span.info").html(" ").hide(),$("form.form-faq .fatal-error").length&&$("form.form-faq .fatal-error").html(" ").hide(),$("form.form-faq label.error, form.form-faq label.invalid").length&&$("form.form-faq label.error, form.form-faq label.invalid").remove();var e=$(t),i=parseQuery(e.serializeArray()),n=getAjaxForm("/faq.html",i);if(!n.result)return $("form.form-faq .fatal-error").html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;var o=n.result;if(o.error)return"object"==typeof o.error?$.each(o.error,function(t,i){var n=e.find('input[name="'+t+'"]');n.length&&(n.next("label").length?n.next().html(i).show():$('<label id="'+t+'-error" for="'+t+'" class="invalid">'+i+"</label>").insertAfter(n))}):$("form.form-faq .fatal-error").html(o.error),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;if(!o.success)return $("form.form-faq .fatal-error").html("Your email was not sent"),reloadCaptcha(e.find(".box-captcha > img"),!0),!1;$("form.form-faq span.info").html(o.success).css({display:"inline-block"});var s=$("form.form-faq span.info").offset().top;$("html, body").animate({scrollTop:Math.ceil(s*$(window).outerHeight(!0)/$("html, body").height())},"linear"),ga("send","event","form","submit","contact-request-success"),reloadCaptcha(e.find(".box-captcha > img")),e.trigger("reset")}});if($('form[name="form-login"]').length&&$('form[name="form-login"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,messages:{password:"The Password field is empty.",email:{required:"The Email field is empty.",email:"Invalid email format."},errorClass:"error"},invalidHandler:function(t,e){$('form[name="form-login"] label.error').length&&$('form[name="form-login"] label.error').remove(),$('form[name="form-login"] div.box-error')&&$('form[name="form-login"] div.box-error').addClass("hide")},showErrors:function(t,e){var i=$('form[name="form-login"]');$.each(e,function(t,e){e.element&&(i.find(e.element).after('<label class="error">'+e.message+"</label>"),i.find(e.element).next().show())})}}),$('form[name="form-registration"]').length&&$('form[name="form-registration"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,messages:{captcha:"Invalid CAPTCHA.",email:{required:"The Email field is empty.",email:"Invalid email format."},errorClass:"error"},invalidHandler:function(t,e){$('form[name="form-registration"] label.error').length&&$('form[name="form-registration"] label.error').remove(),$('form[name="form-registration"] div.box-error')&&$('form[name="form-registration"] div.box-error').addClass("hide")},showErrors:function(t,e){var i=$('form[name="form-registration"]');$.each(e,function(t,e){e.element&&(i.find(e.element).after('<label class="error">'+e.message+"</label>"),i.find(e.element).next().show())})}}),$('form[name="free_trial_registration"]').length&&$('form[name="free_trial_registration"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,messages:{captcha:"Invalid CAPTCHA.",name:{required:"The Name field is empty."},email:{required:"The Email field is empty.",email:"Invalid email format."},errorClass:"error"},invalidHandler:function(t,e){$('form[name="free_trial_registration"] #block-fields label.error').length&&$('form[name="free_trial_registration"] #block-fields label.error').remove(),$('form[name="free_trial_registration"] div.box-error')&&$('form[name="free_trial_registration"] div.box-error').addClass("hide")},showErrors:function(t,e){var i=$('form[name="free_trial_registration"] #block-fields');$.each(e,function(t,e){e.element&&i.find(e.element).after('<label class="error">'+e.message+"</label>").show()})}}),$('form[name="form-restore"]').length&&$('form[name="form-restore"]').validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,debug:!1,messages:{email:{required:"The Email field is empty.",email:"Invalid email format."},errorClass:"error"},invalidHandler:function(t,e){$('form[name="form-restore"] label.error').length&&$('form[name="form-restore"] label.error').remove(),$('form[name="form-restore"] div.box-error')&&$('form[name="form-restore"] div.box-error').addClass("hide")},showErrors:function(t,e){var i=$('form[name="form-restore"]');$.each(e,function(t,e){e.element&&(i.find(e.element).after('<label class="error">'+e.message+"</label>"),i.find(e.element).next().show())})}}),$("#form-discount").length&&$("#form-discount").validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,messages:{captcha:"Invalid CAPTCHA.","discount[name]":"The Name field is empty.","discount[email]":{required:"The Password field is empty.",email:"Invalid email format."},errorClass:"error"},invalidHandler:function(t,e){$("#form-discount label.error").length&&$("#form-discount label.error").remove(),$("#form-discount div.box-error")&&$("#form-discount div.box-error").addClass("hide")},showErrors:function(t,e){var i=$("#form-discount");$.each(e,function(t,e){e.element&&(i.find(e.element).after('<label class="error">'+e.message+"</label>"),i.find(e.element).next().show());
})}}),$(".box-captcha").length&&$(".update-captcha, .a-update-captcha").on("click",function(t){return t.preventDefault(),reloadCaptcha($(this),!0),!1}),$(".show_basic_features a").toggle(function(t){t.preventDefault(),$(".basic_fe").css("margin-top","10px"),$(".basic_fe").show()},function(t){t.preventDefault(),$(".basic_fe").css("margin-top","90px"),$(".basic_fe").hide()}),$(".show_premium_features a").toggle(function(t){t.preventDefault(),$(".premium_fe").css("margin-top","10px"),$(".premium_fe").show()},function(t){t.preventDefault(),$(".premium_fe").css("margin-top","90px"),$(".premium_fe").hide()}),$("input[name='optionsRadios']").each(function(){this.getAttribute("checked")&&($(this).parent(".label_radio").addClass("r_on"),$(this).parent(".label_radio").removeClass("r_off"),$(this).parents("form").children(".product_price").val($(this).val()))}),hashchange_AfterInit(),$("#viber-whatsapp-skype").length&&($.browser.webkit?$("#viber-whatsapp-skype").removeClass("w30p").addClass("w16p"):$("#viber-whatsapp-skype").removeClass("w16p").addClass("w30p")),$('form[name="form-faq"] button.event-submit').click(function(){ga("send","event","form","submit","faq-request")}),$('form[name="form-login"] .button-sumbit button').click(function(){ga("send","event","form","submit","login")}),$('form[name="form-restore"] .button-sumbit button').click(function(){ga("send","event","form","submit","restore")}),$('form[name="form-registration"] .button-sumbit button').click(function(){ga("send","event","form","submit","registration")}),$('form[name="send-mail-contact-us"] button.event-submit').click(function(){ga("send","event","form","submit","contact-request")}),$('form[name="send_find_phone"] button.event-submit').click(function(){ga("send","event","form","submit","compatibility-request")}),$(".fly-box").length&&$(".fly-box").scrollPumpic({start:1e3,stop:0,animate:{type:"visible",timeShow:50,timeHide:50}}),$(".fly-box-buttons").length&&$(window).on("load resize",function(){var t=Math.round($(".fly-position").offset().top);"undefined"!=typeof $.data(document,"_scrollButtons_"+$(this).width())&&$.data(document,"_scrollButtons_"+$(this).width())==t||$.data(document,"_scrollButtons_"+$(this).width(),t),$.data(document,"_scrollButtons_"+$(this).width())&&$(".fly-box-buttons").scrollPumpic({_objFly:".block-fly",start:$.data(document,"_scrollButtons_"+$(this).width()),stop:0,right:300,_settings:{_responce:!1,_validate:!1},animate:{type:"blinking",timeShow:30,timeHide:50}})}),$("#temp-1 .bc-tabs .item-tab a, #temp-1 .bc-tabs .item-tab span, #temp-2 > ul > li > a, #temp-2 > ul > li > span").on("click",function(){var t=$(this).parent(),e=$(this),i=t.attr("data-cat-id");$.each($("#temp-1 .bc-tabs .item-tab, #temp-2 > ul > li, #temp-1 #tab-content > div"),function(t,e){$(e).hasClass("active")&&$(e).removeClass("active")}),t.hasClass("active")||($('#temp-1 .bc-tabs section > div[data-cat-id="'+i+'"], #temp-2 > ul > li[data-cat-id="'+i+'"]').addClass("active"),$('#temp-1 #tab-content > div[data-cat-id="'+i+'"]').addClass("active")),t.children("ul").is(":not(visible)")&&t.children("ul").slideDown("slow",function(){$.each($("#temp-2 > ul > li").not(":eq("+$(this).parent().index()+")").children("ul"),function(t,e){$(e).slideUp()}),$("html, body").stop().animate({scrollTop:e.offset().top},1e3)})}),$(".toggle-mobile-operators").length&&$(".toggle-mobile-operators").on("click",function(t){return t.preventDefault(),$.each($("#mobile-operators .item-operators"),function(t,e){$(e).hasClass("hide")&&$(e).removeClass("hide").addClass("show")}),$(this).parent().hide(),!1}),$(".box-video-constructors .block-video-button > .box-hover").hover(function(){$rs_width>992&&$(this).find(".hover-video-buttons").show()},function(){$rs_width>992&&$(this).find(".hover-video-buttons").hide()}),$(".youtube").length&&$(".youtube").YouTubeModal({autoplay:1,autohide:1,width:820,height:520,theme:"darck"}),$(".sticky").length&&$(window).on("scroll",function(){var t=$(window).scrollTop();t>68?$(".sticky").addClass("fixed"):$(".sticky").removeClass("fixed")}),$("#c-features .row-list > li, .b-how-it-work h3.weight-normal, #block-compatibility-table .table-body > div > p").matchHeight(),$(".match-height").length&&$(".match-height").matchHeight(),$.fn.matchHeight._beforeUpdate=function(t,e){},$.fn.matchHeight._afterUpdate=function(t,e){},$(".box_category .minus, .box_category .plus").length&&$(".box_category .minus, .box_category .plus").on("click",function(){$(this).parent("div").find(".collapse").collapse("toggle")}),$(".collapse").on("shown.bs.collapse",function(t){console.log("Show"),$(this).parent("div").find("i.plus")&&$(this).parent("div").find("i.plus").removeClass("plus").addClass("minus")}),$(".collapse").on("hidden.bs.collapse",function(t){$(this).parent("div").find("i.minus")&&$(this).parent("div").find("i.minus").removeClass("minus").addClass("plus")}),$(".block-child-location-tracking .feature").length&&$(window).on("load resize orientationchange",function(t){$(this).width()>992?$(".block-child-location-tracking .feature").each(function(t,e){$(e).css({display:"inline-block",width:"auto"}),$(e).css({width:$(e).width()+81+"px"}),$(e).css({display:"block",margin:"0 auto"})}):$(".block-child-location-tracking .feature").each(function(t,e){$(e).css({display:"block",margin:"0 auto",width:"auto"})})}),$("a.anchor-menu-fly").on("click",function(t){t.preventDefault();var e=$(this).attr("href").split("#");if(e.length>1){var i=$("#"+e[1]).offset().top-$("#block-stickybar").height();$("html, body").stop().animate({scrollTop:i+"px"},1e3)}return!1}),$(".buy-form-with-offer").size()){var o={usd:"$",eur:"€",gbp:"£",cad:"$",aud:"$"},s=function(t){var e=$(t).closest("form"),i=$(t).data(),n=e.find(".double_offer input[type=checkbox][data-group="+i.group+"]").is(":checked"),s=$(".buy-form-with-offer").find("input[type=radio][data-group="+i.group+"][data-period="+i.period+"]");if(s.each(function(){var t=$(this).data();$productField=$(this).closest("form").find("input.product_price"),n?$productField.val(t.offerProduct):$productField.val(t.product),$(this).closest("ul").find("label").removeClass("r_on").addClass("r_off"),$(this).closest("label").addClass("r_on").removeClass("r_off")}),"undefined"!=typeof i.target){var a=$(t).attr("data-price-"+i.cur)/Number(i.period);n&&(a=$(t).attr("data-offer-price-"+i.cur)/Number(i.period));var r=(Math.floor(100*a)/100).toFixed(2);$(i.target).html(r).prev("div.symbol").html(o[i.cur]?o[i.cur]:"")}},a=function(t){var e=$(t).data(),i=$(t).is(":checked"),n=$(".buy-form-with-offer").find("input[type=checkbox][data-group="+e.group+"]");n.each(function(){var t=$(this).closest("form");i?($(this).is(":checked")||$(this).prop("checked",i),$(".wr_pack_"+e.group).hide(),$(".wr_pack_double_"+e.group).show(),t.find(".offer_old_price").show(),t.find(".package_price").hide(),t.find(".package_offer_price").show()):($(this).is(":checked")&&$(this).prop("checked",i),$(".wr_pack_double_"+e.group).hide(),$(".wr_pack_"+e.group).show(),t.find(".offer_old_price").hide(),t.find(".package_offer_price").hide(),t.find(".package_price").show())}),$(t).closest("form").find("input[type=radio]:checked").each(function(){s(this)})};$(".buy-form-with-offer input[type=radio]:checked").each(function(){s(this)}),$(".buy-form-with-offer label").has("input[type=radio]").click(function(t){"INPUT"==t.target.tagName&&($input=$(this).find("input:first"),s($input))}),$(".buy-form-with-offer input[type=checkbox]").change(function(){a(this)})}else if($(".buy-form").size()){var o={usd:"$",eur:"€",gbp:"£",cad:"$",aud:"$"},s=function(t){var e=$(t).data(),i=$(".buy-form").find("input[data-period="+e.period+"][data-group="+e.group+"]");if(i.each(function(){$productField=$(this).closest("form").find("input.product_price"),$productField.val($(this).val()),$(this).closest("ul").find("label").removeClass("r_on").addClass("r_off"),$(this).closest("label").addClass("r_on").removeClass("r_off")}),"undefined"!=typeof e.target){var n=$(t).attr("data-price-"+e.cur)/Number(e.period);n=(Math.floor(100*n)/100).toFixed(2),$(e.target).html(n).prev("div.symbol").html(o[e.cur]?o[e.cur]:"")}};$(".buy-form input:checked").each(function(){s(this)}),$(".buy-form label").click(function(t){"INPUT"==t.target.tagName&&s($(this).find("input:first"))})}}),function(t,e,i){function n(t){return t=t||location.href,"#"+t.replace(/^[^#]*#?(.*)$/,"$1")}var o,s="hashchange",a=document,r=t.event.special,l=a.documentMode,d="on"+s in e&&(l===i||l>7);t.fn[s]=function(t){return t?this.bind(s,t):this.trigger(s)},t.fn[s].delay=50,r[s]=t.extend(r[s],{setup:function(){return d?!1:void t(o.start)},teardown:function(){return d?!1:void t(o.stop)}}),o=function(){function o(){var i=n(),a=f(c);i!==c?(h(c=i,a),t(e).trigger(s)):a!==c&&(location.href=location.href.replace(/#.*/,"")+a),r=setTimeout(o,t.fn[s].delay)}var r,l={},c=n(),u=function(t){return t},h=u,f=u;return l.start=function(){r||o()},l.stop=function(){r&&clearTimeout(r),r=i},t.support.msie&&!d&&function(){var e,i;l.start=function(){e||(i=t.fn[s].src,i=i&&i+n(),e=t('<iframe tabindex="-1" title="empty"/>').hide().one("load",function(){i||h(n()),o()}).attr("src",i||"javascript:0").insertAfter("body")[0].contentWindow,a.onpropertychange=function(){try{"title"===event.propertyName&&(e.document.title=a.title)}catch(t){}})},l.stop=u,f=function(){return n(e.location.href)},h=function(i,n){var o=e.document,r=t.fn[s].domain;i!==n&&(o.title=a.title,o.open(),r&&o.write('<script>document.domain="'+r+'"</script>'),o.close(),e.location.hash=i)}}(),l}()}(jQuery,this),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){function e(t){return t}function i(t){return decodeURIComponent(t.replace(o," "))}function n(t){0===t.indexOf('"')&&(t=t.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,"\\"));try{return s.json?JSON.parse(t):t}catch(e){}}var o=/\+/g,s=t.cookie=function(o,a,r){if(void 0!==a){if(r=t.extend({},s.defaults,r),"number"==typeof r.expires){var l=r.expires,d=r.expires=new Date;d.setDate(d.getDate()+l)}return a=s.json?JSON.stringify(a):String(a),document.cookie=[s.raw?o:encodeURIComponent(o),"=",s.raw?a:encodeURIComponent(a),r.expires?"; expires="+r.expires.toUTCString():"",r.path?"; path="+r.path:"",r.domain?"; domain="+r.domain:"",r.secure?"; secure":""].join("")}for(var c=s.raw?e:i,u=document.cookie.split("; "),h=o?void 0:{},f=0,p=u.length;p>f;f++){var m=u[f].split("="),g=c(m.shift()),v=c(m.join("="));if(o&&o===g){h=n(v);break}o||(h[g]=n(v))}return h};s.defaults={},t.removeCookie=function(e,i){return void 0!==t.cookie(e)?(t.cookie(e,"",t.extend({},i,{expires:-1})),!0):!1}}),$(document).ready(function(){$.fn.listHandlers=function(t){this.each(function(e){var i=this,n=$._data($(this).get(0),"events");n&&$.each(n,function(e,n){new RegExp("^("+("*"===t?".+":t.replace(",","|").replace(/^on/i,""))+")$","i").test(e)&&$.each(n,function(t,n){console.info(i,"\n"+t+": ["+e+"] : "+n.handler)})})})},$.fn.hasHandlers=function(t,e){var i=!1;return this.each(function(n){return dEvents=$._data($(this).get(0),"events"),dEvents?void $.each(dEvents,function(n,o){new RegExp("^("+("*"===t?".+":t.replace(",","|").replace(/^on/i,""))+")$","i").test(n)&&$.each(o,function(t,n){n.selector===e&&(i=!0)})}):!1}),i}}),function(t){var e=-1,i=-1,n=function(t){return parseFloat(t)||0},o=function(e){var i=null,o=[];return t(e).each(function(){var e=t(this),s=e.offset().top-n(e.css("margin-top")),a=0<o.length?o[o.length-1]:null;null===a?o.push(e):1>=Math.floor(Math.abs(i-s))?o[o.length-1]=a.add(e):o.push(e),i=s}),o},s=function(e){var i={byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof e?t.extend(i,e):("boolean"==typeof e?i.byRow=e:"remove"===e&&(i.remove=!0),i)},a=t.fn.matchHeight=function(e){if(e=s(e),e.remove){var i=this;return this.css(e.property,""),t.each(a._groups,function(t,e){e.elements=e.elements.not(i)}),this}return 1>=this.length&&!e.target?this:(a._groups.push({elements:this,options:e}),a._apply(this,e),this)};a._groups=[],a._throttle=80,a._maintainScroll=!1,a._beforeUpdate=null,a._afterUpdate=null,a._apply=function(e,i){var r=s(i),l=t(e),d=[l],c=t(window).scrollTop(),u=t("html").outerHeight(!0),h=l.parents().filter(":hidden");return h.each(function(){var e=t(this);e.data("style-cache",e.attr("style"))}),h.css("display","block"),r.byRow&&!r.target&&(l.each(function(){var e=t(this),i=e.css("display");"inline-block"!==i&&"inline-flex"!==i&&(i="block"),e.data("style-cache",e.attr("style")),e.css({display:i,"padding-top":"0","padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px"})}),d=o(l),l.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||"")})),t.each(d,function(e,i){var o=t(i),s=0;if(r.target)s=r.target.outerHeight(!1);else{if(r.byRow&&1>=o.length)return void o.css(r.property,"");o.each(function(){var e=t(this),i=e.css("display");"inline-block"!==i&&"inline-flex"!==i&&(i="block"),i={display:i},i[r.property]="",e.css(i),e.outerHeight(!1)>s&&(s=e.outerHeight(!1)),e.css("display","")})}o.each(function(){var e=t(this),i=0;r.target&&e.is(r.target)||("border-box"!==e.css("box-sizing")&&(i+=n(e.css("border-top-width"))+n(e.css("border-bottom-width")),i+=n(e.css("padding-top"))+n(e.css("padding-bottom"))),e.css(r.property,s-i+"px"))})}),h.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||null)}),a._maintainScroll&&t(window).scrollTop(c/u*t("html").outerHeight(!0)),this},a._applyDataApi=function(){var e={};t("[data-match-height], [data-mh]").each(function(){var i=t(this),n=i.attr("data-mh")||i.attr("data-match-height");e[n]=n in e?e[n].add(i):i}),t.each(e,function(){this.matchHeight(!0)})};var r=function(e){a._beforeUpdate&&a._beforeUpdate(e,a._groups),t.each(a._groups,function(){a._apply(this.elements,this.options)}),a._afterUpdate&&a._afterUpdate(e,a._groups)};a._update=function(n,o){if(o&&"resize"===o.type){var s=t(window).width();if(s===e)return;e=s}n?-1===i&&(i=setTimeout(function(){r(o),i=-1},a._throttle)):r(o)},t(a._applyDataApi),t(window).bind("load",function(t){a._update(!1,t)}),t(window).bind("resize orientationchange",function(t){a._update(!0,t)})}(jQuery),function(t){var e={init:function(i){var n=t.extend({items:1,itemsOnPage:1,pages:0,displayedPages:5,edges:2,currentPage:0,hrefTextPrefix:"#page=",hrefTextSuffix:"",prevText:"Prev",nextText:"Next",ellipseText:"&hellip;",cssStyle:"light-theme",labelMap:[],selectOnClick:!0,nextAtFront:!1,invertPageOrder:!1,useStartEdge:!0,useEndEdge:!0,onPageClick:function(t,e){},onInit:function(){}},i||{}),o=this;return n.pages=n.pages?n.pages:Math.ceil(n.items/n.itemsOnPage)?Math.ceil(n.items/n.itemsOnPage):1,n.currentPage?n.currentPage=n.currentPage-1:n.currentPage=n.invertPageOrder?n.pages-1:0,n.halfDisplayed=n.displayedPages/2,this.each(function(){o.addClass(n.cssStyle+" simple-pagination").data("pagination",n),e._draw.call(o)}),n.onInit(),this},selectPage:function(t){return e._selectPage.call(this,t-1),this},prevPage:function(){var t=this.data("pagination");return t.invertPageOrder?t.currentPage<t.pages-1&&e._selectPage.call(this,t.currentPage+1):t.currentPage>0&&e._selectPage.call(this,t.currentPage-1),this},nextPage:function(){var t=this.data("pagination");return t.invertPageOrder?t.currentPage>0&&e._selectPage.call(this,t.currentPage-1):t.currentPage<t.pages-1&&e._selectPage.call(this,t.currentPage+1),this},getPagesCount:function(){return this.data("pagination").pages},getCurrentPage:function(){return this.data("pagination").currentPage+1},destroy:function(){return this.empty(),this},drawPage:function(t){var i=this.data("pagination");return i.currentPage=t-1,this.data("pagination",i),e._draw.call(this),this},redraw:function(){return e._draw.call(this),this},disable:function(){var t=this.data("pagination");return t.disabled=!0,this.data("pagination",t),e._draw.call(this),this},enable:function(){var t=this.data("pagination");return t.disabled=!1,this.data("pagination",t),e._draw.call(this),this},updateItems:function(t){var i=this.data("pagination");i.items=t,i.pages=e._getPages(i),this.data("pagination",i),e._draw.call(this)},updateItemsOnPage:function(t){var i=this.data("pagination");return i.itemsOnPage=t,i.pages=e._getPages(i),this.data("pagination",i),e._selectPage.call(this,0),this},_draw:function(){var i,n,o=this.data("pagination"),s=e._getInterval(o);e.destroy.call(this),n="function"==typeof this.prop?this.prop("tagName"):this.attr("tagName");var a="UL"===n?this:t('<ul class="pagination"></ul>').appendTo(this);if(o.prevText&&e._appendItem.call(this,o.invertPageOrder?o.currentPage+1:o.currentPage-1,{text:o.prevText,classes:"prev"}),o.nextText&&o.nextAtFront&&e._appendItem.call(this,o.invertPageOrder?o.currentPage-1:o.currentPage+1,{text:o.nextText,classes:"next"}),o.invertPageOrder){if(s.end<o.pages&&o.edges>0){if(o.useStartEdge){var r=Math.max(o.pages-o.edges,s.end);for(i=o.pages-1;i>=r;i--)e._appendItem.call(this,i)}o.pages-o.edges>s.end&&o.pages-o.edges-s.end!=1?a.append('<li class="disabled"><span class="ellipse">'+o.ellipseText+"</span></li>"):o.pages-o.edges-s.end==1&&e._appendItem.call(this,s.end)}}else if(s.start>0&&o.edges>0){if(o.useStartEdge){var l=Math.min(o.edges,s.start);for(i=0;l>i;i++)e._appendItem.call(this,i)}o.edges<s.start&&s.start-o.edges!=1?a.append('<li class="disabled"><span class="ellipse">'+o.ellipseText+"</span></li>"):s.start-o.edges==1&&e._appendItem.call(this,o.edges)}if(o.invertPageOrder)for(i=s.end-1;i>=s.start;i--)e._appendItem.call(this,i);else for(i=s.start;i<s.end;i++)e._appendItem.call(this,i);if(o.invertPageOrder){if(s.start>0&&o.edges>0&&(o.edges<s.start&&s.start-o.edges!=1?a.append('<li class="disabled"><span class="ellipse">'+o.ellipseText+"</span></li>"):s.start-o.edges==1&&e._appendItem.call(this,o.edges),o.useEndEdge)){var l=Math.min(o.edges,s.start);for(i=l-1;i>=0;i--)e._appendItem.call(this,i)}}else if(s.end<o.pages&&o.edges>0&&(o.pages-o.edges>s.end&&o.pages-o.edges-s.end!=1?a.append('<li class="disabled"><span class="ellipse">'+o.ellipseText+"</span></li>"):o.pages-o.edges-s.end==1&&e._appendItem.call(this,s.end),o.useEndEdge)){var r=Math.max(o.pages-o.edges,s.end);for(i=r;i<o.pages;i++)e._appendItem.call(this,i)}o.nextText&&!o.nextAtFront&&e._appendItem.call(this,o.invertPageOrder?o.currentPage-1:o.currentPage+1,{text:o.nextText,classes:"next"})},_getPages:function(t){var e=Math.ceil(t.items/t.itemsOnPage);return e||1},_getInterval:function(t){return{start:Math.ceil(t.currentPage>t.halfDisplayed?Math.max(Math.min(t.currentPage-t.halfDisplayed,t.pages-t.displayedPages),0):0),end:Math.ceil(t.currentPage>t.halfDisplayed?Math.min(t.currentPage+t.halfDisplayed,t.pages):Math.min(t.displayedPages,t.pages))}},_appendItem:function(i,n){var o,s,a=this,r=a.data("pagination"),l=t("<li></li>"),d=a.find("ul");i=0>i?0:i<r.pages?i:r.pages-1,o={text:i+1,classes:""},r.labelMap.length&&r.labelMap[i]&&(o.text=r.labelMap[i]),o=t.extend(o,n||{}),i==r.currentPage||r.disabled?(r.disabled?l.addClass("disabled"):l.addClass("active"),s=t('<span class="current">'+o.text+"</span>")):(s=t('<a href="'+r.hrefTextPrefix+(i+1)+r.hrefTextSuffix+'" class="page-link">'+o.text+"</a>"),s.click(function(t){return e._selectPage.call(a,i,t)})),o.classes&&s.addClass(o.classes),l.append(s),d.length?d.append(l):a.append(l)},_selectPage:function(t,i){var n=this.data("pagination");return n.currentPage=t,n.selectOnClick&&e._draw.call(this),n.onPageClick(t+1,i)}};t.fn.pagination=function(i){return e[i]&&"_"!=i.charAt(0)?e[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?void t.error("Method "+i+" does not exist on jQuery.pagination"):e.init.apply(this,arguments)}}(jQuery),function(t){var e,i=window.localStorage;e="undefined"!=typeof i&&"undefined"!=typeof window.JSON,t.totalStorage=function(e,i){return t.totalStorage.impl.init(e,i)},t.totalStorage.setItem=function(e,i){return t.totalStorage.impl.setItem(e,i)},t.totalStorage.getItem=function(e){return t.totalStorage.impl.getItem(e)},t.totalStorage.getAll=function(){return t.totalStorage.impl.getAll()},t.totalStorage.deleteItem=function(e){return t.totalStorage.impl.deleteItem(e)},t.totalStorage.impl={init:function(t,e){return"undefined"!=typeof e?this.setItem(t,e):this.getItem(t)},setItem:function(n,o){if(!e)try{return t.cookie(n,o),o}catch(s){console.log("Local Storage not supported by this browser. Install the cookie plugin on your site to take advantage of the same functionality. You can get it at https://github.com/carhartl/jquery-cookie")}var a=JSON.stringify(o);return i.setItem(n,a),this.parseResult(a)},getItem:function(n){if(!e)try{return this.parseResult(t.cookie(n))}catch(o){return null}return this.parseResult(i.getItem(n))},deleteItem:function(n){if(!e)try{return t.cookie(n,null),!0}catch(o){return!1}return i.removeItem(n),!0},getAll:function(){var n=[];if(e)for(s in i)s.length&&n.push({key:s,value:this.parseResult(i.getItem(s))});else try{for(var o=document.cookie.split(";"),s=0;s<o.length;s++){var a=o[s].split("=")[0];n.push({key:a,value:this.parseResult(t.cookie(a))})}}catch(r){return null}return n},parseResult:function(t){var e;try{e=JSON.parse(t),"true"==e&&(e=!0),"false"==e&&(e=!1),parseFloat(e)==e&&"object"!=typeof e&&(e=parseFloat(e))}catch(i){}return e}}}(jQuery),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){t.extend(t.fn,{validate:function(e){if(!this.length)return void(e&&e.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var i=t.data(this[0],"validator");return i?i:(this.attr("novalidate","novalidate"),i=new t.validator(e,this[0]),t.data(this[0],"validator",i),i.settings.onsubmit&&(this.validateDelegate(":submit","click",function(e){i.settings.submitHandler&&(i.submitButton=e.target),t(e.target).hasClass("cancel")&&(i.cancelSubmit=!0),void 0!==t(e.target).attr("formnovalidate")&&(i.cancelSubmit=!0)}),this.submit(function(e){function n(){var n,o;return i.settings.submitHandler?(i.submitButton&&(n=t("<input type='hidden'/>").attr("name",i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)),o=i.settings.submitHandler.call(i,i.currentForm,e),i.submitButton&&n.remove(),void 0!==o?o:!1):!0}return i.settings.debug&&e.preventDefault(),i.cancelSubmit?(i.cancelSubmit=!1,n()):i.form()?i.pendingRequest?(i.formSubmitted=!0,!1):n():(i.focusInvalid(),!1)})),i)},valid:function(){var e,i;return t(this[0]).is("form")?e=this.validate().form():(e=!0,i=t(this[0].form).validate(),this.each(function(){e=i.element(this)&&e})),e},removeAttrs:function(e){var i={},n=this;return t.each(e.split(/\s/),function(t,e){i[e]=n.attr(e),n.removeAttr(e)}),i},rules:function(e,i){var n,o,s,a,r,l,d=this[0];if(e)switch(n=t.data(d.form,"validator").settings,o=n.rules,s=t.validator.staticRules(d),e){case"add":t.extend(s,t.validator.normalizeRule(i)),delete s.messages,o[d.name]=s,i.messages&&(n.messages[d.name]=t.extend(n.messages[d.name],i.messages));break;case"remove":return i?(l={},t.each(i.split(/\s/),function(e,i){l[i]=s[i],delete s[i],"required"===i&&t(d).removeAttr("aria-required")}),l):(delete o[d.name],s)}return a=t.validator.normalizeRules(t.extend({},t.validator.classRules(d),t.validator.attributeRules(d),t.validator.dataRules(d),t.validator.staticRules(d)),d),a.required&&(r=a.required,delete a.required,a=t.extend({required:r},a),t(d).attr("aria-required","true")),a.remote&&(r=a.remote,delete a.remote,a=t.extend(a,{remote:r})),a}}),t.extend(t.expr[":"],{blank:function(e){return!t.trim(""+t(e).val())},filled:function(e){return!!t.trim(""+t(e).val())},unchecked:function(e){return!t(e).prop("checked")}}),t.validator=function(e,i){this.settings=t.extend(!0,{},t.validator.defaults,e),this.currentForm=i,this.init()},t.validator.format=function(e,i){return 1===arguments.length?function(){var i=t.makeArray(arguments);return i.unshift(e),t.validator.format.apply(this,i)}:(arguments.length>2&&i.constructor!==Array&&(i=t.makeArray(arguments).slice(1)),i.constructor!==Array&&(i=[i]),t.each(i,function(t,i){e=e.replace(new RegExp("\\{"+t+"\\}","g"),function(){return i})}),e)},t.extend(t.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:t([]),errorLabelContainer:t([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(t){this.lastActive=t,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,t,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(t)))},onfocusout:function(t){this.checkable(t)||!(t.name in this.submitted)&&this.optional(t)||this.element(t)},onkeyup:function(t,e){9===e.which&&""===this.elementValue(t)||(t.name in this.submitted||t===this.lastElement)&&this.element(t)},onclick:function(t){t.name in this.submitted?this.element(t):t.parentNode.name in this.submitted&&this.element(t.parentNode)},highlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).addClass(i).removeClass(n):t(e).addClass(i).removeClass(n)},unhighlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).removeClass(i).addClass(n):t(e).removeClass(i).addClass(n)}},setDefaults:function(e){t.extend(t.validator.defaults,e)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date ( ISO ).",number:"Please enter a valid number.",digits:"Please enter only digits.",creditcard:"Please enter a valid credit card number.",equalTo:"Please enter the same value again.",maxlength:t.validator.format("Please enter no more than {0} characters."),minlength:t.validator.format("Please enter at least {0} characters."),rangelength:t.validator.format("Please enter a value between {0} and {1} characters long."),range:t.validator.format("Please enter a value between {0} and {1}."),max:t.validator.format("Please enter a value less than or equal to {0}."),min:t.validator.format("Please enter a value greater than or equal to {0}.")},autoCreateRanges:!1,prototype:{init:function(){function e(e){var i=t.data(this[0].form,"validator"),n="on"+e.type.replace(/^validate/,""),o=i.settings;o[n]&&!this.is(o.ignore)&&o[n].call(i,this[0],e)}this.labelContainer=t(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||t(this.currentForm),this.containers=t(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var i,n=this.groups={};t.each(this.settings.groups,function(e,i){"string"==typeof i&&(i=i.split(/\s/)),t.each(i,function(t,i){n[i]=e})}),i=this.settings.rules,t.each(i,function(e,n){i[e]=t.validator.normalizeRule(n)}),t(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']","focusin focusout keyup",e).validateDelegate("select, option, [type='radio'], [type='checkbox']","click",e),this.settings.invalidHandler&&t(this.currentForm).bind("invalid-form.validate",this.settings.invalidHandler),t(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required","true")},form:function(){return this.checkForm(),t.extend(this.submitted,this.errorMap),this.invalid=t.extend({},this.errorMap),this.valid()||t(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var t=0,e=this.currentElements=this.elements();e[t];t++)this.check(e[t]);return this.valid()},element:function(e){var i=this.clean(e),n=this.validationTargetFor(i),o=!0;return this.lastElement=n,void 0===n?delete this.invalid[i.name]:(this.prepareElement(n),this.currentElements=t(n),o=this.check(n)!==!1,o?delete this.invalid[n.name]:this.invalid[n.name]=!0),t(e).attr("aria-invalid",!o),this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),o},showErrors:function(e){if(e){t.extend(this.errorMap,e),this.errorList=[];for(var i in e)this.errorList.push({message:e[i],element:this.findByName(i)[0]});this.successList=t.grep(this.successList,function(t){return!(t.name in e)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){t.fn.resetForm&&t(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors(),this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid")},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(t){var e,i=0;for(e in t)i++;return i},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(t){t.not(this.containers).text(""),this.addWrapper(t).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{t(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(e){}},findLastActive:function(){var e=this.lastActive;return e&&1===t.grep(this.errorList,function(t){return t.element.name===e.name}).length&&e},elements:function(){var e=this,i={};return t(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled], [readonly]").not(this.settings.ignore).filter(function(){return!this.name&&e.settings.debug&&window.console&&console.error("%o has no name assigned",this),this.name in i||!e.objectLength(t(this).rules())?!1:(i[this.name]=!0,!0)})},clean:function(e){return t(e)[0]},errors:function(){var e=this.settings.errorClass.split(" ").join(".");return t(this.settings.errorElement+"."+e,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=t([]),this.toHide=t([]),this.currentElements=t([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(t){this.reset(),this.toHide=this.errorsFor(t)},elementValue:function(e){var i,n=t(e),o=e.type;return"radio"===o||"checkbox"===o?t("input[name='"+e.name+"']:checked").val():"number"===o&&"undefined"!=typeof e.validity?e.validity.badInput?!1:n.val():(i=n.val(),"string"==typeof i?i.replace(/\r/g,""):i)},check:function(e){e=this.validationTargetFor(this.clean(e));var i,n,o,s=t(e).rules(),a=t.map(s,function(t,e){return e}).length,r=!1,l=this.elementValue(e);for(n in s){o={method:n,parameters:s[n]};try{if(i=t.validator.methods[n].call(this,l,e,o.parameters),"dependency-mismatch"===i&&1===a){r=!0;continue}if(r=!1,"pending"===i)return void(this.toHide=this.toHide.not(this.errorsFor(e)));if(!i)return this.formatAndAdd(e,o),!1}catch(d){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+e.id+", check the '"+o.method+"' method.",d),d}}if(!r)return this.objectLength(s)&&this.successList.push(e),!0},customDataMessage:function(e,i){return t(e).data("msg"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase())||t(e).data("msg")},customMessage:function(t,e){var i=this.settings.messages[t];return i&&(i.constructor===String?i:i[e])},findDefined:function(){for(var t=0;t<arguments.length;t++)if(void 0!==arguments[t])return arguments[t]},defaultMessage:function(e,i){return this.findDefined(this.customMessage(e.name,i),this.customDataMessage(e,i),!this.settings.ignoreTitle&&e.title||void 0,t.validator.messages[i],"<strong>Warning: No message defined for "+e.name+"</strong>")},formatAndAdd:function(e,i){var n=this.defaultMessage(e,i.method),o=/\$?\{(\d+)\}/g;"function"==typeof n?n=n.call(this,i.parameters,e):o.test(n)&&(n=t.validator.format(n.replace(o,"{$1}"),i.parameters)),
this.errorList.push({message:n,element:e,method:i.method}),this.errorMap[e.name]=n,this.submitted[e.name]=n},addWrapper:function(t){return this.settings.wrapper&&(t=t.add(t.parent(this.settings.wrapper))),t},defaultShowErrors:function(){var t,e,i;for(t=0;this.errorList[t];t++)i=this.errorList[t],this.settings.highlight&&this.settings.highlight.call(this,i.element,this.settings.errorClass,this.settings.validClass),this.showLabel(i.element,i.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(t=0;this.successList[t];t++)this.showLabel(this.successList[t]);if(this.settings.unhighlight)for(t=0,e=this.validElements();e[t];t++)this.settings.unhighlight.call(this,e[t],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return t(this.errorList).map(function(){return this.element})},showLabel:function(e,i){var n,o,s,a=this.errorsFor(e),r=this.idOrName(e),l=t(e).attr("aria-describedby");a.length?(a.removeClass(this.settings.validClass).addClass(this.settings.errorClass),a.html(i)):(a=t("<"+this.settings.errorElement+">").attr("id",r+"-error").addClass(this.settings.errorClass).html(i||""),n=a,this.settings.wrapper&&(n=a.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(n):this.settings.errorPlacement?this.settings.errorPlacement(n,t(e)):n.insertAfter(e),a.is("label")?a.attr("for",r):0===a.parents("label[for='"+r+"']").length&&(s=a.attr("id").replace(/(:|\.|\[|\])/g,"\\$1"),l?l.match(new RegExp("\\b"+s+"\\b"))||(l+=" "+s):l=s,t(e).attr("aria-describedby",l),o=this.groups[e.name],o&&t.each(this.groups,function(e,i){i===o&&t("[name='"+e+"']",this.currentForm).attr("aria-describedby",a.attr("id"))}))),!i&&this.settings.success&&(a.text(""),"string"==typeof this.settings.success?a.addClass(this.settings.success):this.settings.success(a,e)),this.toShow=this.toShow.add(a)},errorsFor:function(e){var i=this.idOrName(e),n=t(e).attr("aria-describedby"),o="label[for='"+i+"'], label[for='"+i+"'] *";return n&&(o=o+", #"+n.replace(/\s+/g,", #")),this.errors().filter(o)},idOrName:function(t){return this.groups[t.name]||(this.checkable(t)?t.name:t.id||t.name)},validationTargetFor:function(e){return this.checkable(e)&&(e=this.findByName(e.name)),t(e).not(this.settings.ignore)[0]},checkable:function(t){return/radio|checkbox/i.test(t.type)},findByName:function(e){return t(this.currentForm).find("[name='"+e+"']")},getLength:function(e,i){switch(i.nodeName.toLowerCase()){case"select":return t("option:selected",i).length;case"input":if(this.checkable(i))return this.findByName(i.name).filter(":checked").length}return e.length},depend:function(t,e){return this.dependTypes[typeof t]?this.dependTypes[typeof t](t,e):!0},dependTypes:{"boolean":function(t){return t},string:function(e,i){return!!t(e,i.form).length},"function":function(t,e){return t(e)}},optional:function(e){var i=this.elementValue(e);return!t.validator.methods.required.call(this,i,e)&&"dependency-mismatch"},startRequest:function(t){this.pending[t.name]||(this.pendingRequest++,this.pending[t.name]=!0)},stopRequest:function(e,i){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[e.name],i&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(t(this.currentForm).submit(),this.formSubmitted=!1):!i&&0===this.pendingRequest&&this.formSubmitted&&(t(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(e){return t.data(e,"previousValue")||t.data(e,"previousValue",{old:null,valid:!0,message:this.defaultMessage(e,"remote")})}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(e,i){e.constructor===String?this.classRuleSettings[e]=i:t.extend(this.classRuleSettings,e)},classRules:function(e){var i={},n=t(e).attr("class");return n&&t.each(n.split(" "),function(){this in t.validator.classRuleSettings&&t.extend(i,t.validator.classRuleSettings[this])}),i},attributeRules:function(e){var i,n,o={},s=t(e),a=e.getAttribute("type");for(i in t.validator.methods)"required"===i?(n=e.getAttribute(i),""===n&&(n=!0),n=!!n):n=s.attr(i),/min|max/.test(i)&&(null===a||/number|range|text/.test(a))&&(n=Number(n)),n||0===n?o[i]=n:a===i&&"range"!==a&&(o[i]=!0);return o.maxlength&&/-1|2147483647|524288/.test(o.maxlength)&&delete o.maxlength,o},dataRules:function(e){var i,n,o={},s=t(e);for(i in t.validator.methods)n=s.data("rule"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase()),void 0!==n&&(o[i]=n);return o},staticRules:function(e){var i={},n=t.data(e.form,"validator");return n.settings.rules&&(i=t.validator.normalizeRule(n.settings.rules[e.name])||{}),i},normalizeRules:function(e,i){return t.each(e,function(n,o){if(o===!1)return void delete e[n];if(o.param||o.depends){var s=!0;switch(typeof o.depends){case"string":s=!!t(o.depends,i.form).length;break;case"function":s=o.depends.call(i,i)}s?e[n]=void 0!==o.param?o.param:!0:delete e[n]}}),t.each(e,function(n,o){e[n]=t.isFunction(o)?o(i):o}),t.each(["minlength","maxlength"],function(){e[this]&&(e[this]=Number(e[this]))}),t.each(["rangelength","range"],function(){var i;e[this]&&(t.isArray(e[this])?e[this]=[Number(e[this][0]),Number(e[this][1])]:"string"==typeof e[this]&&(i=e[this].replace(/[\[\]]/g,"").split(/[\s,]+/),e[this]=[Number(i[0]),Number(i[1])]))}),t.validator.autoCreateRanges&&(null!=e.min&&null!=e.max&&(e.range=[e.min,e.max],delete e.min,delete e.max),null!=e.minlength&&null!=e.maxlength&&(e.rangelength=[e.minlength,e.maxlength],delete e.minlength,delete e.maxlength)),e},normalizeRule:function(e){if("string"==typeof e){var i={};t.each(e.split(/\s/),function(){i[this]=!0}),e=i}return e},addMethod:function(e,i,n){t.validator.methods[e]=i,t.validator.messages[e]=void 0!==n?n:t.validator.messages[e],i.length<3&&t.validator.addClassRules(e,t.validator.normalizeRule(e))},methods:{required:function(e,i,n){if(!this.depend(n,i))return"dependency-mismatch";if("select"===i.nodeName.toLowerCase()){var o=t(i).val();return o&&o.length>0}return this.checkable(i)?this.getLength(e,i)>0:t.trim(e).length>0},email:function(t,e){return this.optional(e)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t)},url:function(t,e){return this.optional(e)||/^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t)},date:function(t,e){return this.optional(e)||!/Invalid|NaN/.test(new Date(t).toString())},dateISO:function(t,e){return this.optional(e)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t)},number:function(t,e){return this.optional(e)||/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)},digits:function(t,e){return this.optional(e)||/^\d+$/.test(t)},creditcard:function(t,e){if(this.optional(e))return"dependency-mismatch";if(/[^0-9 \-]+/.test(t))return!1;var i,n,o=0,s=0,a=!1;if(t=t.replace(/\D/g,""),t.length<13||t.length>19)return!1;for(i=t.length-1;i>=0;i--)n=t.charAt(i),s=parseInt(n,10),a&&(s*=2)>9&&(s-=9),o+=s,a=!a;return o%10===0},minlength:function(e,i,n){var o=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||o>=n},maxlength:function(e,i,n){var o=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||n>=o},rangelength:function(e,i,n){var o=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||o>=n[0]&&o<=n[1]},min:function(t,e,i){return this.optional(e)||t>=i},max:function(t,e,i){return this.optional(e)||i>=t},range:function(t,e,i){return this.optional(e)||t>=i[0]&&t<=i[1]},equalTo:function(e,i,n){var o=t(n);return this.settings.onfocusout&&o.unbind(".validate-equalTo").bind("blur.validate-equalTo",function(){t(i).valid()}),e===o.val()},remote:function(e,i,n){if(this.optional(i))return"dependency-mismatch";var o,s,a=this.previousValue(i);return this.settings.messages[i.name]||(this.settings.messages[i.name]={}),a.originalMessage=this.settings.messages[i.name].remote,this.settings.messages[i.name].remote=a.message,n="string"==typeof n&&{url:n}||n,a.old===e?a.valid:(a.old=e,o=this,this.startRequest(i),s={},s[i.name]=e,t.ajax(t.extend(!0,{url:n,mode:"abort",port:"validate"+i.name,dataType:"json",data:s,context:o.currentForm,success:function(n){var s,r,l,d=n===!0||"true"===n;o.settings.messages[i.name].remote=a.originalMessage,d?(l=o.formSubmitted,o.prepareElement(i),o.formSubmitted=l,o.successList.push(i),delete o.invalid[i.name],o.showErrors()):(s={},r=n||o.defaultMessage(i,"remote"),s[i.name]=a.message=t.isFunction(r)?r(e):r,o.invalid[i.name]=!0,o.showErrors(s)),a.valid=d,o.stopRequest(i,d)}},n)),"pending")}}}),t.format=function(){throw"$.format has been deprecated. Please use $.validator.format instead."};var e,i={};t.ajaxPrefilter?t.ajaxPrefilter(function(t,e,n){var o=t.port;"abort"===t.mode&&(i[o]&&i[o].abort(),i[o]=n)}):(e=t.ajax,t.ajax=function(n){var o=("mode"in n?n:t.ajaxSettings).mode,s=("port"in n?n:t.ajaxSettings).port;return"abort"===o?(i[s]&&i[s].abort(),i[s]=e.apply(this,arguments),i[s]):e.apply(this,arguments)}),t.extend(t.fn,{validateDelegate:function(e,i,n){return this.bind(i,function(i){var o=t(i.target);return o.is(e)?n.apply(o,arguments):void 0})}})}),$(function(){$(".select_inverse, .select").selectpicker(),$(".dbody > .row > div:first-child").on("click",function(t){var e=$(this);$(t.target).closest(".popover").length||(e.hasClass("active")?e.removeClass("active"):($(".dbody > .row > div").removeClass("active"),e.addClass("active")))}),$(window).scroll(function(){$(this).scrollTop()>100?$(".go_up").fadeIn():$(".go_up").fadeOut()}),$(".go_up").on("click",function(){return $("body,html").animate({scrollTop:0},800),!1}),$(".go_block_scroll").length&&$(".go_block_scroll").on("click",function(){var t=$(this).attr("data-go-block")?"#".$(this).attr("data-go-block"):$(this).attr("href")?$(this).attr("href"):!1;return t&&$(t).length?($("html, body").animate({scrollTop:Math.ceil($(t).offset().top)},"linear"),!1):void 0}),$('form[name="price_premium_bottom"], form[name="price_basic_bottom"], form[name="price_premium"], form[name="price_basic"]').length&&$('form[name="price_premium_bottom"], form[name="price_basic_bottom"], form[name="price_premium"], form[name="price_basic"]').submit(function(){ga("linker:decorate",this)})}),$(document).ready(function(){"undefined"==typeof $.cookie("popUp_email")&&$.cookie("popUp_email",0,{expires:1}),$(".block-popUp-close").on("click",function(){var t=$(this).parents(".popUp");$(this);t.bPopup().close()})}),function(t){t.fn.bindImageLoad=function(e){function i(t){return t.complete?"undefined"==typeof t.naturalWidth||0!==t.naturalWidth:!1}return this.each(function(){var n=t(this);n.is("img")&&t.isFunction(e)&&(n.one("load",e),i(this)&&n.trigger("load"))})}}(jQuery),$(document).ready(function(){$("form .box-captcha > img").length&&$("form .box-captcha > img").bindImageLoad(function(){var t=$(this).parents(".box-captcha"),e=t.width(),i=($(this).width(),$(this).outerWidth(!0),t.find(".update-captcha"));$(this).css({width:e-54+"px"}),i.attr("attr-width",e-54)}),$("#box-content-post img, #block-content img").length&&$("#box-content-post img, #block-content img").bindImageLoad(function(){var t=$(this).attr("width"),e=$(this).closest(".wp-caption"),i=e.find(".wp-caption-text"),n=($(this).attr("src"),$(this).attr("height")),o=$(this).outerWidth(!0),s=e.outerWidth(!0);$(this).attr("attr-width",t).removeAttr("width"),$(this).attr("attr-height",n).removeAttr("height"),$(this).css({"background-size":"contain",height:"auto",width:"auto","max-height":n+"px"}),e.length&&e.css({clear:"both",width:"auto"}),i.length&&(s>0?i.css({width:"100%","max-width":s+"px"}):o>0&&i.css({width:"100%","max-width":o+"px"}))})}),$(window).resize(function(){$(window).width();$("form .box-captcha > img").length&&$("form .box-captcha > img").each(function(){var t=$(this).parents(".box-captcha"),e=t.width(),i=($(this).width(),$(this).outerWidth(!0),t.find(".update-captcha"));$(this).css({width:e-54+"px"}),i.attr("attr-width",e-54)}),$("#box-content-post img, #block-content img").length&&$("#box-content-post img, #block-content img").each(function(){var t=$(this).parents(".wp-caption"),e=$(this).outerWidth(!0);$(this).closest("#attachment").outerWidth(!0),$(this).width(),$(this).attr("attr-width");t.find(".wp-caption-text").length&&t.find(".wp-caption-text").css({width:e+"px"})})}),$(document).ready(function(){}),$(window).resize(function(){}),function(t){t.fn.scrollPumpic=function(e){var i=t(this);offset=i.offset();var n=!1,o=!1,s=!1,a={start:0,stop:offset.top+i.height(),_objFly:".box-fly-discount",right:0,_show:!0,_settings:{_responce:!0,_validate:!0,_validateObj:"#form-discount-fly"},animate:{type:"",timeShow:200,timeHide:100}};s&&console.log("---------------------------- // INIT PLUGIN SCROLL ----------------------------");var r=t.extend(a,e);o=r._objFly?r._objFly:!1,s&&(console.log("SCROLL SETTINGS: ",r),console.log("start = "+r.start,"stop = "+r.stop));var l={init:function(e){switch(e?i.find(o).addClass("fixed"):i.find(o).removeClass("fixed"),r.animate.type){case"fade":s&&console.log(e),e&&i.not(":visible")?i.stop(!0).queue("fx",function(){t(this).fadeIn(r.animate.timeShow).dequeue("fx"),r._settings._validate&&t(r._settings._validateObj).validate()}):!e&&i.is(":visible")&&i.stop(!0).queue("fx",function(){t(this).fadeOut(r.animate.timeHide).dequeue("fx")});break;case"visible":s&&console.log(e),e&&i.not(":visible")?i.stop(!0).queue("fx",function(){t(this).show(r.animate.timeShow).dequeue("fx"),r._settings._validate&&t(r._settings._validateObj).validate()}):!e&&i.is(":visible")&&i.stop(!0).queue("fx",function(){t(this).hide(r.animate.timeHide).dequeue("fx")});break;case"blinking":s&&console.log(e),e&&i.not(":visible")?i.stop(!0).queue("fx",function(){t(this).animate({opacity:1},r.animate.timeShow).dequeue("fx"),r._settings._validate&&t(r._settings._validateObj).validate()}):!e&&i.is(":visible")&&i.stop(!0).queue("fx",function(){t(this).animate({opacity:0},r.animate.timeHide).dequeue("fx")});break;default:s&&console.log(e),e&&i.not(":visible")?i.stop(!0).queue("fx",function(){t(this).animate({opacity:1},r.animate.timeShow).dequeue("fx"),r._settings._validate&&t(r._settings._validateObj).validate()}):!e&&i.is(":visible")&&i.stop(!0).queue("fx",function(){t(this).animate({opacity:0},r.animate.timeHide).dequeue("fx")})}}};t(window).hasHandlers("scroll")&&t(window).off("scroll"),t(window).on("scroll",function(){windowTop=t(window).scrollTop(),n=r.stop?windowTop<=r.stop:!1,s&&console.log("windowTop = "+windowTop,"_stop = "+n+" opts.start = "+r.start),windowTop>=r.start&&!n?(r.right>0&&(t(window).width()>800?i.find(o).css({"margin-right":r.right+"px"}):i.find(o).css({"margin-right":"0px"})),r._show=!0):(windowTop<r.start||n)&&(r._show=!1),l.init(r._show)})}}(jQuery);var mobile_slider='<div class="slide">';mobile_slider+='<div class="col-sm-12 col-md-4 col-lg-4 col-xs-12">',mobile_slider+='<img src="{img_src}" class="testimonial-photo">',mobile_slider+='<div class="testimonial-text">{text}</div>',mobile_slider+="</div>",mobile_slider+="</div>";var objSliderMobile=$(".bxSliderMobile"),bxSliders=!1,bxSlidersMobile=!1,bxSlidersPC=!1;$(document).ready(function(){$(".bxSliders").length&&(!bxSlidersPC&&$(".bxSliders.only-pc").length&&(bxSlidersPC=runSliders($(".bxSliders.only-pc"))),$(window).on("load resize",function(){$(this).width()<992?(bxSlidersMobile||$(".bxSliderMobile").find(".slide").length||(sliderMobileInit(objSliderMobile,$(".bxSliders.only-pc")),bxSlidersMobile=runSliders($(".bxSliderMobile"))),bxSlidersPC&&(bxSlidersPC.destroySlider(),bxSlidersPC=!1)):(bxSlidersMobile&&$(".bxSliderMobile").length&&$(".bxSliderMobile").find(".slide").length&&(bxSlidersMobile.destroySlider(),clearSliderMobile(objSliderMobile),bxSlidersMobile=!1),bxSlidersPC||(bxSlidersPC=runSliders($(".bxSliders.only-pc"))))})),$(".slider-ipad").length&&$(".slider-ipad").bxSlider({slideWidth:385,minSlides:1,controls:!0,nextSelector:"#slider-next",prevSelector:"#slider-prev",nextText:"",prevText:""})}),function(t){var e={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,slideZIndex:50,wrapperClass:"bx-wrapper",touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,keyboardEnabled:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",autoHover:!1,autoDelay:0,autoSlideForOnePage:!1,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,onSliderLoad:function(){return!0},onSlideBefore:function(){return!0},onSlideAfter:function(){return!0},onSlideNext:function(){return!0},onSlidePrev:function(){return!0},onSliderResize:function(){return!0}};t.fn.bxSlider=function(n){if(0===this.length)return this;if(this.length>1)return this.each(function(){t(this).bxSlider(n)}),this;var o={},s=this,a=t(window).width(),r=t(window).height(),l=function(){o.settings=t.extend({},e,n),o.settings.slideWidth=parseInt(o.settings.slideWidth),o.children=s.children(o.settings.slideSelector),o.children.length<o.settings.minSlides&&(o.settings.minSlides=o.children.length),o.children.length<o.settings.maxSlides&&(o.settings.maxSlides=o.children.length),o.settings.randomStart&&(o.settings.startSlide=Math.floor(Math.random()*o.children.length)),o.active={index:o.settings.startSlide},o.carousel=o.settings.minSlides>1||o.settings.maxSlides>1,o.carousel&&(o.settings.preloadImages="all"),o.minThreshold=o.settings.minSlides*o.settings.slideWidth+(o.settings.minSlides-1)*o.settings.slideMargin,o.maxThreshold=o.settings.maxSlides*o.settings.slideWidth+(o.settings.maxSlides-1)*o.settings.slideMargin,o.working=!1,o.controls={},o.interval=null,o.animProp="vertical"===o.settings.mode?"top":"left",o.usingCSS=o.settings.useCSS&&"fade"!==o.settings.mode&&function(){var t=document.createElement("div"),e=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"];for(var i in e)if(void 0!==t.style[e[i]])return o.cssPrefix=e[i].replace("Perspective","").toLowerCase(),o.animProp="-"+o.cssPrefix+"-transform",!0;return!1}(),"vertical"===o.settings.mode&&(o.settings.maxSlides=o.settings.minSlides),s.data("origStyle",s.attr("style")),s.children(o.settings.slideSelector).each(function(){t(this).data("origStyle",t(this).attr("style"))}),d()},d=function(){s.wrap('<div class="'+o.settings.wrapperClass+'"><div class="bx-viewport"></div></div>'),o.viewport=s.parent(),o.loader=t('<div class="bx-loading" />'),o.viewport.prepend(o.loader),s.css({width:"horizontal"===o.settings.mode?1e3*o.children.length+215+"%":"auto",position:"absolute"}),o.usingCSS&&o.settings.easing?s.css("-"+o.cssPrefix+"-transition-timing-function",o.settings.easing):o.settings.easing||(o.settings.easing="swing");m();o.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),o.viewport.parent().css({maxWidth:f()}),o.settings.pager||o.settings.controls||o.viewport.parent().css({margin:"0 auto 0px"}),o.children.css({"float":"horizontal"===o.settings.mode?"left":"none",listStyle:"none",position:"relative"}),o.children.css("width",p()),"horizontal"===o.settings.mode&&o.settings.slideMargin>0&&o.children.css("marginRight",o.settings.slideMargin),"vertical"===o.settings.mode&&o.settings.slideMargin>0&&o.children.css("marginBottom",o.settings.slideMargin),"fade"===o.settings.mode&&(o.children.css({position:"absolute",zIndex:0,display:"none"}),o.children.eq(o.settings.startSlide).css({zIndex:o.settings.slideZIndex,display:"block"})),o.controls.el=t('<div class="bx-controls" />'),o.settings.captions&&_(),o.active.last=o.settings.startSlide===g()-1,o.settings.video&&s.fitVids();var e=o.children.eq(o.settings.startSlide);("all"===o.settings.preloadImages||o.settings.ticker)&&(e=o.children),o.settings.ticker?o.settings.pager=!1:(o.settings.controls&&$(),o.settings.auto&&o.settings.autoControls&&C(),o.settings.pager&&x(),(o.settings.controls||o.settings.autoControls||o.settings.pager)&&o.viewport.after(o.controls.el)),c(e,u)},c=function(e,i){var n=e.find('img:not([src=""]), iframe').length;if(0===n)return void i();var o=0;e.find('img:not([src=""]), iframe').each(function(){t(this).one("load error",function(){++o===n&&i()}).each(function(){this.complete&&t(this).load()})})},u=function(){if(o.settings.infiniteLoop&&"fade"!==o.settings.mode&&!o.settings.ticker){var e="vertical"===o.settings.mode?o.settings.minSlides:o.settings.maxSlides,i=o.children.slice(0,e).clone(!0).addClass("bx-clone"),n=o.children.slice(-e).clone(!0).addClass("bx-clone");s.append(i).prepend(n)}o.loader.remove(),b(),"vertical"===o.settings.mode&&(o.settings.adaptiveHeight=!0),o.viewport.height(h()),s.redrawSlider(),o.settings.onSliderLoad(o,o.active.index),o.initialized=!0,o.settings.responsive&&t(window).bind("resize",Y),o.settings.auto&&o.settings.autoStart&&(g()>1||o.settings.autoSlideForOnePage)&&j(),o.settings.ticker&&q(),o.settings.pager&&D(o.settings.startSlide),o.settings.controls&&A(),o.settings.touchEnabled&&!o.settings.ticker&&z(),o.settings.keyboardEnabled&&!o.settings.ticker&&t(document).keydown(L)},h=function(){var e=0,n=t();if("vertical"===o.settings.mode||o.settings.adaptiveHeight)if(o.carousel){var s=1===o.settings.moveSlides?o.active.index:o.active.index*v();for(n=o.children.eq(s),i=1;i<=o.settings.maxSlides-1;i++)n=s+i>=o.children.length?n.add(o.children.eq(i-1)):n.add(o.children.eq(s+i))}else n=o.children.eq(o.active.index);else n=o.children;return"vertical"===o.settings.mode?(n.each(function(i){e+=t(this).outerHeight()}),o.settings.slideMargin>0&&(e+=o.settings.slideMargin*(o.settings.minSlides-1))):e=Math.max.apply(Math,n.map(function(){return t(this).outerHeight(!1)}).get()),"border-box"===o.viewport.css("box-sizing")?e+=parseFloat(o.viewport.css("padding-top"))+parseFloat(o.viewport.css("padding-bottom"))+parseFloat(o.viewport.css("border-top-width"))+parseFloat(o.viewport.css("border-bottom-width")):"padding-box"===o.viewport.css("box-sizing")&&(e+=parseFloat(o.viewport.css("padding-top"))+parseFloat(o.viewport.css("padding-bottom"))),e},f=function(){var t="100%";return o.settings.slideWidth>0&&(t="horizontal"===o.settings.mode?o.settings.maxSlides*o.settings.slideWidth+(o.settings.maxSlides-1)*o.settings.slideMargin:o.settings.slideWidth),t},p=function(){var t=o.settings.slideWidth,e=o.viewport.width();return 0===o.settings.slideWidth||o.settings.slideWidth>e&&!o.carousel||"vertical"===o.settings.mode?t=e:o.settings.maxSlides>1&&"horizontal"===o.settings.mode&&(e>o.maxThreshold||e<o.minThreshold&&(t=(e-o.settings.slideMargin*(o.settings.minSlides-1))/o.settings.minSlides)),t},m=function(){var t=1;if("horizontal"===o.settings.mode&&o.settings.slideWidth>0)if(o.viewport.width()<o.minThreshold)t=o.settings.minSlides;else if(o.viewport.width()>o.maxThreshold)t=o.settings.maxSlides;else{var e=o.children.first().width()+o.settings.slideMargin;t=Math.floor((o.viewport.width()+o.settings.slideMargin)/e)}else"vertical"===o.settings.mode&&(t=o.settings.minSlides);return t},g=function(){var t=0;if(o.settings.moveSlides>0)if(o.settings.infiniteLoop)t=Math.ceil(o.children.length/v());else for(var e=0,i=0;e<o.children.length;)++t,e=i+m(),i+=o.settings.moveSlides<=m()?o.settings.moveSlides:m();else t=Math.ceil(o.children.length/m());return t},v=function(){return o.settings.moveSlides>0&&o.settings.moveSlides<=m()?o.settings.moveSlides:m()},b=function(){var t;if(o.children.length>o.settings.maxSlides&&o.active.last&&!o.settings.infiniteLoop){if("horizontal"===o.settings.mode){var e=o.children.last();t=e.position(),y(-(t.left-(o.viewport.width()-e.outerWidth())),"reset",0)}else if("vertical"===o.settings.mode){var i=o.children.length-o.settings.minSlides;t=o.children.eq(i).position(),y(-t.top,"reset",0)}}else t=o.children.eq(o.active.index*v()).position(),o.active.index===g()-1&&(o.active.last=!0),void 0!==t&&("horizontal"===o.settings.mode?y(-t.left,"reset",0):"vertical"===o.settings.mode&&y(-t.top,"reset",0))},y=function(t,e,i,n){if(o.usingCSS){var a="vertical"===o.settings.mode?"translate3d(0, "+t+"px, 0)":"translate3d("+t+"px, 0, 0)";s.css("-"+o.cssPrefix+"-transition-duration",i/1e3+"s"),"slide"===e?setTimeout(function(){s.css(o.animProp,a),0===t?F():s.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(){s.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),F()})},0):"reset"===e?s.css(o.animProp,a):"ticker"===e&&(s.css("-"+o.cssPrefix+"-transition-timing-function","linear"),s.css(o.animProp,a),s.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(){s.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),y(n.resetValue,"reset",0),O()}))}else{var r={};r[o.animProp]=t,"slide"===e?s.animate(r,i,o.settings.easing,function(){F()}):"reset"===e?s.css(o.animProp,t):"ticker"===e&&s.animate(r,speed,"linear",function(){y(n.resetValue,"reset",0),O()})}},w=function(){for(var e="",i=g(),n=0;i>n;n++){var s="";o.settings.buildPager&&t.isFunction(o.settings.buildPager)||o.settings.pagerCustom?(s=o.settings.buildPager(n),o.pagerEl.addClass("bx-custom-pager")):(s=n+1,o.pagerEl.addClass("bx-default-pager")),e+='<div class="bx-pager-item"><a href="" data-slide-index="'+n+'" class="bx-pager-link">'+s+"</a></div>"}i>1&&o.pagerEl.html(e)},x=function(){o.settings.pagerCustom?o.pagerEl=t(o.settings.pagerCustom):(o.pagerEl=t('<div class="bx-pager" />'),o.settings.pagerSelector?t(o.settings.pagerSelector).html(o.pagerEl):o.controls.el.addClass("bx-has-pager").append(o.pagerEl),w()),o.pagerEl.on("click touchend","a",I)},$=function(){o.controls.next=t('<a class="bx-next" href="">'+o.settings.nextText+"</a>"),o.controls.prev=t('<a class="bx-prev" href="">'+o.settings.prevText+"</a>"),o.controls.next.bind("click touchend",k),o.controls.prev.bind("click touchend",T),o.settings.nextSelector&&t(o.settings.nextSelector).append(o.controls.next),o.settings.prevSelector&&t(o.settings.prevSelector).append(o.controls.prev),o.settings.nextSelector||o.settings.prevSelector||(o.controls.directionEl=t('<div class="bx-controls-direction" />'),o.controls.directionEl.append(o.controls.prev).append(o.controls.next),o.controls.el.addClass("bx-has-controls-direction").append(o.controls.directionEl))},C=function(){o.controls.start=t('<div class="bx-controls-auto-item"><a class="bx-start" href="">'+o.settings.startText+"</a></div>"),o.controls.stop=t('<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+o.settings.stopText+"</a></div>"),o.controls.autoEl=t('<div class="bx-controls-auto" />'),o.controls.autoEl.on("click",".bx-start",S),o.controls.autoEl.on("click",".bx-stop",E),o.settings.autoControlsCombine?o.controls.autoEl.append(o.controls.start):o.controls.autoEl.append(o.controls.start).append(o.controls.stop),o.settings.autoControlsSelector?t(o.settings.autoControlsSelector).html(o.controls.autoEl):o.controls.el.addClass("bx-has-controls-auto").append(o.controls.autoEl),P(o.settings.autoStart?"stop":"start")},_=function(){o.children.each(function(e){var i=t(this).find("img:first").attr("title");void 0!==i&&(""+i).length&&t(this).append('<div class="bx-caption"><span>'+i+"</span></div>")})},k=function(t){t.preventDefault(),o.controls.el.hasClass("disabled")||(o.settings.auto&&s.stopAuto(),s.goToNextSlide())},T=function(t){t.preventDefault(),o.controls.el.hasClass("disabled")||(o.settings.auto&&s.stopAuto(),s.goToPrevSlide())},S=function(t){s.startAuto(),t.preventDefault()},E=function(t){s.stopAuto(),t.preventDefault()},I=function(e){if(e.preventDefault(),!o.controls.el.hasClass("disabled")){o.settings.auto&&s.stopAuto();var i=t(e.currentTarget);if(void 0!==i.attr("data-slide-index")){var n=parseInt(i.attr("data-slide-index"));n!==o.active.index&&s.goToSlide(n)}}},D=function(e){var i=o.children.length;return"short"===o.settings.pagerType?(o.settings.maxSlides>1&&(i=Math.ceil(o.children.length/o.settings.maxSlides)),void o.pagerEl.html(e+1+o.settings.pagerShortSeparator+i)):(o.pagerEl.find("a").removeClass("active"),void o.pagerEl.each(function(i,n){t(n).find("a").eq(e).addClass("active")}))},F=function(){if(o.settings.infiniteLoop){var t="";0===o.active.index?t=o.children.eq(0).position():o.active.index===g()-1&&o.carousel?t=o.children.eq((g()-1)*v()).position():o.active.index===o.children.length-1&&(t=o.children.eq(o.children.length-1).position()),t&&("horizontal"===o.settings.mode?y(-t.left,"reset",0):"vertical"===o.settings.mode&&y(-t.top,"reset",0))}o.working=!1,o.settings.onSlideAfter(o.children.eq(o.active.index),o.oldIndex,o.active.index)},P=function(t){o.settings.autoControlsCombine?o.controls.autoEl.html(o.controls[t]):(o.controls.autoEl.find("a").removeClass("active"),o.controls.autoEl.find("a:not(.bx-"+t+")").addClass("active"))},A=function(){1===g()?(o.controls.prev.addClass("disabled"),o.controls.next.addClass("disabled")):!o.settings.infiniteLoop&&o.settings.hideControlOnEnd&&(0===o.active.index?(o.controls.prev.addClass("disabled"),o.controls.next.removeClass("disabled")):o.active.index===g()-1?(o.controls.next.addClass("disabled"),o.controls.prev.removeClass("disabled")):(o.controls.prev.removeClass("disabled"),o.controls.next.removeClass("disabled")))},j=function(){if(o.settings.autoDelay>0){setTimeout(s.startAuto,o.settings.autoDelay)}else s.startAuto(),t(window).focus(function(){s.startAuto()}).blur(function(){s.stopAuto()});o.settings.autoHover&&s.hover(function(){o.interval&&(s.stopAuto(!0),o.autoPaused=!0)},function(){o.autoPaused&&(s.startAuto(!0),o.autoPaused=null)})},q=function(){var e=0;if("next"===o.settings.autoDirection)s.append(o.children.clone().addClass("bx-clone"));else{s.prepend(o.children.clone().addClass("bx-clone"));var i=o.children.first().position();e="horizontal"===o.settings.mode?-i.left:-i.top}if(y(e,"reset",0),o.settings.pager=!1,o.settings.controls=!1,o.settings.autoControls=!1,o.settings.tickerHover)if(o.usingCSS){var n,a="horizontal"==o.settings.mode?4:5;o.viewport.hover(function(){var t=s.css("-"+o.cssPrefix+"-transform");n=parseFloat(t.split(",")[a]),y(n,"reset",0)},function(){var e=0;o.children.each(function(i){e+="horizontal"==o.settings.mode?t(this).outerWidth(!0):t(this).outerHeight(!0)});var i=o.settings.speed/e,s=("horizontal"==o.settings.mode?"left":"top",
i*(e-Math.abs(parseInt(n))));O(s)})}else o.viewport.hover(function(){s.stop()},function(){var e=0;o.children.each(function(i){e+="horizontal"==o.settings.mode?t(this).outerWidth(!0):t(this).outerHeight(!0)});var i=o.settings.speed/e,n="horizontal"==o.settings.mode?"left":"top",a=i*(e-Math.abs(parseInt(s.css(n))));O(a)});O()},O=function(t){speed=t?t:o.settings.speed;var e={left:0,top:0},i={left:0,top:0};"next"===o.settings.autoDirection?e=s.find(".bx-clone").first().position():i=o.children.first().position();var n="horizontal"===o.settings.mode?-e.left:-e.top,a="horizontal"===o.settings.mode?-i.left:-i.top,r={resetValue:a};y(n,"ticker",speed,r)},M=function(e){var i=t(window),n={top:i.scrollTop(),left:i.scrollLeft()};n.right=n.left+i.width(),n.bottom=n.top+i.height();var o=e.offset();return o.right=o.left+e.outerWidth(),o.bottom=o.top+e.outerHeight(),!(n.right<o.left||n.left>o.right||n.bottom<o.top||n.top>o.bottom)},L=function(t){var e=document.activeElement.tagName.toLowerCase(),i="input|textarea",n=new RegExp(e,["i"]),o=n.exec(i);if(null==o&&M(s)){if(39==t.keyCode)return k(t),!1;if(37==t.keyCode)return T(t),!1}},z=function(){o.touch={start:{x:0,y:0},end:{x:0,y:0}},o.viewport.bind("touchstart MSPointerDown pointerdown",N),o.viewport.on("click",".bxslider a",function(t){o.viewport.hasClass("click-disabled")&&(t.preventDefault(),o.viewport.removeClass("click-disabled"))})},N=function(t){if(o.controls.el.addClass("disabled"),o.working)t.preventDefault(),o.controls.el.removeClass("disabled");else{o.touch.originalPos=s.position();var e=t.originalEvent,i="undefined"!=typeof e.changedTouches?e.changedTouches:[e];o.touch.start.x=i[0].pageX,o.touch.start.y=i[0].pageY,o.viewport.get(0).setPointerCapture&&(o.pointerId=e.pointerId,o.viewport.get(0).setPointerCapture(o.pointerId)),o.viewport.bind("touchmove MSPointerMove pointermove",R),o.viewport.bind("touchend MSPointerUp pointerup",U),o.viewport.bind("MSPointerCancel pointercancel",H)}},H=function(t){y(o.touch.originalPos.left,"reset",0),o.controls.el.removeClass("disabled"),o.viewport.unbind("MSPointerCancel pointercancel",H),o.viewport.unbind("touchmove MSPointerMove pointermove",R),o.viewport.unbind("touchend MSPointerUp pointerup",U),o.viewport.get(0).releasePointerCapture&&o.viewport.get(0).releasePointerCapture(o.pointerId)},R=function(t){var e=t.originalEvent,i="undefined"!=typeof e.changedTouches?e.changedTouches:[e],n=Math.abs(i[0].pageX-o.touch.start.x),s=Math.abs(i[0].pageY-o.touch.start.y);if(3*n>s&&o.settings.preventDefaultSwipeX?t.preventDefault():3*s>n&&o.settings.preventDefaultSwipeY&&t.preventDefault(),"fade"!==o.settings.mode&&o.settings.oneToOneTouch){var a=0,r=0;"horizontal"===o.settings.mode?(r=i[0].pageX-o.touch.start.x,a=o.touch.originalPos.left+r):(r=i[0].pageY-o.touch.start.y,a=o.touch.originalPos.top+r),y(a,"reset",0)}},U=function(t){o.viewport.unbind("touchmove MSPointerMove pointermove",R),o.controls.el.removeClass("disabled");var e=t.originalEvent,i="undefined"!=typeof e.changedTouches?e.changedTouches:[e],n=0,a=0;o.touch.end.x=i[0].pageX,o.touch.end.y=i[0].pageY,"fade"===o.settings.mode?(a=Math.abs(o.touch.start.x-o.touch.end.x),a>=o.settings.swipeThreshold&&(o.touch.start.x>o.touch.end.x?s.goToNextSlide():s.goToPrevSlide(),s.stopAuto())):("horizontal"===o.settings.mode?(a=o.touch.end.x-o.touch.start.x,n=o.touch.originalPos.left):(a=o.touch.end.y-o.touch.start.y,n=o.touch.originalPos.top),!o.settings.infiniteLoop&&(0===o.active.index&&a>0||o.active.last&&0>a)?y(n,"reset",200):Math.abs(a)>=o.settings.swipeThreshold?(0>a?s.goToNextSlide():s.goToPrevSlide(),s.stopAuto()):y(n,"reset",200)),o.viewport.unbind("touchend MSPointerUp pointerup",U),o.viewport.get(0).releasePointerCapture&&o.viewport.get(0).releasePointerCapture(o.pointerId)},Y=function(e){if(o.initialized)if(o.working)window.setTimeout(Y,10);else{var i=t(window).width(),n=t(window).height();a===i&&r===n||(a=i,r=n,s.redrawSlider(),o.settings.onSliderResize.call(s,o.active.index))}};return s.goToSlide=function(e,i){if(!o.working&&o.active.index!==e){o.working=!0,o.oldIndex=o.active.index,0>e?o.active.index=g()-1:e>=g()?o.active.index=0:o.active.index=e;var n=!0;if(n=o.settings.onSlideBefore(o.children.eq(o.active.index),o.oldIndex,o.active.index),"undefined"!=typeof n&&!n)return o.active.index=o.oldIndex,void(o.working=!1);if("next"===i?o.settings.onSlideNext(o.children.eq(o.active.index),o.oldIndex,o.active.index)||(n=!1):"prev"===i&&(o.settings.onSlidePrev(o.children.eq(o.active.index),o.oldIndex,o.active.index)||(n=!1)),"undefined"!=typeof n&&!n)return o.active.index=o.oldIndex,void(o.working=!1);if(o.active.last=o.active.index>=g()-1,(o.settings.pager||o.settings.pagerCustom)&&D(o.active.index),o.settings.controls&&A(),"fade"===o.settings.mode)o.settings.adaptiveHeight&&o.viewport.height()!==h()&&o.viewport.animate({height:h()},o.settings.adaptiveHeightSpeed),o.children.filter(":visible").fadeOut(o.settings.speed).css({zIndex:0}),o.children.eq(o.active.index).css("zIndex",o.settings.slideZIndex+1).fadeIn(o.settings.speed,function(){t(this).css("zIndex",o.settings.slideZIndex),F()});else{o.settings.adaptiveHeight&&o.viewport.height()!==h()&&o.viewport.animate({height:h()},o.settings.adaptiveHeightSpeed);var a=0,r={left:0,top:0},l=null;if(!o.settings.infiniteLoop&&o.carousel&&o.active.last)if("horizontal"===o.settings.mode)l=o.children.eq(o.children.length-1),r=l.position(),a=o.viewport.width()-l.outerWidth();else{var d=o.children.length-o.settings.minSlides;r=o.children.eq(d).position()}else if(o.carousel&&o.active.last&&"prev"===i){var c=1===o.settings.moveSlides?o.settings.maxSlides-v():(g()-1)*v()-(o.children.length-o.settings.maxSlides);l=s.children(".bx-clone").eq(c),r=l.position()}else if("next"===i&&0===o.active.index)r=s.find("> .bx-clone").eq(o.settings.maxSlides).position(),o.active.last=!1;else if(e>=0){var u=e*v();r=o.children.eq(u).position()}if("undefined"!=typeof r){var f="horizontal"===o.settings.mode?-(r.left-a):-r.top;y(f,"slide",o.settings.speed)}}}},s.goToNextSlide=function(){if(o.settings.infiniteLoop||!o.active.last){var t=parseInt(o.active.index)+1;s.goToSlide(t,"next")}},s.goToPrevSlide=function(){if(o.settings.infiniteLoop||0!==o.active.index){var t=parseInt(o.active.index)-1;s.goToSlide(t,"prev")}},s.startAuto=function(t){o.interval||(o.interval=setInterval(function(){"next"===o.settings.autoDirection?s.goToNextSlide():s.goToPrevSlide()},o.settings.pause),o.settings.autoControls&&t!==!0&&P("stop"))},s.stopAuto=function(t){o.interval&&(clearInterval(o.interval),o.interval=null,o.settings.autoControls&&t!==!0&&P("start"))},s.getCurrentSlide=function(){return o.active.index},s.getCurrentSlideElement=function(){return o.children.eq(o.active.index)},s.getSlideCount=function(){return o.children.length},s.isWorking=function(){return o.working},s.redrawSlider=function(){o.children.add(s.find(".bx-clone")).outerWidth(p()),o.viewport.css("height",h()),o.settings.ticker||b(),o.active.last&&(o.active.index=g()-1),o.active.index>=g()&&(o.active.last=!0),o.settings.pager&&!o.settings.pagerCustom&&(w(),D(o.active.index))},s.destroySlider=function(){o.initialized&&(o.initialized=!1,t(".bx-clone",this).remove(),o.children.each(function(){void 0!==t(this).data("origStyle")?t(this).attr("style",t(this).data("origStyle")):t(this).removeAttr("style")}),void 0!==t(this).data("origStyle")?this.attr("style",t(this).data("origStyle")):t(this).removeAttr("style"),t(this).unwrap().unwrap(),o.controls.el&&o.controls.el.remove(),o.controls.next&&o.controls.next.remove(),o.controls.prev&&o.controls.prev.remove(),o.pagerEl&&o.settings.controls&&!o.settings.pagerCustom&&o.pagerEl.remove(),t(".bx-caption",this).remove(),o.controls.autoEl&&o.controls.autoEl.remove(),clearInterval(o.interval),o.settings.responsive&&t(window).unbind("resize",Y),o.settings.keyboardEnabled&&t(document).unbind("keydown",L))},s.reloadSlider=function(t){void 0!==t&&(n=t),s.destroySlider(),l()},l(),this}}(jQuery),function(){var t=jQuery,e=function(){function t(){this.fadeDuration=500,this.fitImagesInViewport=!0,this.resizeDuration=700,this.positionFromTop=50,this.showImageNumberLabel=!0,this.alwaysShowNavOnTouchDevices=!1,this.wrapAround=!1}return t.prototype.albumLabel=function(t,e){return"Image "+t+" of "+e},t}(),i=function(){function e(t){this.options=t,this.album=[],this.currentImageIndex=void 0,this.init()}return e.prototype.init=function(){this.enable(),this.build()},e.prototype.enable=function(){var e=this;t("body").on("click","a[rel^=lightbox], area[rel^=lightbox], a[data-lightbox], area[data-lightbox]",function(i){return e.start(t(i.currentTarget)),!1})},e.prototype.build=function(){var e=this;t("<div id='lightboxOverlay' class='lightboxOverlay'></div><div id='lightbox' class='lightbox'><div class='lb-outerContainer'><div class='lb-container'><img class='lb-image' src='' /><div class='lb-nav'><a class='lb-prev' href='' ></a><a class='lb-next' href='' ></a></div><div class='lb-loader'><a class='lb-cancel'></a></div></div></div><div class='lb-dataContainer'><div class='lb-data'><div class='lb-details'><span class='lb-caption'></span><span class='lb-number'></span></div><div class='lb-closeContainer'><a class='lb-close'></a></div></div></div></div>").appendTo(t("body")),this.$lightbox=t("#lightbox"),this.$overlay=t("#lightboxOverlay"),this.$outerContainer=this.$lightbox.find(".lb-outerContainer"),this.$container=this.$lightbox.find(".lb-container"),this.containerTopPadding=parseInt(this.$container.css("padding-top"),10),this.containerRightPadding=parseInt(this.$container.css("padding-right"),10),this.containerBottomPadding=parseInt(this.$container.css("padding-bottom"),10),this.containerLeftPadding=parseInt(this.$container.css("padding-left"),10),this.$overlay.hide().on("click",function(){return e.end(),!1}),this.$lightbox.hide().on("click",function(i){return"lightbox"===t(i.target).attr("id")&&e.end(),!1}),this.$outerContainer.on("click",function(i){return"lightbox"===t(i.target).attr("id")&&e.end(),!1}),this.$lightbox.find(".lb-prev").on("click",function(){return 0===e.currentImageIndex?e.changeImage(e.album.length-1):e.changeImage(e.currentImageIndex-1),!1}),this.$lightbox.find(".lb-next").on("click",function(){return e.currentImageIndex===e.album.length-1?e.changeImage(0):e.changeImage(e.currentImageIndex+1),!1}),this.$lightbox.find(".lb-loader, .lb-close").on("click",function(){return e.end(),!1})},e.prototype.start=function(e){function i(t){n.album.push({link:t.attr("href"),title:t.attr("data-title")||t.attr("title")})}var n=this,o=t(window);o.on("resize",t.proxy(this.sizeOverlay,this)),t("select, object, embed").css({visibility:"hidden"}),this.sizeOverlay(),this.album=[];var s,a=0,r=e.attr("data-lightbox");if(r){s=t(e.prop("tagName")+'[data-lightbox="'+r+'"]');for(var l=0;l<s.length;l=++l)i(t(s[l])),s[l]===e[0]&&(a=l)}else if("lightbox"===e.attr("rel"))i(e);else{s=t(e.prop("tagName")+'[rel="'+e.attr("rel")+'"]');for(var d=0;d<s.length;d=++d)i(t(s[d])),s[d]===e[0]&&(a=d)}var c=o.scrollTop()+this.options.positionFromTop,u=o.scrollLeft();this.$lightbox.css({top:c+"px",left:u+"px"}).fadeIn(this.options.fadeDuration),this.changeImage(a)},e.prototype.changeImage=function(e){var i=this;this.disableKeyboardNav();var n=this.$lightbox.find(".lb-image");this.$overlay.fadeIn(this.options.fadeDuration),t(".lb-loader").fadeIn("slow"),this.$lightbox.find(".lb-image, .lb-nav, .lb-prev, .lb-next, .lb-dataContainer, .lb-numbers, .lb-caption").hide(),this.$outerContainer.addClass("animating");var o=new Image;o.onload=function(){var s,a,r,l,d,c,u;n.attr("src",i.album[e].link),s=t(o),n.width(o.width),n.height(o.height),i.options.fitImagesInViewport&&(u=t(window).width(),c=t(window).height(),d=u-i.containerLeftPadding-i.containerRightPadding-20,l=c-i.containerTopPadding-i.containerBottomPadding-120,(o.width>d||o.height>l)&&(o.width/d>o.height/l?(r=d,a=parseInt(o.height/(o.width/r),10),n.width(r),n.height(a)):(a=l,r=parseInt(o.width/(o.height/a),10),n.width(r),n.height(a)))),i.sizeContainer(n.width(),n.height())},o.src=this.album[e].link,this.currentImageIndex=e},e.prototype.sizeOverlay=function(){this.$overlay.width(t(window).width()).height(t(document).height())},e.prototype.sizeContainer=function(t,e){function i(){n.$lightbox.find(".lb-dataContainer").width(a),n.$lightbox.find(".lb-prevLink").height(r),n.$lightbox.find(".lb-nextLink").height(r),n.showImage()}var n=this,o=this.$outerContainer.outerWidth(),s=this.$outerContainer.outerHeight(),a=t+this.containerLeftPadding+this.containerRightPadding,r=e+this.containerTopPadding+this.containerBottomPadding;o!==a||s!==r?this.$outerContainer.animate({width:a,height:r},this.options.resizeDuration,"swing",function(){i()}):i()},e.prototype.showImage=function(){this.$lightbox.find(".lb-loader").hide(),this.$lightbox.find(".lb-image").fadeIn("slow"),this.updateNav(),this.updateDetails(),this.preloadNeighboringImages(),this.enableKeyboardNav()},e.prototype.updateNav=function(){var t=!1;try{document.createEvent("TouchEvent"),t=!!this.options.alwaysShowNavOnTouchDevices}catch(e){}this.$lightbox.find(".lb-nav").show(),this.album.length>1&&(this.options.wrapAround?(t&&this.$lightbox.find(".lb-prev, .lb-next").css("opacity","1"),this.$lightbox.find(".lb-prev, .lb-next").show()):(this.currentImageIndex>0&&(this.$lightbox.find(".lb-prev").show(),t&&this.$lightbox.find(".lb-prev").css("opacity","1")),this.currentImageIndex<this.album.length-1&&(this.$lightbox.find(".lb-next").show(),t&&this.$lightbox.find(".lb-next").css("opacity","1"))))},e.prototype.updateDetails=function(){var e=this;"undefined"!=typeof this.album[this.currentImageIndex].title&&""!==this.album[this.currentImageIndex].title&&this.$lightbox.find(".lb-caption").html(this.album[this.currentImageIndex].title).fadeIn("fast").find("a").on("click",function(e){location.href=t(this).attr("href")}),this.album.length>1&&this.options.showImageNumberLabel?this.$lightbox.find(".lb-number").text(this.options.albumLabel(this.currentImageIndex+1,this.album.length)).fadeIn("fast"):this.$lightbox.find(".lb-number").hide(),this.$outerContainer.removeClass("animating"),this.$lightbox.find(".lb-dataContainer").fadeIn(this.options.resizeDuration,function(){return e.sizeOverlay()})},e.prototype.preloadNeighboringImages=function(){if(this.album.length>this.currentImageIndex+1){var t=new Image;t.src=this.album[this.currentImageIndex+1].link}if(this.currentImageIndex>0){var e=new Image;e.src=this.album[this.currentImageIndex-1].link}},e.prototype.enableKeyboardNav=function(){t(document).on("keyup.keyboard",t.proxy(this.keyboardAction,this))},e.prototype.disableKeyboardNav=function(){t(document).off(".keyboard")},e.prototype.keyboardAction=function(t){var e=27,i=37,n=39,o=t.keyCode,s=String.fromCharCode(o).toLowerCase();o===e||s.match(/x|o|c/)?this.end():"p"===s||o===i?0!==this.currentImageIndex?this.changeImage(this.currentImageIndex-1):this.options.wrapAround&&this.album.length>1&&this.changeImage(this.album.length-1):"n"!==s&&o!==n||(this.currentImageIndex!==this.album.length-1?this.changeImage(this.currentImageIndex+1):this.options.wrapAround&&this.album.length>1&&this.changeImage(0))},e.prototype.end=function(){this.disableKeyboardNav(),t(window).off("resize",this.sizeOverlay),this.$lightbox.fadeOut(this.options.fadeDuration),this.$overlay.fadeOut(this.options.fadeDuration),t("select, object, embed").css({visibility:"visible"})},e}();t(function(){var t=new e;new i(t)})}.call(this),function(t,e){var i=function(t){return new a(t)};i.version="0.2";var n=t.fxSetup||{rates:{},base:""};i.rates=n.rates,i.base=n.base,i.settings={from:n.from||i.base,to:n.to||i.base};var o=i.convert=function(t,e){if("object"==typeof t&&t.length){for(var n=0;n<t.length;n++)t[n]=o(t[n],e);return t}return e=e||{},e.from||(e.from=i.settings.from),e.to||(e.to=i.settings.to),t*s(e.to,e.from)},s=function(t,e){var n=i.rates;if(n[i.base]=1,!n[t]||!n[e])throw"fx error";return e===i.base?n[t]:t===i.base?1/n[e]:n[t]*(1/n[e])},a=function(t){"string"==typeof t?(this._v=parseFloat(t.replace(/[^0-9-.]/g,"")),this._fx=t.replace(/([^A-Za-z])/g,"")):this._v=t},r=i.prototype=a.prototype;r.convert=function(){var t=Array.prototype.slice.call(arguments);return t.unshift(this._v),o.apply(i,t)},r.from=function(t){var e=i(o(this._v,{from:t,to:i.base}));return e._fx=i.base,e},r.to=function(t){return o(this._v,{from:this._fx?this._fx:i.settings.from,to:t})},"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=i),exports.fx=i):"function"==typeof define&&define.amd?define([],function(){return i}):(i.noConflict=function(n){return function(){return t.fx=n,i.noConflict=e,i}}(t.fx),t.fx=i)}(this),function(t){"use strict";t.fn.bPopup=function(e,i){function n(){v($.onOpen),Y=L.data("bPopup")||0,C=H+Y+"__",k="auto"!==$.position[1],T="auto"!==$.position[0],S="fixed"===$.positionStyle,D=j.outerHeight(!0),F=j.outerWidth(!0)}function o(){return $.modal&&t(".b-modal."+C).fadeTo($.speed,0,function(){t(this).remove()}),h(),clearTimeout(A),f(),!1}function s(){v($.onOpen),Y=(L.data("bPopup")||0)+1,C=H+Y+"__",k="auto"!==$.position[1],T="auto"!==$.position[0],S="fixed"===$.positionStyle,D=j.outerHeight(!0),F=j.outerWidth(!0),$.loadUrl?a():r()}function a(){switch($.contentContainer=t($.contentContainer||j),$.content){case"iframe":var e=t('<iframe class="b-iframe" '+$.iframeAttr+"></iframe>");e.appendTo($.contentContainer),D=j.outerHeight(!0),F=j.outerWidth(!0),r(),e.attr("src",$.loadUrl),v($.loadCallback);break;case"image":r(),t("<img />").load(function(){v($.loadCallback),c(t(this))}).attr("src",$.loadUrl).hide().appendTo($.contentContainer);break;default:r(),t('<div class="b-ajax-wrapper"></div>').load($.loadUrl,$.loadData,function(e,i,n){v($.loadCallback,i),c(t(this))}).hide().appendTo($.contentContainer)}}function r(){$.modal&&t('<div class="b-modal '+C+'"></div>').css({backgroundColor:$.modalColor,position:"fixed",top:0,right:0,bottom:0,left:0,opacity:0,zIndex:$.zIndex+Y}).appendTo($.appendTo).fadeTo($.speed,$.opacity),b(),j.data("bPopup",$).data("id",C).css({left:"slideIn"==$.transition||"slideBack"==$.transition?"slideBack"==$.transition?O.scrollLeft()+N:-1*(I+F):m(!(!$.follow[0]&&T||S)),position:$.positionStyle||"absolute",top:"slideDown"==$.transition||"slideUp"==$.transition?"slideUp"==$.transition?O.scrollTop()+z:E+-1*D:g(!(!$.follow[1]&&k||S)),"z-index":$.zIndex+Y+1}).each(function(){$.appending&&t(this).appendTo($.appendTo)}),f(!0)}function l(){return $.modal&&t(".b-modal."+j.data("id")).fadeTo($.speed,0,function(){t(this).remove()}),h(),clearTimeout(A),f(),!1}function d(e){z=w(),N=x(),_=y(),_&&(clearTimeout(P),P=setTimeout(function(){b(),e=e||$.followSpeed,j.dequeue().each(function(){S?t(this).css({left:I,top:E}):t(this).animate({left:$.follow[0]?m(!0):"auto",top:$.follow[1]?g(!0):"auto"},e,$.followEasing)})},50))}function c(t){var e=t.width(),i=t.height(),n={};$.contentContainer.css({height:i,width:e}),i>=j.height()&&(n.height=j.height()),e>=j.width()&&(n.width=j.width()),D=j.outerHeight(!0),F=j.outerWidth(!0),b(),$.contentContainer.css({height:"auto",width:"auto"}),n.left=m(!(!$.follow[0]&&T||S)),n.top=g(!(!$.follow[1]&&k||S)),j.animate(n,250,function(){t.show(),_=y()})}function u(){L.data("bPopup",Y),j.delegate(".bClose, ."+$.closeClass,"click."+C,l),$.modalClose&&t(".b-modal."+C).css("cursor","pointer").bind("click",l),R||!$.follow[0]&&!$.follow[1]||L.bind("scroll."+C,function(){_&&j.dequeue().animate({left:$.follow[0]?m(!S):"auto",top:$.follow[1]?g(!S):"auto"},$.followSpeed,$.followEasing)}).bind("resize."+C,function(){d()}),$.escClose&&O.bind("keydown."+C,function(t){27==t.which&&l()})}function h(){$.scrollBar||t("html").css("overflow","auto"),t(".b-modal."+C).unbind("click"),O.unbind("keydown."+C),L.unbind("."+C).data("bPopup",L.data("bPopup")-1>0?L.data("bPopup")-1:null),j.undelegate(".bClose, ."+$.closeClass,"click."+C,l).data("bPopup",null)}function f(t){function e(e){j.css({display:"block",opacity:1}).animate(e,$.speed,$.easing,function(){p(t)})}switch(t?$.transition:$.transitionClose||$.transition){case"slideIn":e({left:t?m(!(!$.follow[0]&&T||S)):O.scrollLeft()-(F||j.outerWidth(!0))-U});break;case"slideBack":e({left:t?m(!(!$.follow[0]&&T||S)):O.scrollLeft()+N+U});break;case"slideDown":e({top:t?g(!(!$.follow[1]&&k||S)):O.scrollTop()-(D||j.outerHeight(!0))-U});break;case"slideUp":e({top:t?g(!(!$.follow[1]&&k||S)):O.scrollTop()+z+U});break;case"fadeOut":q.hide(),j.stop().fadeOut($.speed);break;default:j.stop().fadeTo($.speed,t?1:0,function(){p(t)})}}function p(t){t?(u(),v(i),$.autoClose&&(A=setTimeout(l,$.autoClose))):(j.hide(),v($.onClose),$.loadUrl&&($.contentContainer.empty(),j.css({height:"auto",width:"auto"})))}function m(t){return t?I+O.scrollLeft():I}function g(t){return t?E+O.scrollTop():E}function v(e,i){t.isFunction(e)&&e.call(j,i)}function b(){E=k?$.position[1]:Math.max(0,(z-j.outerHeight(!0))/2-$.amsl),I=T?$.position[0]:(N-j.outerWidth(!0))/2,_=y()}function y(){return z>j.outerHeight(!0)&&N>j.outerWidth(!0)}function w(){return M.innerHeight||L.height()}function x(){return M.innerWidth||L.width()}t.isFunction(e)&&(i=e,e=null);var $=t.extend({},t.fn.bPopup.defaults,e);$.scrollBar||t("html").css("overflow","hidden");var C,_,k,T,S,E,I,D,F,P,A,j=this,q=t(this),O=t(document),M=window,L=t(M),z=w(),N=x(),H="__b-popup",R=/OS 6(_\d)+/i.test(navigator.userAgent),U=200,Y=0;return j.close=function(){n(),o()},j.reposition=function(t){d(t)},j.each(function(){t(this).data("bPopup")||s()})},t.fn.bPopup.defaults={amsl:50,appending:!0,appendTo:"body",autoClose:!1,closeClass:"b-close",content:"ajax",contentContainer:!1,easing:"swing",escClose:!0,follow:[!0,!0],followEasing:"swing",followSpeed:500,iframeAttr:'scrolling="no" frameborder="0"',loadCallback:!1,loadData:!1,loadUrl:!1,modal:!0,modalClose:!0,modalColor:"#000",onClose:!1,onOpen:!1,opacity:.7,position:["auto","auto"],positionStyle:"absolute",scrollBar:!0,speed:250,transition:"fadeIn",transitionClose:!1,zIndex:9997}}(jQuery),!function(t){var e={customOffset:!1,manual:!1,onlyInContainer:!0};t.fn.autofix_anything=function(i){var n=t.extend({},e,i),o=t(this),s=o.position(),a=n.customOffset,r=o.offset();o.addClass("autofix_sb"),t.fn.manualfix=function(){var e=t(this),i=e.offset();e.hasClass("fixed")?e.removeClass("fixed"):e.addClass("fixed").css({top:0,left:i.left,right:"auto",bottom:"auto"})},fixAll=function(e,i,n,o){0==i.customOffset&&(a=e.parent().offset().top),t(document).scrollTop()>a&&t(document).scrollTop()<=e.parent().height()+(a-t(window).height())?e.removeClass("bottom").addClass("fixed").css({top:0,left:o.left,right:"auto",bottom:"auto"}):t(document).scrollTop()>a?1==i.onlyInContainer&&(t(document).scrollTop()>e.parent().height()-t(window).height()?e.addClass("bottom fixed").removeAttr("style").css({left:n.left}):e.removeClass("bottom fixed").removeAttr("style")):e.removeClass("bottom fixed").removeAttr("style")},0==n.manual&&t(window).scroll(function(){fixAll(o,n,s,r)})}}(window.jQuery),function(){var t,e;t=this.jQuery||window.jQuery,e=t(window),t.fn.stick_in_parent=function(i){var n,o,s,a,r,l,d,c,u,h,f,p,m;for(null==i&&(i={}),m=i.sticky_class,l=i.inner_scrolling,p=i.recalc_every,f=i.parent,u=i.offset_top,c=i.spacer,s=i.bottoming,null==u&&(u=0),null==f&&(f=void 0),null==l&&(l=!0),null==m&&(m="is_stuck"),n=t(document),null==s&&(s=!0),h=function(t){var e,i,n;return window.getComputedStyle?(e=t[0],i=window.getComputedStyle(t[0]),n=parseFloat(i.getPropertyValue("width"))+parseFloat(i.getPropertyValue("margin-left"))+parseFloat(i.getPropertyValue("margin-right")),"border-box"!==i.getPropertyValue("box-sizing")&&(n+=parseFloat(i.getPropertyValue("border-left-width"))+parseFloat(i.getPropertyValue("border-right-width"))+parseFloat(i.getPropertyValue("padding-left"))+parseFloat(i.getPropertyValue("padding-right"))),n):t.outerWidth(!0)},a=function(i,o,a,r,d,g,v,b){var y,w,x,$,C,_,k,T,S,E,I,D;if(!i.data("sticky_kit")){if(i.data("sticky_kit",!0),C=n.height(),k=i.parent(),null!=f&&(k=k.closest(f)),!k.length)throw"failed to find stick parent";if(x=!1,y=!1,I=null!=c?c&&i.closest(c):t("<div />"),I&&I.css("position",i.css("position")),T=function(){var t,e,s;if(!b)return C=n.height(),t=parseInt(k.css("border-top-width"),10),e=parseInt(k.css("padding-top"),10),o=parseInt(k.css("padding-bottom"),10),a=k.offset().top+t+e,r=k.height(),x&&(x=!1,y=!1,null==c&&(i.insertAfter(I),I.detach()),i.css({position:"",top:"",width:"",bottom:""}).removeClass(m),s=!0),d=i.offset().top-(parseInt(i.css("margin-top"),10)||0)-u,g=i.outerHeight(!0),v=i.css("float"),I&&I.css({width:h(i),height:g,display:i.css("display"),"vertical-align":i.css("vertical-align"),"float":v}),s?D():void 0},T(),g!==r)return $=void 0,_=u,E=p,D=function(){var t,h,f,w,S,D;if(!b)return f=!1,null!=E&&(E-=1,0>=E&&(E=p,T(),f=!0)),f||n.height()===C||(T(),f=!0),w=e.scrollTop(),null!=$&&(h=w-$),$=w,x?(s&&(S=w+g+_>r+a,y&&!S&&(y=!1,i.css({position:"fixed",bottom:"",top:_}).trigger("sticky_kit:unbottom"))),d>w&&(x=!1,_=u,null==c&&("left"!==v&&"right"!==v||i.insertAfter(I),I.detach()),t={position:"",width:"",top:""},i.css(t).removeClass(m).trigger("sticky_kit:unstick")),l&&(D=e.height(),g+u>D&&(y||(_-=h,_=Math.max(D-g,_),_=Math.min(u,_),x&&i.css({top:_+"px"}))))):w>d&&(x=!0,t={position:"fixed",top:_},t.width="border-box"===i.css("box-sizing")?i.outerWidth()+"px":i.width()+"px",i.css(t).addClass(m),null==c&&(i.after(I),"left"!==v&&"right"!==v||I.append(i)),i.trigger("sticky_kit:stick")),x&&s&&(null==S&&(S=w+g+_>r+a),!y&&S)?(y=!0,"static"===k.css("position")&&k.css({position:"relative"}),i.css({position:"absolute",bottom:o,top:"auto"}).trigger("sticky_kit:bottom")):void 0},S=function(){return T(),D()},w=function(){return b=!0,e.off("touchmove",D),e.off("scroll",D),e.off("resize",S),t(document.body).off("sticky_kit:recalc",S),i.off("sticky_kit:detach",w),i.removeData("sticky_kit"),i.css({position:"",bottom:"",top:"",width:""}),k.position("position",""),x?(null==c&&("left"!==v&&"right"!==v||i.insertAfter(I),I.remove()),i.removeClass(m)):void 0},e.on("touchmove",D),e.on("scroll",D),e.on("resize",S),t(document.body).on("sticky_kit:recalc",S),i.on("sticky_kit:detach",w),setTimeout(D,0)}},r=0,d=this.length;d>r;r++)o=this[r],a(t(o));return this}}.call(this),function(t){t.fn.syncTranslit=function(e){var i=t.extend({},t.fn.syncTranslit.defaults,e);return i.strtr?t.fn.syncTranslit.strtr(i):this.each(function(){$this=t(this);var e=t.meta?t.extend({},i,$this.data()):i,n=t("#"+i.destination);e.destinationObject=n,Array.indexOf||(Array.prototype.indexOf=function(t){for(var e=0;e<this.length;e++)if(this[e]==t)return e;return-1}),$this.keyup(function(){for(var i=t(this).val(),o="",s=0;s<i.length;s++)o+=t.fn.syncTranslit.transliterate(i.charAt(s),e);var a=new RegExp("["+e.urlSeparator+"]{2,}","g");o=o.replace(a,e.urlSeparator),n.val(o)})})},t.fn.syncTranslit.strtr=function(e){for(var i=e._text?e._text:"",n="",o=0;o<i.length;o++)n+=t.fn.syncTranslit.transliterate(i.charAt(o),e);var s=new RegExp("["+e.urlSeparator+"]{2,}","g");return n=n.replace(s,e.urlSeparator)},t.fn.syncTranslit.transliterate=function(t,e){var i,n=!0;t.toLowerCase()!=t&&(n=!1),t=t.toLowerCase();var o=e.dictOriginal.indexOf(t);if(i=-1==o?t:e.dictTranslate[o],"url"==e.type){var s=i.charCodeAt(0);if("."==i)return".";if(s>=33&&47>=s&&45!=s||s>=58&&64>=s||s>=91&&96>=s||s>=123&&126>=s||s>=1072)return"";if(" "==i||"-"==i)return e.urlSeparator}return"upper"==e.caseStyle?i.toUpperCase():"normal"==e.caseStyle?n?i.toLowerCase():i.toUpperCase():i},t.fn.syncTranslit.defaults={dictOriginal:["а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","і","є","ї","ґ"],dictTranslate:["a","b","v","g","d","e","e","zh","z","i","j","k","l","m","n","o","p","r","s","t","u","f","h","ts","ch","sh","sch","","y","","e","ju","ja","i","je","ji","g"],caseStyle:"lower",urlSeparator:"-",type:"url"}}(jQuery),$(document).ready(function(){new String($(".box-form-subscribe > form input.email").attr("name"));$(".box-form-subscribe > form").validate({onfocusout:!1,onkeyup:!1,onclick:!0,onsubmit:!0,focusInvalid:!1,focusCleanup:!1,_email:{required:!0,email:!0},messages:{_email:{required:"The Email field is empty",email:"We’ll never share your email adress and you can opt out at any time, we promise."}},errorClass:"block-error",validClass:"success",invalidHandler:function(t,e){$(".box-form-subscribe > form .block-error").length&&$(".box-form-subscribe > form .block-error").html(" ").hide()},showErrors:function(t,e){var i="";$.each(e,function(){this.message&&(i+=this.message+"<br />")}),""!==i&&$(".box-form-subscribe > form .block-error").html(i).show()}})}),function(t){function e(e){h.html(t.trim(e))}function i(t){f.html(t)}function n(){e(""),i("")}function o(t){}function s(t,e){return["//www.youtube.com/embed/",t,"?rel=0&showsearch=0&autohide=",e.autohide,"&autoplay=",e.autoplay,"&controls=",e.controls,"&fs=",e.fs,"&loop=",e.loop,"&showinfo=",e.showinfo,"&color=",e.color,"&theme=",e.theme,"&wmode=transparent"].join("")}function a(t,e,i){return['<iframe title="YouTube video player" width="',e,'" height="',i,'" ','style="margin:0; padding:0; box-sizing:border-box; border:0; -webkit-border-radius:5px; -moz-border-radius:5px; border-radius:5px; margin:',p-1,'px;" ','src="',t,'" frameborder="0" allowfullscreen seamless></iframe>'].join("")}function r(i){t.ajax({url:window.location.protocol+"//query.yahooapis.com/v1/public/yql",data:{q:"select * from json where url ='http://www.youtube.com/oembed?url=http://www.youtube.com/watch?v="+i+"&format=json'",format:"json"},dataType:"jsonp",success:function(t){t&&t.query&&t.query.results&&t.query.results.json&&e(t.query.results.json.title)}})}function l(t){var e=/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*/,i=t.match(e);return i&&11==i[2].length?i[2]:!1}var d,c=null,u=null,h=null,f=null,p=5;d={init:function(d){if(d=t.extend({},t.fn.YouTubeModal.defaults,d),null==c){c=t('<div class="modal '+d.cssClass+'" id="YouTubeModal" role="dialog" aria-hidden="true">');var p='<div class="modal-dialog" id="YouTubeModalDialog"><div class="modal-content" id="YouTubeModalContent"><div class="video-wrapper"><div class="video-inner"><button type="button" data-dismiss="modal" aria-hidden="true" class="video-close close"></button><div class="modal-body" id="YouTubeModalBody"></div></div></div></div></div>';c.html(p).hide().appendTo("body"),u=t("#YouTubeModalDialog"),h=t("#YouTubeModalTitle"),f=t("#YouTubeModalBody"),c.modal({show:!1}).on("hide.bs.modal",n)}return this.each(function(){var n=t(this),u=n.data("YouTube");u||(n.data("YouTube",{target:n}),t(n).bind("click.YouTubeModal",function(u){var h=d.youtubeId;""==t.trim(h)&&n.is("a")&&(h=l(n.attr("href"))),""!=t.trim(h)&&h!==!1||(h=n.attr(d.idAttribute));var p=t.trim(d.title);""==p&&(d.useYouTubeTitle?r(h):p=n.attr("title")),p&&e(p),o(d.width);var m=s(h,d),g=a(m,d.width,d.height);f.css({"max-width":d.width,height:d.height}),i(g),c.modal("show"),u.preventDefault()}))})},destroy:function(){return this.each(function(){t(this).unbind(".YouTubeModal").removeData("YouTube")})}},t.fn.YouTubeModal=function(e){return d[e]?d[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error("Method "+e+" does not exist on Bootstrap.YouTubeModal"):d.init.apply(this,arguments)},t.fn.YouTubeModal.defaults={youtubeId:"",title:"",useYouTubeTitle:!0,idAttribute:"rel",cssClass:"YouTubeModal",width:640,height:480,autohide:2,autoplay:1,color:"red",controls:1,fs:1,loop:0,showinfo:0,theme:"light"}}(jQuery),!function(t){function e(e){h.html(t.trim(e))}function i(t){f.html(t)}function n(){e(""),i("")}function o(t){u.css({width:t+2*p})}function s(t,e){return["//www.youtube.com/embed/",t,"?rel=0&showsearch=0&autohide=",e.autohide,"&autoplay=",e.autoplay,"&controls=",e.controls,"&fs=",e.fs,"&loop=",e.loop,"&showinfo=",e.showinfo,"&color=",e.color,"&theme=",e.theme,"&wmode=transparent"].join("")}function a(t,e,i){return['<iframe title="YouTube video player" width="',e,'" height="',i,'" ','style="margin:0; padding:0; box-sizing:border-box; border:0; -webkit-border-radius:5px; -moz-border-radius:5px; border-radius:5px; margin:',p-1,'px;" ','src="',t,'" frameborder="0" allowfullscreen seamless></iframe>'].join("");
}function r(i){t.ajax({url:window.location.protocol+"//query.yahooapis.com/v1/public/yql",data:{q:"select * from json where url ='http://www.youtube.com/oembed?url=http://www.youtube.com/watch?v="+i+"&format=json'",format:"json"},dataType:"jsonp",success:function(t){t&&t.query&&t.query.results&&t.query.results.json&&e(t.query.results.json.title)}})}function l(t){var e=/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*/,i=t.match(e);return i&&11==i[2].length?i[2]:!1}var d,c=null,u=null,h=null,f=null,p=5;d={init:function(d){if(d=t.extend({},t.fn.YouTubeModal.defaults,d),null==c){c=t('<div class="modal fade '+d.cssClass+'" id="YouTubeModal" role="dialog" aria-hidden="true">');var p='<div class="modal-dialog" id="YouTubeModalDialog"><div class="modal-content" id="YouTubeModalContent"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">&times;</button><h4 class="modal-title" id="YouTubeModalTitle"></h4></div><div class="modal-body" id="YouTubeModalBody" style="padding:0;"></div></div></div>';c.html(p).hide().appendTo("body"),u=t("#YouTubeModalDialog"),h=t("#YouTubeModalTitle"),f=t("#YouTubeModalBody"),c.modal({show:!1}).on("hide.bs.modal",n)}return this.each(function(){var n=t(this),u=n.data("YouTube");u||(n.data("YouTube",{target:n}),t(n).bind("click.YouTubeModal",function(u){var h=d.youtubeId;""==t.trim(h)&&n.is("a")&&(h=l(n.attr("href"))),(""==t.trim(h)||h===!1)&&(h=n.attr(d.idAttribute));var f=t.trim(d.title);""==f&&(d.useYouTubeTitle?r(h):f=n.attr("title")),f&&e(f),o(d.width);var p=s(h,d),m=a(p,d.width,d.height);i(m),c.modal("show"),u.preventDefault()}))})},destroy:function(){return this.each(function(){t(this).unbind(".YouTubeModal").removeData("YouTube")})}},t.fn.YouTubeModal=function(e){return d[e]?d[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error("Method "+e+" does not exist on Bootstrap.YouTubeModal"):d.init.apply(this,arguments)},t.fn.YouTubeModal.defaults={youtubeId:"",title:"",useYouTubeTitle:!0,idAttribute:"rel",cssClass:"YouTubeModal",width:640,height:480,autohide:2,autoplay:1,color:"red",controls:1,fs:1,loop:0,showinfo:0,theme:"light"}}(jQuery),function(t){function e(e){h.html(t.trim(e))}function i(t){f.html(t)}function n(){e(""),i("")}function o(t){u.css({width:t+2*p})}function s(t,e){return["//www.youtube.com/embed/",t,"?rel=0&showsearch=0&autohide=",e.autohide,"&autoplay=",e.autoplay,"&controls=",e.controls,"&fs=",e.fs,"&loop=",e.loop,"&showinfo=",e.showinfo,"&color=",e.color,"&theme=",e.theme,"&wmode=transparent"].join("")}function a(t,e,i){return['<iframe title="YouTube video player" width="',e,'" height="',i,'" ','style="margin:0; padding:0; box-sizing:border-box; border:0; -webkit-border-radius:5px; -moz-border-radius:5px; border-radius:5px; margin:',p-1,'px;" ','src="',t,'" frameborder="0" allowfullscreen seamless></iframe>'].join("")}function r(i){t.ajax({url:window.location.protocol+"//query.yahooapis.com/v1/public/yql",data:{q:"select * from json where url ='http://www.youtube.com/oembed?url=http://www.youtube.com/watch?v="+i+"&format=json'",format:"json"},dataType:"jsonp",success:function(t){t&&t.query&&t.query.results&&t.query.results.json&&e(t.query.results.json.title)}})}function l(t){var e=/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*/,i=t.match(e);return i&&11==i[2].length?i[2]:!1}var d,c=null,u=null,h=null,f=null,p=5;d={init:function(d){if(d=t.extend({},t.fn.YouTubeModal.defaults,d),null==c){c=t('<div class="modal fade '+d.cssClass+'" id="YouTubeModal" role="dialog" aria-hidden="true">');var p='<div class="modal-dialog" id="YouTubeModalDialog"><div class="modal-content" id="YouTubeModalContent"><div class="modal-header"><button type="button" class="close" data-dismiss="modal">&times;</button><h4 class="modal-title" id="YouTubeModalTitle"></h4></div><div class="modal-body" id="YouTubeModalBody" style="padding:0;"></div></div></div>';c.html(p).hide().appendTo("body"),u=t("#YouTubeModalDialog"),h=t("#YouTubeModalTitle"),f=t("#YouTubeModalBody"),c.modal({show:!1}).on("hide.bs.modal",n)}return this.each(function(){var n=t(this),u=n.data("YouTube");u||(n.data("YouTube",{target:n}),t(n).bind("click.YouTubeModal",function(u){var h=d.youtubeId;""==t.trim(h)&&n.is("a")&&(h=l(n.attr("href"))),""!=t.trim(h)&&h!==!1||(h=n.attr(d.idAttribute));var f=t.trim(d.title);""==f&&(d.useYouTubeTitle?r(h):f=n.attr("title")),f&&e(f),o(d.width);var p=s(h,d),m=a(p,d.width,d.height);i(m),c.modal("show"),u.preventDefault()}))})},destroy:function(){return this.each(function(){t(this).unbind(".YouTubeModal").removeData("YouTube")})}},t.fn.YouTubeModal=function(e){return d[e]?d[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error("Method "+e+" does not exist on Bootstrap.YouTubeModal"):d.init.apply(this,arguments)},t.fn.YouTubeModal.defaults={youtubeId:"",title:"",useYouTubeTitle:!0,idAttribute:"rel",cssClass:"YouTubeModal",width:640,height:480,autohide:2,autoplay:1,color:"red",controls:1,fs:1,loop:0,showinfo:0,theme:"light"}}(jQuery);
//# sourceMappingURL=data:application/json;base64,
